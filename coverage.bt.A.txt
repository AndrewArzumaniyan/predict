/home/dvmuser3/andrey/npb-3.3-c/BT/bt.all.c:
    1|       |//-------------------------------------------------------------------------//
    2|       |//                                                                         //
    3|       |//  This benchmark is a serial C version of the NPB BT code. This C        //
    4|       |//  version is developed by the Center for Manycore Programming at Seoul   //
    5|       |//  National University and derived from the serial Fortran versions in    //
    6|       |//  "NPB3.3-SER" developed by NAS.                                         //
    7|       |//                                                                         //
    8|       |//  Permission to use, copy, distribute and modify this software for any   //
    9|       |//  purpose with or without fee is hereby granted. This software is        //
   10|       |//  provided "as is" without express or implied warranty.                  //
   11|       |//                                                                         //
   12|       |//  Information on NPB 3.3, including the technical report, the original   //
   13|       |//  specifications, source code, results and information on how to submit  //
   14|       |//  new results, is available at:                                          //
   15|       |//                                                                         //
   16|       |//           http://www.nas.nasa.gov/Software/NPB/                         //
   17|       |//                                                                         //
   18|       |//  Send comments or suggestions for this C version to cmp@aces.snu.ac.kr  //
   19|       |//                                                                         //
   20|       |//          Center for Manycore Programming                                //
   21|       |//          School of Computer Science and Engineering                     //
   22|       |//          Seoul National University                                      //
   23|       |//          Seoul 151-744, Korea                                           //
   24|       |//                                                                         //
   25|       |//          E-mail:  cmp@aces.snu.ac.kr                                    //
   26|       |//                                                                         //
   27|       |//-------------------------------------------------------------------------//
   28|       |
   29|       |//-------------------------------------------------------------------------//
   30|       |// Authors: Sangmin Seo, Jungwon Kim, Jun Lee, Jeongho Nah, Gangwon Jo,    //
   31|       |//          and Jaejin Lee                                                 //
   32|       |//-------------------------------------------------------------------------//
   33|       |
   34|       |//---------------------------------------------------------------------
   35|       |// program BT
   36|       |//---------------------------------------------------------------------
   37|       |
   38|       |#define _CRT_SECURE_NO_DEPRECATE
   39|       |#include <stdio.h>
   40|       |#include <stdlib.h>
   41|       |#include <math.h>
   42|       |
   43|       |#include "header.h"
   44|       |#include "timers.h"
   45|       |#include "print_results.h"
   46|       |#include "wtime.h"
   47|       |
   48|       |#include <time.h>
   49|       |#ifndef DOS
   50|       |#ifndef _WIN32
   51|       |#include <sys/time.h>
   52|       |#else
   53|       |#include <sys/timeb.h>
   54|       |#endif
   55|       |#endif
   56|       |
   57|       |/* common /global/ */
   58|       |int grid_points[3];
   59|       |logical timeron;
   60|       |
   61|       |/* common /constants/ */
   62|       |double tx1, tx2, tx3, ty1, ty2, ty3, tz1, tz2, tz3, dx1, dx2, dx3, dx4, dx5,
   63|       |    dy1, dy2, dy3, dy4, dy5, dz1, dz2, dz3, dz4, dz5, dssp, dt, ce[5][13],
   64|       |    dxmax, dymax, dzmax, xxcon1, xxcon2, xxcon3, xxcon4, xxcon5, dx1tx1, dx2tx1,
   65|       |    dx3tx1, dx4tx1, dx5tx1, yycon1, yycon2, yycon3, yycon4, yycon5, dy1ty1,
   66|       |    dy2ty1, dy3ty1, dy4ty1, dy5ty1, zzcon1, zzcon2, zzcon3, zzcon4, zzcon5,
   67|       |    dz1tz1, dz2tz1, dz3tz1, dz4tz1, dz5tz1, dnxm1, dnym1, dnzm1, c1c2, c1c5,
   68|       |    c3c4, c1345, conz1, c1, c2, c3, c4, c5, c4dssp, c5dssp, dtdssp, dttx1,
   69|       |    dttx2, dtty1, dtty2, dttz1, dttz2, c2dttx1, c2dtty1, c2dttz1, comz1, comz4,
   70|       |    comz5, comz6, c3c4tx3, c3c4ty3, c3c4tz3, c2iv, con43, con16;
   71|       |
   72|       |#pragma dvm template [KMAX][JMAXP1][IMAXP1] distribute [][][]
   73|       |void *dvm_tpl;
   74|       |
   75|       |// to improve cache performance, grid dimensions padded by 1
   76|       |// for even number sizes only.
   77|       |/* common /fields/ */
   78|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   79|       |double us[KMAX][JMAXP + 1][IMAXP + 1];
   80|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   81|       |double vs[KMAX][JMAXP + 1][IMAXP + 1];
   82|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   83|       |double ws[KMAX][JMAXP + 1][IMAXP + 1];
   84|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   85|       |double qs[KMAX][JMAXP + 1][IMAXP + 1];
   86|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   87|       |double rho_i[KMAX][JMAXP + 1][IMAXP + 1];
   88|       |#pragma dvm array align ([k][j][i] with dvm_tpl[k][j][i])
   89|       |double square[KMAX][JMAXP + 1][IMAXP + 1];
   90|       |#pragma dvm array align ([k][j][i][] with dvm_tpl[k][j][i])
   91|       |double forcing[KMAX][JMAXP + 1][IMAXP + 1][5];
   92|       |#pragma dvm array align ([k][j][i][] with dvm_tpl[k][j][i]) shadow[2][2][2][0]
   93|       |double u[KMAX][JMAXP + 1][IMAXP + 1][5];
   94|       |#pragma dvm array align ([k][j][i][] with dvm_tpl[k][j][i])
   95|       |double rhs[KMAX][JMAXP + 1][IMAXP + 1][5];
   96|       |
   97|       |/* common /work_1d/ */
   98|       |double cuf[PROBLEM_SIZE + 1];
   99|       |double q[PROBLEM_SIZE + 1];
  100|       |double ue[PROBLEM_SIZE + 1][5];
  101|       |double buf[PROBLEM_SIZE + 1][5];
  102|       |
  103|       |/* common /work_lhs/ */
  104|       |double fjac[PROBLEM_SIZE + 1][5][5];
  105|       |double njac[PROBLEM_SIZE + 1][5][5];
  106|       |double lhs[PROBLEM_SIZE + 1][3][5][5];
  107|       |double tmp1, tmp2, tmp3;
  108|       |
  109|      1|int main(int argc, char *argv[]) {
  110|      1|  int i, niter, step;
  111|      1|  double navg, mflops, n3;
  112|       |
  113|      1|  double tmax, t, trecs[t_last + 1];
  114|      1|  logical verified;
  115|      1|  char Class;
  116|      1|  char *t_names[t_last + 1];
  117|       |
  118|       |  //---------------------------------------------------------------------
  119|       |  // Root node reads input file (if it exists) else takes
  120|       |  // defaults from parameters
  121|       |  //---------------------------------------------------------------------
  122|      1|  FILE *fp;
  123|      1|  if ((fp = fopen("timer.flag", "r")) != NULL) {
  124|      0|    timeron = true;
  125|      0|    t_names[t_total] = "total";
  126|      0|    t_names[t_rhsx] = "rhsx";
  127|      0|    t_names[t_rhsy] = "rhsy";
  128|      0|    t_names[t_rhsz] = "rhsz";
  129|      0|    t_names[t_rhs] = "rhs";
  130|      0|    t_names[t_xsolve] = "xsolve";
  131|      0|    t_names[t_ysolve] = "ysolve";
  132|      0|    t_names[t_zsolve] = "zsolve";
  133|      0|    t_names[t_rdis1] = "redist1";
  134|      0|    t_names[t_rdis2] = "redist2";
  135|      0|    t_names[t_add] = "add";
  136|      0|    fclose(fp);
  137|      1|  } else {
  138|      1|    timeron = false;
  139|      1|  }
  140|       |
  141|      1|  printf("\n\n NAS Parallel Benchmarks (NPB3.3-SER-C) - BT Benchmark\n\n");
  142|       |
  143|      1|  if ((fp = fopen("inputbt.data", "r")) != NULL) {
  144|      0|    int result;
  145|      0|    printf(" Reading from input file inputbt.data\n");
  146|      0|    result = fscanf(fp, "%d", &niter);
  147|      0|    while (fgetc(fp) != '\n')
  148|      0|      ;
  149|      0|    result = fscanf(fp, "%lf", &dt);
  150|      0|    while (fgetc(fp) != '\n')
  151|      0|      ;
  152|      0|    result = fscanf(fp, "%d%d%d\n", &grid_points[0], &grid_points[1],
  153|      0|                    &grid_points[2]);
  154|      0|    fclose(fp);
  155|      1|  } else {
  156|      1|    printf(" No input file inputbt.data. Using compiled defaults\n");
  157|      1|    niter = NITER_DEFAULT;
  158|      1|    dt = DT_DEFAULT;
  159|      1|    grid_points[0] = PROBLEM_SIZE;
  160|      1|    grid_points[1] = PROBLEM_SIZE;
  161|      1|    grid_points[2] = PROBLEM_SIZE;
  162|      1|  }
  163|       |
  164|      1|  printf(" Size: %4dx%4dx%4d\n", grid_points[0], grid_points[1],
  165|      1|         grid_points[2]);
  166|      1|  printf(" Iterations: %4d    dt: %10.6f\n", niter, dt);
  167|      1|  printf("\n");
  168|       |
  169|      1|  if ((grid_points[0] > IMAX) || (grid_points[1] > JMAX) ||
  170|      1|      (grid_points[2] > KMAX)) {
  171|      0|    printf(" %d, %d, %d\n", grid_points[0], grid_points[1], grid_points[2]);
  172|      0|    printf(" Problem size too big for compiled array sizes\n");
  173|      0|    return 0;
  174|      0|  }
  175|       |
  176|      1|  set_constants();
  177|       |
  178|     12|  for (i = 1; i <= t_last; i++) {
  179|     11|    timer_clear(i);
  180|     11|  }
  181|       |
  182|      1|  initialize();
  183|       |
  184|      1|  exact_rhs();
  185|       |
  186|       |  //---------------------------------------------------------------------
  187|       |  // do one time step to touch all code, and reinitialize
  188|       |  //---------------------------------------------------------------------
  189|      1|#pragma dvm actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
  190|      1|  adi();
  191|      1|#pragma dvm get_actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
  192|      1|#pragma dvm redistribute(dvm_tpl[][][])
  193|      1|  initialize();
  194|      1|#pragma dvm actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
  195|     12|  for (i = 1; i <= t_last; i++) {
  196|     11|    timer_clear(i);
  197|     11|  }
  198|      1|  timer_start(1);
  199|       |
  200|    201|  for (step = 1; step <= niter; step++) {
  201|    200|    if ((step % 20) == 0 || step == 1) {
  202|     11|      printf(" Time step %4d\n", step);
  203|     11|    }
  204|       |
  205|    200|    adi();
  206|    200|  }
  207|       |
  208|      1|  timer_stop(1);
  209|      1|  tmax = timer_read(1);
  210|       |
  211|      1|#pragma dvm get_actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
  212|      1|#pragma dvm redistribute(dvm_tpl[][][])
  213|       |
  214|      1|  verify(niter, &Class, &verified);
  215|       |
  216|      1|  n3 = 1.0 * grid_points[0] * grid_points[1] * grid_points[2];
  217|      1|  navg = (grid_points[0] + grid_points[1] + grid_points[2]) / 3.0;
  218|      1|  if (tmax != 0.0) {
  219|      1|    mflops = 1.0e-6 * (double)niter *
  220|      1|             (3478.8 * n3 - 17655.7 * (navg * navg) + 28023.7 * navg) / tmax;
  221|      1|  } else {
  222|      0|    mflops = 0.0;
  223|      0|  }
  224|      1|  print_results("BT", Class, grid_points[0], grid_points[1], grid_points[2],
  225|      1|                niter, tmax, mflops, "          floating point", verified,
  226|      1|                NPBVERSION, COMPILETIME, CS1, CS2, CS3, CS4, CS5, CS6,
  227|      1|                "(none)");
  228|       |
  229|       |  //---------------------------------------------------------------------
  230|       |  // More timers
  231|       |  //---------------------------------------------------------------------
  232|      1|  if (timeron) {
  233|      0|    for (i = 1; i <= t_last; i++) {
  234|      0|      trecs[i] = timer_read(i);
  235|      0|    }
  236|       |
  237|      0|    if (tmax == 0.0)
  238|      0|      tmax = 1.0;
  239|      0|    printf("  SECTION   Time (secs)\n");
  240|      0|    for (i = 1; i <= t_last; i++) {
  241|      0|      printf("  %-8s:%9.3f  (%6.2f%%)\n", t_names[i], trecs[i],
  242|      0|             trecs[i] * 100. / tmax);
  243|      0|      if (i == t_rhs) {
  244|      0|        t = trecs[t_rhsx] + trecs[t_rhsy] + trecs[t_rhsz];
  245|      0|        printf("    --> %8s:%9.3f  (%6.2f%%)\n", "sub-rhs", t, t * 100. / tmax);
  246|      0|        t = trecs[t_rhs] - t;
  247|      0|        printf("    --> %8s:%9.3f  (%6.2f%%)\n", "rest-rhs", t,
  248|      0|               t * 100. / tmax);
  249|      0|      } else if (i == t_zsolve) {
  250|      0|        t = trecs[t_zsolve] - trecs[t_rdis1] - trecs[t_rdis2];
  251|      0|        printf("    --> %8s:%9.3f  (%6.2f%%)\n", "sub-zsol", t,
  252|      0|               t * 100. / tmax);
  253|      0|      } else if (i == t_rdis2) {
  254|      0|        t = trecs[t_rdis1] + trecs[t_rdis2];
  255|      0|        printf("    --> %8s:%9.3f  (%6.2f%%)\n", "redist", t, t * 100. / tmax);
  256|      0|      }
  257|      0|    }
  258|      0|  }
  259|       |
  260|      1|  return 0;
  261|      1|}
  262|       |
  263|       |//---------------------------------------------------------------------
  264|       |// addition of update to the vector u
  265|       |//---------------------------------------------------------------------
  266|    201|void add() {
  267|    201|  int i, j, k, m;
  268|       |
  269|    201|  if (timeron)
  270|      0|    timer_start(t_add);
  271|    201|#pragma dvm region
  272|    201|{
  273|    201|#pragma dvm parallel ([k][j][i][m] on u[k][j][i][m])
  274|  12.6k|  for (k = 1; k <= grid_points[2] - 2; k++) {
  275|   785k|    for (j = 1; j <= grid_points[1] - 2; j++) {
  276|  48.6M|      for (i = 1; i <= grid_points[0] - 2; i++) {
  277|   287M|        for (m = 0; m < 5; m++) {
  278|   239M|          u[k][j][i][m] = u[k][j][i][m] + rhs[k][j][i][m];
  279|   239M|        }
  280|  47.9M|      }
  281|   772k|    }
  282|  12.4k|  }
  283|    201|}
  284|    201|  if (timeron)
  285|      0|    timer_stop(t_add);
  286|    201|}
  287|       |
  288|    201|void adi() {
  289|    201|#pragma dvm redistribute(dvm_tpl[block][][])
  290|    201|  compute_rhs();
  291|       |
  292|    201|  x_solve();
  293|       |
  294|    201|  y_solve();
  295|       |
  296|    201|#pragma dvm redistribute(dvm_tpl[][block][block])
  297|    201|  z_solve();
  298|       |
  299|    201|  add();
  300|    201|#pragma dvm get_actual(u, rhs)
  301|    201|}
  302|       |
  303|       |//---------------------------------------------------------------------
  304|       |// this function computes the norm of the difference between the
  305|       |// computed solution and the exact solution
  306|       |//---------------------------------------------------------------------
  307|      1|void error_norm(double rms[5]) {
  308|      1|  int i, j, k, m, d;
  309|      1|  double xi, eta, zeta, u_exact[5], add;
  310|       |
  311|      6|  for (m = 0; m < 5; m++) {
  312|      5|    rms[m] = 0.0;
  313|      5|  }
  314|       |
  315|     65|  for (k = 0; k <= grid_points[2] - 1; k++) {
  316|     64|    zeta = (double)(k)*dnzm1;
  317|  4.16k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  318|  4.09k|      eta = (double)(j)*dnym1;
  319|   266k|      for (i = 0; i <= grid_points[0] - 1; i++) {
  320|   262k|        xi = (double)(i)*dnxm1;
  321|   262k|        exact_solution(xi, eta, zeta, u_exact);
  322|       |
  323|  1.57M|        for (m = 0; m < 5; m++) {
  324|  1.31M|          add = u[k][j][i][m] - u_exact[m];
  325|  1.31M|          rms[m] = rms[m] + add * add;
  326|  1.31M|        }
  327|   262k|      }
  328|  4.09k|    }
  329|     64|  }
  330|       |
  331|      6|  for (m = 0; m < 5; m++) {
  332|     20|    for (d = 0; d < 3; d++) {
  333|     15|      rms[m] = rms[m] / (double)(grid_points[d] - 2);
  334|     15|    }
  335|      5|    rms[m] = sqrt(rms[m]);
  336|      5|  }
  337|      1|}
  338|       |
  339|      1|void rhs_norm(double rms[5]) {
  340|      1|  int i, j, k, d, m;
  341|      1|  double add;
  342|       |
  343|      6|  for (m = 0; m < 5; m++) {
  344|      5|    rms[m] = 0.0;
  345|      5|  }
  346|       |
  347|     63|  for (k = 1; k <= grid_points[2] - 2; k++) {
  348|  3.90k|    for (j = 1; j <= grid_points[1] - 2; j++) {
  349|   242k|      for (i = 1; i <= grid_points[0] - 2; i++) {
  350|  1.42M|        for (m = 0; m < 5; m++) {
  351|  1.19M|          add = rhs[k][j][i][m];
  352|  1.19M|          rms[m] = rms[m] + add * add;
  353|  1.19M|        }
  354|   238k|      }
  355|  3.84k|    }
  356|     62|  }
  357|       |
  358|      6|  for (m = 0; m < 5; m++) {
  359|     20|    for (d = 0; d < 3; d++) {
  360|     15|      rms[m] = rms[m] / (double)(grid_points[d] - 2);
  361|     15|    }
  362|      5|    rms[m] = sqrt(rms[m]);
  363|      5|  }
  364|      1|}
  365|       |
  366|       |//---------------------------------------------------------------------
  367|       |// compute the right hand side based on exact solution
  368|       |//---------------------------------------------------------------------
  369|      1|void exact_rhs() {
  370|      1|  double dtemp[5], xi, eta, zeta, dtpp;
  371|      1|  int m, i, j, k, ip1, im1, jp1, jm1, km1, kp1;
  372|       |
  373|       |  //---------------------------------------------------------------------
  374|       |  // initialize
  375|       |  //---------------------------------------------------------------------
  376|     65|  for (k = 0; k <= grid_points[2] - 1; k++) {
  377|  4.16k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  378|   266k|      for (i = 0; i <= grid_points[0] - 1; i++) {
  379|  1.57M|        for (m = 0; m < 5; m++) {
  380|  1.31M|          forcing[k][j][i][m] = 0.0;
  381|  1.31M|        }
  382|   262k|      }
  383|  4.09k|    }
  384|     64|  }
  385|       |
  386|       |  //---------------------------------------------------------------------
  387|       |  // xi-direction flux differences
  388|       |  //---------------------------------------------------------------------
  389|     63|  for (k = 1; k <= grid_points[2] - 2; k++) {
  390|     62|    zeta = (double)(k)*dnzm1;
  391|  3.90k|    for (j = 1; j <= grid_points[1] - 2; j++) {
  392|  3.84k|      eta = (double)(j)*dnym1;
  393|       |
  394|   249k|      for (i = 0; i <= grid_points[0] - 1; i++) {
  395|   246k|        xi = (double)(i)*dnxm1;
  396|       |
  397|   246k|        exact_solution(xi, eta, zeta, dtemp);
  398|  1.47M|        for (m = 0; m < 5; m++) {
  399|  1.23M|          ue[i][m] = dtemp[m];
  400|  1.23M|        }
  401|       |
  402|   246k|        dtpp = 1.0 / dtemp[0];
  403|       |
  404|  1.23M|        for (m = 1; m < 5; m++) {
  405|   984k|          buf[i][m] = dtpp * dtemp[m];
  406|   984k|        }
  407|       |
  408|   246k|        cuf[i] = buf[i][1] * buf[i][1];
  409|   246k|        buf[i][0] = cuf[i] + buf[i][2] * buf[i][2] + buf[i][3] * buf[i][3];
  410|   246k|        q[i] = 0.5 * (buf[i][1] * ue[i][1] + buf[i][2] * ue[i][2] +
  411|   246k|                      buf[i][3] * ue[i][3]);
  412|   246k|      }
  413|       |
  414|   242k|      for (i = 1; i <= grid_points[0] - 2; i++) {
  415|   238k|        im1 = i - 1;
  416|   238k|        ip1 = i + 1;
  417|       |
  418|   238k|        forcing[k][j][i][0] =
  419|   238k|            forcing[k][j][i][0] - tx2 * (ue[ip1][1] - ue[im1][1]) +
  420|   238k|            dx1tx1 * (ue[ip1][0] - 2.0 * ue[i][0] + ue[im1][0]);
  421|       |
  422|   238k|        forcing[k][j][i][1] =
  423|   238k|            forcing[k][j][i][1] -
  424|   238k|            tx2 * ((ue[ip1][1] * buf[ip1][1] + c2 * (ue[ip1][4] - q[ip1])) -
  425|   238k|                   (ue[im1][1] * buf[im1][1] + c2 * (ue[im1][4] - q[im1]))) +
  426|   238k|            xxcon1 * (buf[ip1][1] - 2.0 * buf[i][1] + buf[im1][1]) +
  427|   238k|            dx2tx1 * (ue[ip1][1] - 2.0 * ue[i][1] + ue[im1][1]);
  428|       |
  429|   238k|        forcing[k][j][i][2] =
  430|   238k|            forcing[k][j][i][2] -
  431|   238k|            tx2 * (ue[ip1][2] * buf[ip1][1] - ue[im1][2] * buf[im1][1]) +
  432|   238k|            xxcon2 * (buf[ip1][2] - 2.0 * buf[i][2] + buf[im1][2]) +
  433|   238k|            dx3tx1 * (ue[ip1][2] - 2.0 * ue[i][2] + ue[im1][2]);
  434|       |
  435|   238k|        forcing[k][j][i][3] =
  436|   238k|            forcing[k][j][i][3] -
  437|   238k|            tx2 * (ue[ip1][3] * buf[ip1][1] - ue[im1][3] * buf[im1][1]) +
  438|   238k|            xxcon2 * (buf[ip1][3] - 2.0 * buf[i][3] + buf[im1][3]) +
  439|   238k|            dx4tx1 * (ue[ip1][3] - 2.0 * ue[i][3] + ue[im1][3]);
  440|       |
  441|   238k|        forcing[k][j][i][4] =
  442|   238k|            forcing[k][j][i][4] -
  443|   238k|            tx2 * (buf[ip1][1] * (c1 * ue[ip1][4] - c2 * q[ip1]) -
  444|   238k|                   buf[im1][1] * (c1 * ue[im1][4] - c2 * q[im1])) +
  445|   238k|            0.5 * xxcon3 * (buf[ip1][0] - 2.0 * buf[i][0] + buf[im1][0]) +
  446|   238k|            xxcon4 * (cuf[ip1] - 2.0 * cuf[i] + cuf[im1]) +
  447|   238k|            xxcon5 * (buf[ip1][4] - 2.0 * buf[i][4] + buf[im1][4]) +
  448|   238k|            dx5tx1 * (ue[ip1][4] - 2.0 * ue[i][4] + ue[im1][4]);
  449|   238k|      }
  450|       |
  451|       |      //---------------------------------------------------------------------
  452|       |      // Fourth-order dissipation
  453|       |      //---------------------------------------------------------------------
  454|  23.0k|      for (m = 0; m < 5; m++) {
  455|  19.2k|        i = 1;
  456|  19.2k|        forcing[k][j][i][m] =
  457|  19.2k|            forcing[k][j][i][m] -
  458|  19.2k|            dssp * (5.0 * ue[i][m] - 4.0 * ue[i + 1][m] + ue[i + 2][m]);
  459|  19.2k|        i = 2;
  460|  19.2k|        forcing[k][j][i][m] =
  461|  19.2k|            forcing[k][j][i][m] - dssp * (-4.0 * ue[i - 1][m] + 6.0 * ue[i][m] -
  462|  19.2k|                                          4.0 * ue[i + 1][m] + ue[i + 2][m]);
  463|  19.2k|      }
  464|       |
  465|   226k|      for (i = 3; i <= grid_points[0] - 4; i++) {
  466|  1.33M|        for (m = 0; m < 5; m++) {
  467|  1.11M|          forcing[k][j][i][m] =
  468|  1.11M|              forcing[k][j][i][m] -
  469|  1.11M|              dssp * (ue[i - 2][m] - 4.0 * ue[i - 1][m] + 6.0 * ue[i][m] -
  470|  1.11M|                      4.0 * ue[i + 1][m] + ue[i + 2][m]);
  471|  1.11M|        }
  472|   222k|      }
  473|       |
  474|  23.0k|      for (m = 0; m < 5; m++) {
  475|  19.2k|        i = grid_points[0] - 3;
  476|  19.2k|        forcing[k][j][i][m] =
  477|  19.2k|            forcing[k][j][i][m] - dssp * (ue[i - 2][m] - 4.0 * ue[i - 1][m] +
  478|  19.2k|                                          6.0 * ue[i][m] - 4.0 * ue[i + 1][m]);
  479|  19.2k|        i = grid_points[0] - 2;
  480|  19.2k|        forcing[k][j][i][m] =
  481|  19.2k|            forcing[k][j][i][m] -
  482|  19.2k|            dssp * (ue[i - 2][m] - 4.0 * ue[i - 1][m] + 5.0 * ue[i][m]);
  483|  19.2k|      }
  484|  3.84k|    }
  485|     62|  }
  486|       |
  487|       |  //---------------------------------------------------------------------
  488|       |  // eta-direction flux differences
  489|       |  //---------------------------------------------------------------------
  490|     63|  for (k = 1; k <= grid_points[2] - 2; k++) {
  491|     62|    zeta = (double)(k)*dnzm1;
  492|  3.90k|    for (i = 1; i <= grid_points[0] - 2; i++) {
  493|  3.84k|      xi = (double)(i)*dnxm1;
  494|       |
  495|   249k|      for (j = 0; j <= grid_points[1] - 1; j++) {
  496|   246k|        eta = (double)(j)*dnym1;
  497|       |
  498|   246k|        exact_solution(xi, eta, zeta, dtemp);
  499|  1.47M|        for (m = 0; m < 5; m++) {
  500|  1.23M|          ue[j][m] = dtemp[m];
  501|  1.23M|        }
  502|       |
  503|   246k|        dtpp = 1.0 / dtemp[0];
  504|       |
  505|  1.23M|        for (m = 1; m < 5; m++) {
  506|   984k|          buf[j][m] = dtpp * dtemp[m];
  507|   984k|        }
  508|       |
  509|   246k|        cuf[j] = buf[j][2] * buf[j][2];
  510|   246k|        buf[j][0] = cuf[j] + buf[j][1] * buf[j][1] + buf[j][3] * buf[j][3];
  511|   246k|        q[j] = 0.5 * (buf[j][1] * ue[j][1] + buf[j][2] * ue[j][2] +
  512|   246k|                      buf[j][3] * ue[j][3]);
  513|   246k|      }
  514|       |
  515|   242k|      for (j = 1; j <= grid_points[1] - 2; j++) {
  516|   238k|        jm1 = j - 1;
  517|   238k|        jp1 = j + 1;
  518|       |
  519|   238k|        forcing[k][j][i][0] =
  520|   238k|            forcing[k][j][i][0] - ty2 * (ue[jp1][2] - ue[jm1][2]) +
  521|   238k|            dy1ty1 * (ue[jp1][0] - 2.0 * ue[j][0] + ue[jm1][0]);
  522|       |
  523|   238k|        forcing[k][j][i][1] =
  524|   238k|            forcing[k][j][i][1] -
  525|   238k|            ty2 * (ue[jp1][1] * buf[jp1][2] - ue[jm1][1] * buf[jm1][2]) +
  526|   238k|            yycon2 * (buf[jp1][1] - 2.0 * buf[j][1] + buf[jm1][1]) +
  527|   238k|            dy2ty1 * (ue[jp1][1] - 2.0 * ue[j][1] + ue[jm1][1]);
  528|       |
  529|   238k|        forcing[k][j][i][2] =
  530|   238k|            forcing[k][j][i][2] -
  531|   238k|            ty2 * ((ue[jp1][2] * buf[jp1][2] + c2 * (ue[jp1][4] - q[jp1])) -
  532|   238k|                   (ue[jm1][2] * buf[jm1][2] + c2 * (ue[jm1][4] - q[jm1]))) +
  533|   238k|            yycon1 * (buf[jp1][2] - 2.0 * buf[j][2] + buf[jm1][2]) +
  534|   238k|            dy3ty1 * (ue[jp1][2] - 2.0 * ue[j][2] + ue[jm1][2]);
  535|       |
  536|   238k|        forcing[k][j][i][3] =
  537|   238k|            forcing[k][j][i][3] -
  538|   238k|            ty2 * (ue[jp1][3] * buf[jp1][2] - ue[jm1][3] * buf[jm1][2]) +
  539|   238k|            yycon2 * (buf[jp1][3] - 2.0 * buf[j][3] + buf[jm1][3]) +
  540|   238k|            dy4ty1 * (ue[jp1][3] - 2.0 * ue[j][3] + ue[jm1][3]);
  541|       |
  542|   238k|        forcing[k][j][i][4] =
  543|   238k|            forcing[k][j][i][4] -
  544|   238k|            ty2 * (buf[jp1][2] * (c1 * ue[jp1][4] - c2 * q[jp1]) -
  545|   238k|                   buf[jm1][2] * (c1 * ue[jm1][4] - c2 * q[jm1])) +
  546|   238k|            0.5 * yycon3 * (buf[jp1][0] - 2.0 * buf[j][0] + buf[jm1][0]) +
  547|   238k|            yycon4 * (cuf[jp1] - 2.0 * cuf[j] + cuf[jm1]) +
  548|   238k|            yycon5 * (buf[jp1][4] - 2.0 * buf[j][4] + buf[jm1][4]) +
  549|   238k|            dy5ty1 * (ue[jp1][4] - 2.0 * ue[j][4] + ue[jm1][4]);
  550|   238k|      }
  551|       |
  552|       |      //---------------------------------------------------------------------
  553|       |      // Fourth-order dissipation
  554|       |      //---------------------------------------------------------------------
  555|  23.0k|      for (m = 0; m < 5; m++) {
  556|  19.2k|        j = 1;
  557|  19.2k|        forcing[k][j][i][m] =
  558|  19.2k|            forcing[k][j][i][m] -
  559|  19.2k|            dssp * (5.0 * ue[j][m] - 4.0 * ue[j + 1][m] + ue[j + 2][m]);
  560|  19.2k|        j = 2;
  561|  19.2k|        forcing[k][j][i][m] =
  562|  19.2k|            forcing[k][j][i][m] - dssp * (-4.0 * ue[j - 1][m] + 6.0 * ue[j][m] -
  563|  19.2k|                                          4.0 * ue[j + 1][m] + ue[j + 2][m]);
  564|  19.2k|      }
  565|       |
  566|   226k|      for (j = 3; j <= grid_points[1] - 4; j++) {
  567|  1.33M|        for (m = 0; m < 5; m++) {
  568|  1.11M|          forcing[k][j][i][m] =
  569|  1.11M|              forcing[k][j][i][m] -
  570|  1.11M|              dssp * (ue[j - 2][m] - 4.0 * ue[j - 1][m] + 6.0 * ue[j][m] -
  571|  1.11M|                      4.0 * ue[j + 1][m] + ue[j + 2][m]);
  572|  1.11M|        }
  573|   222k|      }
  574|       |
  575|  23.0k|      for (m = 0; m < 5; m++) {
  576|  19.2k|        j = grid_points[1] - 3;
  577|  19.2k|        forcing[k][j][i][m] =
  578|  19.2k|            forcing[k][j][i][m] - dssp * (ue[j - 2][m] - 4.0 * ue[j - 1][m] +
  579|  19.2k|                                          6.0 * ue[j][m] - 4.0 * ue[j + 1][m]);
  580|  19.2k|        j = grid_points[1] - 2;
  581|  19.2k|        forcing[k][j][i][m] =
  582|  19.2k|            forcing[k][j][i][m] -
  583|  19.2k|            dssp * (ue[j - 2][m] - 4.0 * ue[j - 1][m] + 5.0 * ue[j][m]);
  584|  19.2k|      }
  585|  3.84k|    }
  586|     62|  }
  587|       |
  588|       |  //---------------------------------------------------------------------
  589|       |  // zeta-direction flux differences
  590|       |  //---------------------------------------------------------------------
  591|     63|  for (j = 1; j <= grid_points[1] - 2; j++) {
  592|     62|    eta = (double)(j)*dnym1;
  593|  3.90k|    for (i = 1; i <= grid_points[0] - 2; i++) {
  594|  3.84k|      xi = (double)(i)*dnxm1;
  595|       |
  596|   249k|      for (k = 0; k <= grid_points[2] - 1; k++) {
  597|   246k|        zeta = (double)(k)*dnzm1;
  598|       |
  599|   246k|        exact_solution(xi, eta, zeta, dtemp);
  600|  1.47M|        for (m = 0; m < 5; m++) {
  601|  1.23M|          ue[k][m] = dtemp[m];
  602|  1.23M|        }
  603|       |
  604|   246k|        dtpp = 1.0 / dtemp[0];
  605|       |
  606|  1.23M|        for (m = 1; m < 5; m++) {
  607|   984k|          buf[k][m] = dtpp * dtemp[m];
  608|   984k|        }
  609|       |
  610|   246k|        cuf[k] = buf[k][3] * buf[k][3];
  611|   246k|        buf[k][0] = cuf[k] + buf[k][1] * buf[k][1] + buf[k][2] * buf[k][2];
  612|   246k|        q[k] = 0.5 * (buf[k][1] * ue[k][1] + buf[k][2] * ue[k][2] +
  613|   246k|                      buf[k][3] * ue[k][3]);
  614|   246k|      }
  615|       |
  616|   242k|      for (k = 1; k <= grid_points[2] - 2; k++) {
  617|   238k|        km1 = k - 1;
  618|   238k|        kp1 = k + 1;
  619|       |
  620|   238k|        forcing[k][j][i][0] =
  621|   238k|            forcing[k][j][i][0] - tz2 * (ue[kp1][3] - ue[km1][3]) +
  622|   238k|            dz1tz1 * (ue[kp1][0] - 2.0 * ue[k][0] + ue[km1][0]);
  623|       |
  624|   238k|        forcing[k][j][i][1] =
  625|   238k|            forcing[k][j][i][1] -
  626|   238k|            tz2 * (ue[kp1][1] * buf[kp1][3] - ue[km1][1] * buf[km1][3]) +
  627|   238k|            zzcon2 * (buf[kp1][1] - 2.0 * buf[k][1] + buf[km1][1]) +
  628|   238k|            dz2tz1 * (ue[kp1][1] - 2.0 * ue[k][1] + ue[km1][1]);
  629|       |
  630|   238k|        forcing[k][j][i][2] =
  631|   238k|            forcing[k][j][i][2] -
  632|   238k|            tz2 * (ue[kp1][2] * buf[kp1][3] - ue[km1][2] * buf[km1][3]) +
  633|   238k|            zzcon2 * (buf[kp1][2] - 2.0 * buf[k][2] + buf[km1][2]) +
  634|   238k|            dz3tz1 * (ue[kp1][2] - 2.0 * ue[k][2] + ue[km1][2]);
  635|       |
  636|   238k|        forcing[k][j][i][3] =
  637|   238k|            forcing[k][j][i][3] -
  638|   238k|            tz2 * ((ue[kp1][3] * buf[kp1][3] + c2 * (ue[kp1][4] - q[kp1])) -
  639|   238k|                   (ue[km1][3] * buf[km1][3] + c2 * (ue[km1][4] - q[km1]))) +
  640|   238k|            zzcon1 * (buf[kp1][3] - 2.0 * buf[k][3] + buf[km1][3]) +
  641|   238k|            dz4tz1 * (ue[kp1][3] - 2.0 * ue[k][3] + ue[km1][3]);
  642|       |
  643|   238k|        forcing[k][j][i][4] =
  644|   238k|            forcing[k][j][i][4] -
  645|   238k|            tz2 * (buf[kp1][3] * (c1 * ue[kp1][4] - c2 * q[kp1]) -
  646|   238k|                   buf[km1][3] * (c1 * ue[km1][4] - c2 * q[km1])) +
  647|   238k|            0.5 * zzcon3 * (buf[kp1][0] - 2.0 * buf[k][0] + buf[km1][0]) +
  648|   238k|            zzcon4 * (cuf[kp1] - 2.0 * cuf[k] + cuf[km1]) +
  649|   238k|            zzcon5 * (buf[kp1][4] - 2.0 * buf[k][4] + buf[km1][4]) +
  650|   238k|            dz5tz1 * (ue[kp1][4] - 2.0 * ue[k][4] + ue[km1][4]);
  651|   238k|      }
  652|       |
  653|       |      //---------------------------------------------------------------------
  654|       |      // Fourth-order dissipation
  655|       |      //---------------------------------------------------------------------
  656|  23.0k|      for (m = 0; m < 5; m++) {
  657|  19.2k|        k = 1;
  658|  19.2k|        forcing[k][j][i][m] =
  659|  19.2k|            forcing[k][j][i][m] -
  660|  19.2k|            dssp * (5.0 * ue[k][m] - 4.0 * ue[k + 1][m] + ue[k + 2][m]);
  661|  19.2k|        k = 2;
  662|  19.2k|        forcing[k][j][i][m] =
  663|  19.2k|            forcing[k][j][i][m] - dssp * (-4.0 * ue[k - 1][m] + 6.0 * ue[k][m] -
  664|  19.2k|                                          4.0 * ue[k + 1][m] + ue[k + 2][m]);
  665|  19.2k|      }
  666|       |
  667|   226k|      for (k = 3; k <= grid_points[2] - 4; k++) {
  668|  1.33M|        for (m = 0; m < 5; m++) {
  669|  1.11M|          forcing[k][j][i][m] =
  670|  1.11M|              forcing[k][j][i][m] -
  671|  1.11M|              dssp * (ue[k - 2][m] - 4.0 * ue[k - 1][m] + 6.0 * ue[k][m] -
  672|  1.11M|                      4.0 * ue[k + 1][m] + ue[k + 2][m]);
  673|  1.11M|        }
  674|   222k|      }
  675|       |
  676|  23.0k|      for (m = 0; m < 5; m++) {
  677|  19.2k|        k = grid_points[2] - 3;
  678|  19.2k|        forcing[k][j][i][m] =
  679|  19.2k|            forcing[k][j][i][m] - dssp * (ue[k - 2][m] - 4.0 * ue[k - 1][m] +
  680|  19.2k|                                          6.0 * ue[k][m] - 4.0 * ue[k + 1][m]);
  681|  19.2k|        k = grid_points[2] - 2;
  682|  19.2k|        forcing[k][j][i][m] =
  683|  19.2k|            forcing[k][j][i][m] -
  684|  19.2k|            dssp * (ue[k - 2][m] - 4.0 * ue[k - 1][m] + 5.0 * ue[k][m]);
  685|  19.2k|      }
  686|  3.84k|    }
  687|     62|  }
  688|       |
  689|       |  //---------------------------------------------------------------------
  690|       |  // now change the sign of the forcing function,
  691|       |  //---------------------------------------------------------------------
  692|     63|  for (k = 1; k <= grid_points[2] - 2; k++) {
  693|  3.90k|    for (j = 1; j <= grid_points[1] - 2; j++) {
  694|   242k|      for (i = 1; i <= grid_points[0] - 2; i++) {
  695|  1.42M|        for (m = 0; m < 5; m++) {
  696|  1.19M|          forcing[k][j][i][m] = -1.0 * forcing[k][j][i][m];
  697|  1.19M|        }
  698|   238k|      }
  699|  3.84k|    }
  700|     62|  }
  701|      1|}
  702|       |
  703|       |//---------------------------------------------------------------------
  704|       |// this function returns the exact solution at point xi, eta, zeta
  705|       |//---------------------------------------------------------------------
  706|  4.19M|void exact_solution(double xi, double eta, double zeta, double dtemp[5]) {
  707|  4.19M|  int m;
  708|       |
  709|  25.1M|  for (m = 0; m < 5; m++) {
  710|  20.9M|    dtemp[m] =
  711|  20.9M|        ce[m][0] +
  712|  20.9M|        xi * (ce[m][1] + xi * (ce[m][4] + xi * (ce[m][7] + xi * ce[m][10]))) +
  713|  20.9M|        eta *
  714|  20.9M|            (ce[m][2] + eta * (ce[m][5] + eta * (ce[m][8] + eta * ce[m][11]))) +
  715|  20.9M|        zeta * (ce[m][3] +
  716|  20.9M|                zeta * (ce[m][6] + zeta * (ce[m][9] + zeta * ce[m][12])));
  717|  20.9M|  }
  718|  4.19M|}
  719|       |
  720|       |//---------------------------------------------------------------------
  721|       |// This subroutine initializes the field variable u using
  722|       |// tri-linear transfinite interpolation of the boundary values
  723|       |//---------------------------------------------------------------------
  724|      2|void initialize() {
  725|      2|  int i, j, k, m, ix, iy, iz;
  726|      2|  double xi, eta, zeta, Pface[2][3][5], Pxi, Peta, Pzeta, temp[5];
  727|       |
  728|       |  //---------------------------------------------------------------------
  729|       |  // Later (in compute_rhs) we compute 1/u for every element. A few of
  730|       |  // the corner elements are not used, but it convenient (and faster)
  731|       |  // to compute the whole thing with a simple loop. Make sure those
  732|       |  // values are nonzero by initializing the whole thing here.
  733|       |  //---------------------------------------------------------------------
  734|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  735|  8.32k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  736|   532k|      for (i = 0; i <= grid_points[0] - 1; i++) {
  737|  3.14M|        for (m = 0; m < 5; m++) {
  738|  2.62M|          u[k][j][i][m] = 1.0;
  739|  2.62M|        }
  740|   524k|      }
  741|  8.19k|    }
  742|    128|  }
  743|       |
  744|       |  //---------------------------------------------------------------------
  745|       |  // first store the "interpolated" values everywhere on the grid
  746|       |  //---------------------------------------------------------------------
  747|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  748|    128|    zeta = (double)(k)*dnzm1;
  749|  8.32k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  750|  8.19k|      eta = (double)(j)*dnym1;
  751|   532k|      for (i = 0; i <= grid_points[0] - 1; i++) {
  752|   524k|        xi = (double)(i)*dnxm1;
  753|       |
  754|  1.57M|        for (ix = 0; ix < 2; ix++) {
  755|  1.04M|          exact_solution((double)ix, eta, zeta, &Pface[ix][0][0]);
  756|  1.04M|        }
  757|       |
  758|  1.57M|        for (iy = 0; iy < 2; iy++) {
  759|  1.04M|          exact_solution(xi, (double)iy, zeta, &Pface[iy][1][0]);
  760|  1.04M|        }
  761|       |
  762|  1.57M|        for (iz = 0; iz < 2; iz++) {
  763|  1.04M|          exact_solution(xi, eta, (double)iz, &Pface[iz][2][0]);
  764|  1.04M|        }
  765|       |
  766|  3.14M|        for (m = 0; m < 5; m++) {
  767|  2.62M|          Pxi = xi * Pface[1][0][m] + (1.0 - xi) * Pface[0][0][m];
  768|  2.62M|          Peta = eta * Pface[1][1][m] + (1.0 - eta) * Pface[0][1][m];
  769|  2.62M|          Pzeta = zeta * Pface[1][2][m] + (1.0 - zeta) * Pface[0][2][m];
  770|       |
  771|  2.62M|          u[k][j][i][m] = Pxi + Peta + Pzeta - Pxi * Peta - Pxi * Pzeta -
  772|  2.62M|                          Peta * Pzeta + Pxi * Peta * Pzeta;
  773|  2.62M|        }
  774|   524k|      }
  775|  8.19k|    }
  776|    128|  }
  777|       |
  778|       |  //---------------------------------------------------------------------
  779|       |  // now store the exact values on the boundaries
  780|       |  //---------------------------------------------------------------------
  781|       |
  782|       |  //---------------------------------------------------------------------
  783|       |  // west face
  784|       |  //---------------------------------------------------------------------
  785|      2|  i = 0;
  786|      2|  xi = 0.0;
  787|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  788|    128|    zeta = (double)(k)*dnzm1;
  789|  8.32k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  790|  8.19k|      eta = (double)(j)*dnym1;
  791|  8.19k|      exact_solution(xi, eta, zeta, temp);
  792|  49.1k|      for (m = 0; m < 5; m++) {
  793|  40.9k|        u[k][j][i][m] = temp[m];
  794|  40.9k|      }
  795|  8.19k|    }
  796|    128|  }
  797|       |
  798|       |  //---------------------------------------------------------------------
  799|       |  // east face
  800|       |  //---------------------------------------------------------------------
  801|      2|  i = grid_points[0] - 1;
  802|      2|  xi = 1.0;
  803|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  804|    128|    zeta = (double)(k)*dnzm1;
  805|  8.32k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  806|  8.19k|      eta = (double)(j)*dnym1;
  807|  8.19k|      exact_solution(xi, eta, zeta, temp);
  808|  49.1k|      for (m = 0; m < 5; m++) {
  809|  40.9k|        u[k][j][i][m] = temp[m];
  810|  40.9k|      }
  811|  8.19k|    }
  812|    128|  }
  813|       |
  814|       |  //---------------------------------------------------------------------
  815|       |  // south face
  816|       |  //---------------------------------------------------------------------
  817|      2|  j = 0;
  818|      2|  eta = 0.0;
  819|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  820|    128|    zeta = (double)(k)*dnzm1;
  821|  8.32k|    for (i = 0; i <= grid_points[0] - 1; i++) {
  822|  8.19k|      xi = (double)(i)*dnxm1;
  823|  8.19k|      exact_solution(xi, eta, zeta, temp);
  824|  49.1k|      for (m = 0; m < 5; m++) {
  825|  40.9k|        u[k][j][i][m] = temp[m];
  826|  40.9k|      }
  827|  8.19k|    }
  828|    128|  }
  829|       |
  830|       |  //---------------------------------------------------------------------
  831|       |  // north face
  832|       |  //---------------------------------------------------------------------
  833|      2|  j = grid_points[1] - 1;
  834|      2|  eta = 1.0;
  835|    130|  for (k = 0; k <= grid_points[2] - 1; k++) {
  836|    128|    zeta = (double)(k)*dnzm1;
  837|  8.32k|    for (i = 0; i <= grid_points[0] - 1; i++) {
  838|  8.19k|      xi = (double)(i)*dnxm1;
  839|  8.19k|      exact_solution(xi, eta, zeta, temp);
  840|  49.1k|      for (m = 0; m < 5; m++) {
  841|  40.9k|        u[k][j][i][m] = temp[m];
  842|  40.9k|      }
  843|  8.19k|    }
  844|    128|  }
  845|       |
  846|       |  //---------------------------------------------------------------------
  847|       |  // bottom face
  848|       |  //---------------------------------------------------------------------
  849|      2|  k = 0;
  850|      2|  zeta = 0.0;
  851|    130|  for (j = 0; j <= grid_points[1] - 1; j++) {
  852|    128|    eta = (double)(j)*dnym1;
  853|  8.32k|    for (i = 0; i <= grid_points[0] - 1; i++) {
  854|  8.19k|      xi = (double)(i)*dnxm1;
  855|  8.19k|      exact_solution(xi, eta, zeta, temp);
  856|  49.1k|      for (m = 0; m < 5; m++) {
  857|  40.9k|        u[k][j][i][m] = temp[m];
  858|  40.9k|      }
  859|  8.19k|    }
  860|    128|  }
  861|       |
  862|       |  //---------------------------------------------------------------------
  863|       |  // top face
  864|       |  //---------------------------------------------------------------------
  865|      2|  k = grid_points[2] - 1;
  866|      2|  zeta = 1.0;
  867|    130|  for (j = 0; j <= grid_points[1] - 1; j++) {
  868|    128|    eta = (double)(j)*dnym1;
  869|  8.32k|    for (i = 0; i <= grid_points[0] - 1; i++) {
  870|  8.19k|      xi = (double)(i)*dnxm1;
  871|  8.19k|      exact_solution(xi, eta, zeta, temp);
  872|  49.1k|      for (m = 0; m < 5; m++) {
  873|  40.9k|        u[k][j][i][m] = temp[m];
  874|  40.9k|      }
  875|  8.19k|    }
  876|    128|  }
  877|      2|}
  878|       |
  879|      0|void lhsinit(double lhs[][3][5][5], int size) {
  880|      0|  int i, m, n;
  881|       |
  882|      0|  i = size;
  883|       |  //---------------------------------------------------------------------
  884|       |  // zero the whole left hand side for starters
  885|       |  //---------------------------------------------------------------------
  886|      0|  for (n = 0; n < 5; n++) {
  887|      0|    for (m = 0; m < 5; m++) {
  888|      0|      lhs[0][0][n][m] = 0.0;
  889|      0|      lhs[0][1][n][m] = 0.0;
  890|      0|      lhs[0][2][n][m] = 0.0;
  891|      0|      lhs[i][0][n][m] = 0.0;
  892|      0|      lhs[i][1][n][m] = 0.0;
  893|      0|      lhs[i][2][n][m] = 0.0;
  894|      0|    }
  895|      0|  }
  896|       |
  897|       |  //---------------------------------------------------------------------
  898|       |  // next, set all diagonal values to 1. This is overkill, but convenient
  899|       |  //---------------------------------------------------------------------
  900|      0|  for (m = 0; m < 5; m++) {
  901|      0|    lhs[0][1][m][m] = 1.0;
  902|      0|    lhs[i][1][m][m] = 1.0;
  903|      0|  }
  904|      0|}
  905|       |
  906|    202|void compute_rhs() {
  907|    202|  int i, j, k, m;
  908|    202|  double rho_inv, uijk, up1, um1, vijk, vp1, vm1, wijk, wp1, wm1;
  909|       |
  910|    202|  if (timeron)
  911|      0|    timer_start(t_rhs);
  912|       |  //---------------------------------------------------------------------
  913|       |  // compute the reciprocal of density, and the kinetic energy,
  914|       |  // and the speed of sound.
  915|       |  //---------------------------------------------------------------------
  916|    202|#pragma dvm region
  917|    202|{
  918|    202|#pragma dvm parallel ([k][j][i] on rho_i[k][j][i]) private(rho_inv, j, i)
  919|  13.1k|  for (k = 0; k <= grid_points[2] - 1; k++) {
  920|   840k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  921|  53.7M|      for (i = 0; i <= grid_points[0] - 1; i++) {
  922|  52.9M|        rho_inv = 1.0 / u[k][j][i][0];
  923|  52.9M|        rho_i[k][j][i] = rho_inv;
  924|  52.9M|        us[k][j][i] = u[k][j][i][1] * rho_inv;
  925|  52.9M|        vs[k][j][i] = u[k][j][i][2] * rho_inv;
  926|  52.9M|        ws[k][j][i] = u[k][j][i][3] * rho_inv;
  927|  52.9M|        square[k][j][i] =
  928|  52.9M|            0.5 *
  929|  52.9M|            (u[k][j][i][1] * u[k][j][i][1] + u[k][j][i][2] * u[k][j][i][2] +
  930|  52.9M|             u[k][j][i][3] * u[k][j][i][3]) *
  931|  52.9M|            rho_inv;
  932|  52.9M|        qs[k][j][i] = square[k][j][i] * rho_inv;
  933|  52.9M|      }
  934|   827k|    }
  935|  12.9k|  }
  936|       |
  937|       |  //---------------------------------------------------------------------
  938|       |  // copy the exact forcing term to the right hand side;  because
  939|       |  // this forcing term is known, we can store it on the whole grid
  940|       |  // including the boundary
  941|       |  //---------------------------------------------------------------------
  942|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) \
  943|    202|            private(m, j, i) \
  944|    202|            shadow_renew(u, qs, us, vs, ws, square, rho_i)
  945|  13.1k|  for (k = 0; k <= grid_points[2] - 1; k++) {
  946|   840k|    for (j = 0; j <= grid_points[1] - 1; j++) {
  947|  53.7M|      for (i = 0; i <= grid_points[0] - 1; i++) {
  948|   317M|        for (m = 0; m < 5; m++) {
  949|   264M|          rhs[k][j][i][m] = forcing[k][j][i][m];
  950|   264M|        }
  951|  52.9M|      }
  952|   827k|    }
  953|  12.9k|  }
  954|    202|}
  955|    202|  if (timeron)
  956|      0|    timer_start(t_rhsx);
  957|       |  //---------------------------------------------------------------------
  958|       |  // compute xi-direction fluxes
  959|       |  //---------------------------------------------------------------------
  960|    202|#pragma dvm region
  961|    202|{
  962|    202|#pragma dvm parallel ([k] on rhs[k][][][]) private(up1, uijk, um1, i, j, m)
  963|  12.7k|  for (k = 1; k <= grid_points[2] - 2; k++) {
  964|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
  965|  48.9M|      for (i = 1; i <= grid_points[0] - 2; i++) {
  966|  48.1M|        uijk = us[k][j][i];
  967|  48.1M|        up1 = us[k][j][i + 1];
  968|  48.1M|        um1 = us[k][j][i - 1];
  969|       |
  970|  48.1M|        rhs[k][j][i][0] = rhs[k][j][i][0] +
  971|  48.1M|                          dx1tx1 * (u[k][j][i + 1][0] - 2.0 * u[k][j][i][0] +
  972|  48.1M|                                    u[k][j][i - 1][0]) -
  973|  48.1M|                          tx2 * (u[k][j][i + 1][1] - u[k][j][i - 1][1]);
  974|       |
  975|  48.1M|        rhs[k][j][i][1] =
  976|  48.1M|            rhs[k][j][i][1] +
  977|  48.1M|            dx2tx1 *
  978|  48.1M|                (u[k][j][i + 1][1] - 2.0 * u[k][j][i][1] + u[k][j][i - 1][1]) +
  979|  48.1M|            xxcon2 * con43 * (up1 - 2.0 * uijk + um1) -
  980|  48.1M|            tx2 * (u[k][j][i + 1][1] * up1 - u[k][j][i - 1][1] * um1 +
  981|  48.1M|                   (u[k][j][i + 1][4] - square[k][j][i + 1] -
  982|  48.1M|                    u[k][j][i - 1][4] + square[k][j][i - 1]) *
  983|  48.1M|                       c2);
  984|       |
  985|  48.1M|        rhs[k][j][i][2] =
  986|  48.1M|            rhs[k][j][i][2] +
  987|  48.1M|            dx3tx1 *
  988|  48.1M|                (u[k][j][i + 1][2] - 2.0 * u[k][j][i][2] + u[k][j][i - 1][2]) +
  989|  48.1M|            xxcon2 * (vs[k][j][i + 1] - 2.0 * vs[k][j][i] + vs[k][j][i - 1]) -
  990|  48.1M|            tx2 * (u[k][j][i + 1][2] * up1 - u[k][j][i - 1][2] * um1);
  991|       |
  992|  48.1M|        rhs[k][j][i][3] =
  993|  48.1M|            rhs[k][j][i][3] +
  994|  48.1M|            dx4tx1 *
  995|  48.1M|                (u[k][j][i + 1][3] - 2.0 * u[k][j][i][3] + u[k][j][i - 1][3]) +
  996|  48.1M|            xxcon2 * (ws[k][j][i + 1] - 2.0 * ws[k][j][i] + ws[k][j][i - 1]) -
  997|  48.1M|            tx2 * (u[k][j][i + 1][3] * up1 - u[k][j][i - 1][3] * um1);
  998|       |
  999|  48.1M|        rhs[k][j][i][4] =
 1000|  48.1M|            rhs[k][j][i][4] +
 1001|  48.1M|            dx5tx1 *
 1002|  48.1M|                (u[k][j][i + 1][4] - 2.0 * u[k][j][i][4] + u[k][j][i - 1][4]) +
 1003|  48.1M|            xxcon3 * (qs[k][j][i + 1] - 2.0 * qs[k][j][i] + qs[k][j][i - 1]) +
 1004|  48.1M|            xxcon4 * (up1 * up1 - 2.0 * uijk * uijk + um1 * um1) +
 1005|  48.1M|            xxcon5 * (u[k][j][i + 1][4] * rho_i[k][j][i + 1] -
 1006|  48.1M|                      2.0 * u[k][j][i][4] * rho_i[k][j][i] +
 1007|  48.1M|                      u[k][j][i - 1][4] * rho_i[k][j][i - 1]) -
 1008|  48.1M|            tx2 * ((c1 * u[k][j][i + 1][4] - c2 * square[k][j][i + 1]) * up1 -
 1009|  48.1M|                   (c1 * u[k][j][i - 1][4] - c2 * square[k][j][i - 1]) * um1);
 1010|  48.1M|      }
 1011|   776k|    }
 1012|       |
 1013|       |    //---------------------------------------------------------------------
 1014|       |    // add fourth order xi-direction dissipation
 1015|       |    //---------------------------------------------------------------------
 1016|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1017|   776k|      i = 1;
 1018|  4.65M|      for (m = 0; m < 5; m++) {
 1019|  3.88M|        rhs[k][j][i][m] = rhs[k][j][i][m] -
 1020|  3.88M|                          dssp * (5.0 * u[k][j][i][m] -
 1021|  3.88M|                                  4.0 * u[k][j][i + 1][m] + u[k][j][i + 2][m]);
 1022|  3.88M|      }
 1023|       |
 1024|   776k|      i = 2;
 1025|  4.65M|      for (m = 0; m < 5; m++) {
 1026|  3.88M|        rhs[k][j][i][m] =
 1027|  3.88M|            rhs[k][j][i][m] -
 1028|  3.88M|            dssp * (-4.0 * u[k][j][i - 1][m] + 6.0 * u[k][j][i][m] -
 1029|  3.88M|                    4.0 * u[k][j][i + 1][m] + u[k][j][i + 2][m]);
 1030|  3.88M|      }
 1031|   776k|    }
 1032|       |
 1033|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1034|  45.8M|      for (i = 3; i <= grid_points[0] - 4; i++) {
 1035|   270M|        for (m = 0; m < 5; m++) {
 1036|   225M|          rhs[k][j][i][m] =
 1037|   225M|              rhs[k][j][i][m] -
 1038|   225M|              dssp * (u[k][j][i - 2][m] - 4.0 * u[k][j][i - 1][m] +
 1039|   225M|                      6.0 * u[k][j][i][m] - 4.0 * u[k][j][i + 1][m] +
 1040|   225M|                      u[k][j][i + 2][m]);
 1041|   225M|        }
 1042|  45.0M|      }
 1043|   776k|    }
 1044|       |
 1045|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1046|   776k|      i = grid_points[0] - 3;
 1047|  4.65M|      for (m = 0; m < 5; m++) {
 1048|  3.88M|        rhs[k][j][i][m] =
 1049|  3.88M|            rhs[k][j][i][m] -
 1050|  3.88M|            dssp * (u[k][j][i - 2][m] - 4.0 * u[k][j][i - 1][m] +
 1051|  3.88M|                    6.0 * u[k][j][i][m] - 4.0 * u[k][j][i + 1][m]);
 1052|  3.88M|      }
 1053|       |
 1054|   776k|      i = grid_points[0] - 2;
 1055|  4.65M|      for (m = 0; m < 5; m++) {
 1056|  3.88M|        rhs[k][j][i][m] = rhs[k][j][i][m] -
 1057|  3.88M|                          dssp * (u[k][j][i - 2][m] - 4. * u[k][j][i - 1][m] +
 1058|  3.88M|                                  5. * u[k][j][i][m]);
 1059|  3.88M|      }
 1060|   776k|    }
 1061|  12.5k|  }
 1062|    202|}
 1063|    202|  if (timeron)
 1064|      0|    timer_stop(t_rhsx);
 1065|       |
 1066|    202|  if (timeron)
 1067|      0|    timer_start(t_rhsy);
 1068|       |  //---------------------------------------------------------------------
 1069|       |  // compute eta-direction fluxes
 1070|       |  //---------------------------------------------------------------------
 1071|    202|#pragma dvm region
 1072|    202|{
 1073|    202|#pragma dvm parallel ([k] on rhs[k][][][]) private(m, vijk, j, i, vm1, vp1)
 1074|  12.7k|  for (k = 1; k <= grid_points[2] - 2; k++) {
 1075|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1076|  48.9M|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1077|  48.1M|        vijk = vs[k][j][i];
 1078|  48.1M|        vp1 = vs[k][j + 1][i];
 1079|  48.1M|        vm1 = vs[k][j - 1][i];
 1080|  48.1M|        rhs[k][j][i][0] = rhs[k][j][i][0] +
 1081|  48.1M|                          dy1ty1 * (u[k][j + 1][i][0] - 2.0 * u[k][j][i][0] +
 1082|  48.1M|                                    u[k][j - 1][i][0]) -
 1083|  48.1M|                          ty2 * (u[k][j + 1][i][2] - u[k][j - 1][i][2]);
 1084|  48.1M|        rhs[k][j][i][1] =
 1085|  48.1M|            rhs[k][j][i][1] +
 1086|  48.1M|            dy2ty1 *
 1087|  48.1M|                (u[k][j + 1][i][1] - 2.0 * u[k][j][i][1] + u[k][j - 1][i][1]) +
 1088|  48.1M|            yycon2 * (us[k][j + 1][i] - 2.0 * us[k][j][i] + us[k][j - 1][i]) -
 1089|  48.1M|            ty2 * (u[k][j + 1][i][1] * vp1 - u[k][j - 1][i][1] * vm1);
 1090|  48.1M|        rhs[k][j][i][2] =
 1091|  48.1M|            rhs[k][j][i][2] +
 1092|  48.1M|            dy3ty1 *
 1093|  48.1M|                (u[k][j + 1][i][2] - 2.0 * u[k][j][i][2] + u[k][j - 1][i][2]) +
 1094|  48.1M|            yycon2 * con43 * (vp1 - 2.0 * vijk + vm1) -
 1095|  48.1M|            ty2 * (u[k][j + 1][i][2] * vp1 - u[k][j - 1][i][2] * vm1 +
 1096|  48.1M|                   (u[k][j + 1][i][4] - square[k][j + 1][i] -
 1097|  48.1M|                    u[k][j - 1][i][4] + square[k][j - 1][i]) *
 1098|  48.1M|                       c2);
 1099|  48.1M|        rhs[k][j][i][3] =
 1100|  48.1M|            rhs[k][j][i][3] +
 1101|  48.1M|            dy4ty1 *
 1102|  48.1M|                (u[k][j + 1][i][3] - 2.0 * u[k][j][i][3] + u[k][j - 1][i][3]) +
 1103|  48.1M|            yycon2 * (ws[k][j + 1][i] - 2.0 * ws[k][j][i] + ws[k][j - 1][i]) -
 1104|  48.1M|            ty2 * (u[k][j + 1][i][3] * vp1 - u[k][j - 1][i][3] * vm1);
 1105|  48.1M|        rhs[k][j][i][4] =
 1106|  48.1M|            rhs[k][j][i][4] +
 1107|  48.1M|            dy5ty1 *
 1108|  48.1M|                (u[k][j + 1][i][4] - 2.0 * u[k][j][i][4] + u[k][j - 1][i][4]) +
 1109|  48.1M|            yycon3 * (qs[k][j + 1][i] - 2.0 * qs[k][j][i] + qs[k][j - 1][i]) +
 1110|  48.1M|            yycon4 * (vp1 * vp1 - 2.0 * vijk * vijk + vm1 * vm1) +
 1111|  48.1M|            yycon5 * (u[k][j + 1][i][4] * rho_i[k][j + 1][i] -
 1112|  48.1M|                      2.0 * u[k][j][i][4] * rho_i[k][j][i] +
 1113|  48.1M|                      u[k][j - 1][i][4] * rho_i[k][j - 1][i]) -
 1114|  48.1M|            ty2 * ((c1 * u[k][j + 1][i][4] - c2 * square[k][j + 1][i]) * vp1 -
 1115|  48.1M|                   (c1 * u[k][j - 1][i][4] - c2 * square[k][j - 1][i]) * vm1);
 1116|  48.1M|      }
 1117|   776k|    }
 1118|       |
 1119|       |    //---------------------------------------------------------------------
 1120|       |    // add fourth order eta-direction dissipation
 1121|       |    //---------------------------------------------------------------------
 1122|  12.5k|    j = 1;
 1123|   789k|    for (i = 1; i <= grid_points[0] - 2; i++) {
 1124|  4.65M|      for (m = 0; m < 5; m++) {
 1125|  3.88M|        rhs[k][j][i][m] = rhs[k][j][i][m] -
 1126|  3.88M|                          dssp * (5.0 * u[k][j][i][m] -
 1127|  3.88M|                                  4.0 * u[k][j + 1][i][m] + u[k][j + 2][i][m]);
 1128|  3.88M|      }
 1129|   776k|    }
 1130|       |
 1131|  12.5k|    j = 2;
 1132|   789k|    for (i = 1; i <= grid_points[0] - 2; i++) {
 1133|  4.65M|      for (m = 0; m < 5; m++) {
 1134|  3.88M|        rhs[k][j][i][m] =
 1135|  3.88M|            rhs[k][j][i][m] -
 1136|  3.88M|            dssp * (-4.0 * u[k][j - 1][i][m] + 6.0 * u[k][j][i][m] -
 1137|  3.88M|                    4.0 * u[k][j + 1][i][m] + u[k][j + 2][i][m]);
 1138|  3.88M|      }
 1139|   776k|    }
 1140|       |
 1141|   738k|    for (j = 3; j <= grid_points[1] - 4; j++) {
 1142|  45.7M|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1143|   270M|        for (m = 0; m < 5; m++) {
 1144|   225M|          rhs[k][j][i][m] =
 1145|   225M|              rhs[k][j][i][m] -
 1146|   225M|              dssp * (u[k][j - 2][i][m] - 4.0 * u[k][j - 1][i][m] +
 1147|   225M|                      6.0 * u[k][j][i][m] - 4.0 * u[k][j + 1][i][m] +
 1148|   225M|                      u[k][j + 2][i][m]);
 1149|   225M|        }
 1150|  45.0M|      }
 1151|   726k|    }
 1152|       |
 1153|  12.5k|    j = grid_points[1] - 3;
 1154|   789k|    for (i = 1; i <= grid_points[0] - 2; i++) {
 1155|  4.65M|      for (m = 0; m < 5; m++) {
 1156|  3.88M|        rhs[k][j][i][m] =
 1157|  3.88M|            rhs[k][j][i][m] -
 1158|  3.88M|            dssp * (u[k][j - 2][i][m] - 4.0 * u[k][j - 1][i][m] +
 1159|  3.88M|                    6.0 * u[k][j][i][m] - 4.0 * u[k][j + 1][i][m]);
 1160|  3.88M|      }
 1161|   776k|    }
 1162|       |
 1163|  12.5k|    j = grid_points[1] - 2;
 1164|   789k|    for (i = 1; i <= grid_points[0] - 2; i++) {
 1165|  4.65M|      for (m = 0; m < 5; m++) {
 1166|  3.88M|        rhs[k][j][i][m] = rhs[k][j][i][m] -
 1167|  3.88M|                          dssp * (u[k][j - 2][i][m] - 4. * u[k][j - 1][i][m] +
 1168|  3.88M|                                  5. * u[k][j][i][m]);
 1169|  3.88M|      }
 1170|   776k|    }
 1171|  12.5k|  }
 1172|    202|}
 1173|    202|  if (timeron)
 1174|      0|    timer_stop(t_rhsy);
 1175|       |
 1176|    202|  if (timeron)
 1177|      0|    timer_start(t_rhsz);
 1178|       |  //---------------------------------------------------------------------
 1179|       |  // compute zeta-direction fluxes
 1180|       |  //---------------------------------------------------------------------
 1181|    202|#pragma dvm region
 1182|    202|{
 1183|    202|#pragma dvm parallel ([k][j][i] on rhs[k][j][i][]) private(wp1, wm1, wijk, i)
 1184|  12.7k|  for (k = 1; k <= grid_points[2] - 2; k++) {
 1185|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1186|  48.9M|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1187|  48.1M|        wijk = ws[k][j][i];
 1188|  48.1M|        wp1 = ws[k + 1][j][i];
 1189|  48.1M|        wm1 = ws[k - 1][j][i];
 1190|       |
 1191|  48.1M|        rhs[k][j][i][0] = rhs[k][j][i][0] +
 1192|  48.1M|                          dz1tz1 * (u[k + 1][j][i][0] - 2.0 * u[k][j][i][0] +
 1193|  48.1M|                                    u[k - 1][j][i][0]) -
 1194|  48.1M|                          tz2 * (u[k + 1][j][i][3] - u[k - 1][j][i][3]);
 1195|  48.1M|        rhs[k][j][i][1] =
 1196|  48.1M|            rhs[k][j][i][1] +
 1197|  48.1M|            dz2tz1 *
 1198|  48.1M|                (u[k + 1][j][i][1] - 2.0 * u[k][j][i][1] + u[k - 1][j][i][1]) +
 1199|  48.1M|            zzcon2 * (us[k + 1][j][i] - 2.0 * us[k][j][i] + us[k - 1][j][i]) -
 1200|  48.1M|            tz2 * (u[k + 1][j][i][1] * wp1 - u[k - 1][j][i][1] * wm1);
 1201|  48.1M|        rhs[k][j][i][2] =
 1202|  48.1M|            rhs[k][j][i][2] +
 1203|  48.1M|            dz3tz1 *
 1204|  48.1M|                (u[k + 1][j][i][2] - 2.0 * u[k][j][i][2] + u[k - 1][j][i][2]) +
 1205|  48.1M|            zzcon2 * (vs[k + 1][j][i] - 2.0 * vs[k][j][i] + vs[k - 1][j][i]) -
 1206|  48.1M|            tz2 * (u[k + 1][j][i][2] * wp1 - u[k - 1][j][i][2] * wm1);
 1207|  48.1M|        rhs[k][j][i][3] =
 1208|  48.1M|            rhs[k][j][i][3] +
 1209|  48.1M|            dz4tz1 *
 1210|  48.1M|                (u[k + 1][j][i][3] - 2.0 * u[k][j][i][3] + u[k - 1][j][i][3]) +
 1211|  48.1M|            zzcon2 * con43 * (wp1 - 2.0 * wijk + wm1) -
 1212|  48.1M|            tz2 * (u[k + 1][j][i][3] * wp1 - u[k - 1][j][i][3] * wm1 +
 1213|  48.1M|                   (u[k + 1][j][i][4] - square[k + 1][j][i] -
 1214|  48.1M|                    u[k - 1][j][i][4] + square[k - 1][j][i]) *
 1215|  48.1M|                       c2);
 1216|  48.1M|        rhs[k][j][i][4] =
 1217|  48.1M|            rhs[k][j][i][4] +
 1218|  48.1M|            dz5tz1 *
 1219|  48.1M|                (u[k + 1][j][i][4] - 2.0 * u[k][j][i][4] + u[k - 1][j][i][4]) +
 1220|  48.1M|            zzcon3 * (qs[k + 1][j][i] - 2.0 * qs[k][j][i] + qs[k - 1][j][i]) +
 1221|  48.1M|            zzcon4 * (wp1 * wp1 - 2.0 * wijk * wijk + wm1 * wm1) +
 1222|  48.1M|            zzcon5 * (u[k + 1][j][i][4] * rho_i[k + 1][j][i] -
 1223|  48.1M|                      2.0 * u[k][j][i][4] * rho_i[k][j][i] +
 1224|  48.1M|                      u[k - 1][j][i][4] * rho_i[k - 1][j][i]) -
 1225|  48.1M|            tz2 * ((c1 * u[k + 1][j][i][4] - c2 * square[k + 1][j][i]) * wp1 -
 1226|  48.1M|                   (c1 * u[k - 1][j][i][4] - c2 * square[k - 1][j][i]) * wm1);
 1227|  48.1M|      }
 1228|   776k|    }
 1229|  12.5k|  }
 1230|       |
 1231|       |  //---------------------------------------------------------------------
 1232|       |  // add fourth order zeta-direction dissipation
 1233|       |  //---------------------------------------------------------------------
 1234|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1235|    404|  for (k = 1; k <= 1; ++k) {
 1236|  12.7k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1237|   789k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1238|  4.65M|        for (m = 0; m < 5; m++) {
 1239|  3.88M|            rhs[k][j][i][m] = rhs[k][j][i][m] -
 1240|  3.88M|                            dssp * (5.0 * u[k][j][i][m] -
 1241|  3.88M|                                    4.0 * u[k + 1][j][i][m] + u[k + 2][j][i][m]);
 1242|  3.88M|        }
 1243|   776k|      }
 1244|  12.5k|    }
 1245|    202|  }
 1246|       |
 1247|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1248|    404|  for (k = 2; k <= 2; ++k) {
 1249|  12.7k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1250|   789k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1251|  4.65M|        for (m = 0; m < 5; m++) {
 1252|  3.88M|            rhs[k][j][i][m] =
 1253|  3.88M|                rhs[k][j][i][m] -
 1254|  3.88M|                dssp * (-4.0 * u[k - 1][j][i][m] + 6.0 * u[k][j][i][m] -
 1255|  3.88M|                        4.0 * u[k + 1][j][i][m] + u[k + 2][j][i][m]);
 1256|  3.88M|        }
 1257|   776k|      }
 1258|  12.5k|    }
 1259|    202|  }
 1260|       |
 1261|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1262|  11.9k|  for (k = 3; k <= grid_points[2] - 4; k++) {
 1263|   738k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1264|  45.7M|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1265|   270M|        for (m = 0; m < 5; m++) {
 1266|   225M|          rhs[k][j][i][m] =
 1267|   225M|              rhs[k][j][i][m] -
 1268|   225M|              dssp * (u[k - 2][j][i][m] - 4.0 * u[k - 1][j][i][m] +
 1269|   225M|                      6.0 * u[k][j][i][m] - 4.0 * u[k + 1][j][i][m] +
 1270|   225M|                      u[k + 2][j][i][m]);
 1271|   225M|        }
 1272|  45.0M|      }
 1273|   726k|    }
 1274|  11.7k|  }
 1275|       |
 1276|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1277|    404|  for (k = grid_points[2] - 3; k <= grid_points[2] - 3; ++k) {
 1278|  12.7k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1279|   789k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1280|  4.65M|        for (m = 0; m < 5; m++) {
 1281|  3.88M|            rhs[k][j][i][m] =
 1282|  3.88M|                rhs[k][j][i][m] -
 1283|  3.88M|                dssp * (u[k - 2][j][i][m] - 4.0 * u[k - 1][j][i][m] +
 1284|  3.88M|                        6.0 * u[k][j][i][m] - 4.0 * u[k + 1][j][i][m]);
 1285|  3.88M|        }
 1286|   776k|      }
 1287|  12.5k|    }
 1288|    202|  }
 1289|       |
 1290|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1291|    404|  for (k = grid_points[2] - 2; k <= grid_points[2] - 2; ++k) {
 1292|  12.7k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1293|   789k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1294|  4.65M|        for (m = 0; m < 5; m++) {
 1295|  3.88M|            rhs[k][j][i][m] = rhs[k][j][i][m] -
 1296|  3.88M|                            dssp * (u[k - 2][j][i][m] - 4. * u[k - 1][j][i][m] +
 1297|  3.88M|                                    5. * u[k][j][i][m]);
 1298|  3.88M|        }
 1299|   776k|      }
 1300|  12.5k|    }
 1301|    202|  }
 1302|    202|}
 1303|    202|  if (timeron)
 1304|      0|    timer_stop(t_rhsz);
 1305|    202|#pragma dvm region
 1306|    202|{
 1307|    202|#pragma dvm parallel ([k][j][i][m] on rhs[k][j][i][m]) private(m, j, i)
 1308|  12.7k|  for (k = 1; k <= grid_points[2] - 2; k++) {
 1309|   789k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 1310|  48.9M|      for (i = 1; i <= grid_points[0] - 2; i++) {
 1311|   288M|        for (m = 0; m < 5; m++) {
 1312|   240M|          rhs[k][j][i][m] = rhs[k][j][i][m] * dt;
 1313|   240M|        }
 1314|  48.1M|      }
 1315|   776k|    }
 1316|  12.5k|  }
 1317|    202|}
 1318|    202|  if (timeron)
 1319|      0|    timer_stop(t_rhs);
 1320|    202|}
 1321|       |
 1322|      1|void set_constants() {
 1323|      1|  ce[0][0] = 2.0;
 1324|      1|  ce[0][1] = 0.0;
 1325|      1|  ce[0][2] = 0.0;
 1326|      1|  ce[0][3] = 4.0;
 1327|      1|  ce[0][4] = 5.0;
 1328|      1|  ce[0][5] = 3.0;
 1329|      1|  ce[0][6] = 0.5;
 1330|      1|  ce[0][7] = 0.02;
 1331|      1|  ce[0][8] = 0.01;
 1332|      1|  ce[0][9] = 0.03;
 1333|      1|  ce[0][10] = 0.5;
 1334|      1|  ce[0][11] = 0.4;
 1335|      1|  ce[0][12] = 0.3;
 1336|       |
 1337|      1|  ce[1][0] = 1.0;
 1338|      1|  ce[1][1] = 0.0;
 1339|      1|  ce[1][2] = 0.0;
 1340|      1|  ce[1][3] = 0.0;
 1341|      1|  ce[1][4] = 1.0;
 1342|      1|  ce[1][5] = 2.0;
 1343|      1|  ce[1][6] = 3.0;
 1344|      1|  ce[1][7] = 0.01;
 1345|      1|  ce[1][8] = 0.03;
 1346|      1|  ce[1][9] = 0.02;
 1347|      1|  ce[1][10] = 0.4;
 1348|      1|  ce[1][11] = 0.3;
 1349|      1|  ce[1][12] = 0.5;
 1350|       |
 1351|      1|  ce[2][0] = 2.0;
 1352|      1|  ce[2][1] = 2.0;
 1353|      1|  ce[2][2] = 0.0;
 1354|      1|  ce[2][3] = 0.0;
 1355|      1|  ce[2][4] = 0.0;
 1356|      1|  ce[2][5] = 2.0;
 1357|      1|  ce[2][6] = 3.0;
 1358|      1|  ce[2][7] = 0.04;
 1359|      1|  ce[2][8] = 0.03;
 1360|      1|  ce[2][9] = 0.05;
 1361|      1|  ce[2][10] = 0.3;
 1362|      1|  ce[2][11] = 0.5;
 1363|      1|  ce[2][12] = 0.4;
 1364|       |
 1365|      1|  ce[3][0] = 2.0;
 1366|      1|  ce[3][1] = 2.0;
 1367|      1|  ce[3][2] = 0.0;
 1368|      1|  ce[3][3] = 0.0;
 1369|      1|  ce[3][4] = 0.0;
 1370|      1|  ce[3][5] = 2.0;
 1371|      1|  ce[3][6] = 3.0;
 1372|      1|  ce[3][7] = 0.03;
 1373|      1|  ce[3][8] = 0.05;
 1374|      1|  ce[3][9] = 0.04;
 1375|      1|  ce[3][10] = 0.2;
 1376|      1|  ce[3][11] = 0.1;
 1377|      1|  ce[3][12] = 0.3;
 1378|       |
 1379|      1|  ce[4][0] = 5.0;
 1380|      1|  ce[4][1] = 4.0;
 1381|      1|  ce[4][2] = 3.0;
 1382|      1|  ce[4][3] = 2.0;
 1383|      1|  ce[4][4] = 0.1;
 1384|      1|  ce[4][5] = 0.4;
 1385|      1|  ce[4][6] = 0.3;
 1386|      1|  ce[4][7] = 0.05;
 1387|      1|  ce[4][8] = 0.04;
 1388|      1|  ce[4][9] = 0.03;
 1389|      1|  ce[4][10] = 0.1;
 1390|      1|  ce[4][11] = 0.3;
 1391|      1|  ce[4][12] = 0.2;
 1392|       |
 1393|      1|  c1 = 1.4;
 1394|      1|  c2 = 0.4;
 1395|      1|  c3 = 0.1;
 1396|      1|  c4 = 1.0;
 1397|      1|  c5 = 1.4;
 1398|       |
 1399|      1|  dnxm1 = 1.0 / (double)(grid_points[0] - 1);
 1400|      1|  dnym1 = 1.0 / (double)(grid_points[1] - 1);
 1401|      1|  dnzm1 = 1.0 / (double)(grid_points[2] - 1);
 1402|       |
 1403|      1|  c1c2 = c1 * c2;
 1404|      1|  c1c5 = c1 * c5;
 1405|      1|  c3c4 = c3 * c4;
 1406|      1|  c1345 = c1c5 * c3c4;
 1407|       |
 1408|      1|  conz1 = (1.0 - c1c5);
 1409|       |
 1410|      1|  tx1 = 1.0 / (dnxm1 * dnxm1);
 1411|      1|  tx2 = 1.0 / (2.0 * dnxm1);
 1412|      1|  tx3 = 1.0 / dnxm1;
 1413|       |
 1414|      1|  ty1 = 1.0 / (dnym1 * dnym1);
 1415|      1|  ty2 = 1.0 / (2.0 * dnym1);
 1416|      1|  ty3 = 1.0 / dnym1;
 1417|       |
 1418|      1|  tz1 = 1.0 / (dnzm1 * dnzm1);
 1419|      1|  tz2 = 1.0 / (2.0 * dnzm1);
 1420|      1|  tz3 = 1.0 / dnzm1;
 1421|       |
 1422|      1|  dx1 = 0.75;
 1423|      1|  dx2 = 0.75;
 1424|      1|  dx3 = 0.75;
 1425|      1|  dx4 = 0.75;
 1426|      1|  dx5 = 0.75;
 1427|       |
 1428|      1|  dy1 = 0.75;
 1429|      1|  dy2 = 0.75;
 1430|      1|  dy3 = 0.75;
 1431|      1|  dy4 = 0.75;
 1432|      1|  dy5 = 0.75;
 1433|       |
 1434|      1|  dz1 = 1.0;
 1435|      1|  dz2 = 1.0;
 1436|      1|  dz3 = 1.0;
 1437|      1|  dz4 = 1.0;
 1438|      1|  dz5 = 1.0;
 1439|       |
 1440|      1|  dxmax = max(dx3, dx4);
 1441|      1|  dymax = max(dy2, dy4);
 1442|      1|  dzmax = max(dz2, dz3);
 1443|       |
 1444|      1|  dssp = 0.25 * max(dx1, max(dy1, dz1));
 1445|       |
 1446|      1|  c4dssp = 4.0 * dssp;
 1447|      1|  c5dssp = 5.0 * dssp;
 1448|       |
 1449|      1|  dttx1 = dt * tx1;
 1450|      1|  dttx2 = dt * tx2;
 1451|      1|  dtty1 = dt * ty1;
 1452|      1|  dtty2 = dt * ty2;
 1453|      1|  dttz1 = dt * tz1;
 1454|      1|  dttz2 = dt * tz2;
 1455|       |
 1456|      1|  c2dttx1 = 2.0 * dttx1;
 1457|      1|  c2dtty1 = 2.0 * dtty1;
 1458|      1|  c2dttz1 = 2.0 * dttz1;
 1459|       |
 1460|      1|  dtdssp = dt * dssp;
 1461|       |
 1462|      1|  comz1 = dtdssp;
 1463|      1|  comz4 = 4.0 * dtdssp;
 1464|      1|  comz5 = 5.0 * dtdssp;
 1465|      1|  comz6 = 6.0 * dtdssp;
 1466|       |
 1467|      1|  c3c4tx3 = c3c4 * tx3;
 1468|      1|  c3c4ty3 = c3c4 * ty3;
 1469|      1|  c3c4tz3 = c3c4 * tz3;
 1470|       |
 1471|      1|  dx1tx1 = dx1 * tx1;
 1472|      1|  dx2tx1 = dx2 * tx1;
 1473|      1|  dx3tx1 = dx3 * tx1;
 1474|      1|  dx4tx1 = dx4 * tx1;
 1475|      1|  dx5tx1 = dx5 * tx1;
 1476|       |
 1477|      1|  dy1ty1 = dy1 * ty1;
 1478|      1|  dy2ty1 = dy2 * ty1;
 1479|      1|  dy3ty1 = dy3 * ty1;
 1480|      1|  dy4ty1 = dy4 * ty1;
 1481|      1|  dy5ty1 = dy5 * ty1;
 1482|       |
 1483|      1|  dz1tz1 = dz1 * tz1;
 1484|      1|  dz2tz1 = dz2 * tz1;
 1485|      1|  dz3tz1 = dz3 * tz1;
 1486|      1|  dz4tz1 = dz4 * tz1;
 1487|      1|  dz5tz1 = dz5 * tz1;
 1488|       |
 1489|      1|  c2iv = 2.5;
 1490|      1|  con43 = 4.0 / 3.0;
 1491|      1|  con16 = 1.0 / 6.0;
 1492|       |
 1493|      1|  xxcon1 = c3c4tx3 * con43 * tx3;
 1494|      1|  xxcon2 = c3c4tx3 * tx3;
 1495|      1|  xxcon3 = c3c4tx3 * conz1 * tx3;
 1496|      1|  xxcon4 = c3c4tx3 * con16 * tx3;
 1497|      1|  xxcon5 = c3c4tx3 * c1c5 * tx3;
 1498|       |
 1499|      1|  yycon1 = c3c4ty3 * con43 * ty3;
 1500|      1|  yycon2 = c3c4ty3 * ty3;
 1501|      1|  yycon3 = c3c4ty3 * conz1 * ty3;
 1502|      1|  yycon4 = c3c4ty3 * con16 * ty3;
 1503|      1|  yycon5 = c3c4ty3 * c1c5 * ty3;
 1504|       |
 1505|      1|  zzcon1 = c3c4tz3 * con43 * tz3;
 1506|      1|  zzcon2 = c3c4tz3 * tz3;
 1507|      1|  zzcon3 = c3c4tz3 * conz1 * tz3;
 1508|      1|  zzcon4 = c3c4tz3 * con16 * tz3;
 1509|      1|  zzcon5 = c3c4tz3 * c1c5 * tz3;
 1510|      1|}
 1511|       |
 1512|       |//---------------------------------------------------------------------
 1513|       |// subtracts bvec=bvec - ablock*avec
 1514|       |//---------------------------------------------------------------------
 1515|      0|void matvec_sub(double ablock[5][5], double avec[5], double bvec[5]) {
 1516|       |  //---------------------------------------------------------------------
 1517|       |  // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 1518|       |  // $                  - lhs[ia][ablock][0][i]*
 1519|       |  //---------------------------------------------------------------------
 1520|      0|  bvec[0] = bvec[0] - ablock[0][0] * avec[0] - ablock[1][0] * avec[1] -
 1521|      0|            ablock[2][0] * avec[2] - ablock[3][0] * avec[3] -
 1522|      0|            ablock[4][0] * avec[4];
 1523|      0|  bvec[1] = bvec[1] - ablock[0][1] * avec[0] - ablock[1][1] * avec[1] -
 1524|      0|            ablock[2][1] * avec[2] - ablock[3][1] * avec[3] -
 1525|      0|            ablock[4][1] * avec[4];
 1526|      0|  bvec[2] = bvec[2] - ablock[0][2] * avec[0] - ablock[1][2] * avec[1] -
 1527|      0|            ablock[2][2] * avec[2] - ablock[3][2] * avec[3] -
 1528|      0|            ablock[4][2] * avec[4];
 1529|      0|  bvec[3] = bvec[3] - ablock[0][3] * avec[0] - ablock[1][3] * avec[1] -
 1530|      0|            ablock[2][3] * avec[2] - ablock[3][3] * avec[3] -
 1531|      0|            ablock[4][3] * avec[4];
 1532|      0|  bvec[4] = bvec[4] - ablock[0][4] * avec[0] - ablock[1][4] * avec[1] -
 1533|      0|            ablock[2][4] * avec[2] - ablock[3][4] * avec[3] -
 1534|      0|            ablock[4][4] * avec[4];
 1535|      0|}
 1536|       |
 1537|       |//---------------------------------------------------------------------
 1538|       |// subtracts a(i,j,k) X b(i,j,k) from c(i,j,k)
 1539|       |//---------------------------------------------------------------------
 1540|      0|void matmul_sub(double ablock[5][5], double bblock[5][5], double cblock[5][5]) {
 1541|      0|  cblock[0][0] = cblock[0][0] - ablock[0][0] * bblock[0][0] -
 1542|      0|                 ablock[1][0] * bblock[0][1] - ablock[2][0] * bblock[0][2] -
 1543|      0|                 ablock[3][0] * bblock[0][3] - ablock[4][0] * bblock[0][4];
 1544|      0|  cblock[0][1] = cblock[0][1] - ablock[0][1] * bblock[0][0] -
 1545|      0|                 ablock[1][1] * bblock[0][1] - ablock[2][1] * bblock[0][2] -
 1546|      0|                 ablock[3][1] * bblock[0][3] - ablock[4][1] * bblock[0][4];
 1547|      0|  cblock[0][2] = cblock[0][2] - ablock[0][2] * bblock[0][0] -
 1548|      0|                 ablock[1][2] * bblock[0][1] - ablock[2][2] * bblock[0][2] -
 1549|      0|                 ablock[3][2] * bblock[0][3] - ablock[4][2] * bblock[0][4];
 1550|      0|  cblock[0][3] = cblock[0][3] - ablock[0][3] * bblock[0][0] -
 1551|      0|                 ablock[1][3] * bblock[0][1] - ablock[2][3] * bblock[0][2] -
 1552|      0|                 ablock[3][3] * bblock[0][3] - ablock[4][3] * bblock[0][4];
 1553|      0|  cblock[0][4] = cblock[0][4] - ablock[0][4] * bblock[0][0] -
 1554|      0|                 ablock[1][4] * bblock[0][1] - ablock[2][4] * bblock[0][2] -
 1555|      0|                 ablock[3][4] * bblock[0][3] - ablock[4][4] * bblock[0][4];
 1556|      0|  cblock[1][0] = cblock[1][0] - ablock[0][0] * bblock[1][0] -
 1557|      0|                 ablock[1][0] * bblock[1][1] - ablock[2][0] * bblock[1][2] -
 1558|      0|                 ablock[3][0] * bblock[1][3] - ablock[4][0] * bblock[1][4];
 1559|      0|  cblock[1][1] = cblock[1][1] - ablock[0][1] * bblock[1][0] -
 1560|      0|                 ablock[1][1] * bblock[1][1] - ablock[2][1] * bblock[1][2] -
 1561|      0|                 ablock[3][1] * bblock[1][3] - ablock[4][1] * bblock[1][4];
 1562|      0|  cblock[1][2] = cblock[1][2] - ablock[0][2] * bblock[1][0] -
 1563|      0|                 ablock[1][2] * bblock[1][1] - ablock[2][2] * bblock[1][2] -
 1564|      0|                 ablock[3][2] * bblock[1][3] - ablock[4][2] * bblock[1][4];
 1565|      0|  cblock[1][3] = cblock[1][3] - ablock[0][3] * bblock[1][0] -
 1566|      0|                 ablock[1][3] * bblock[1][1] - ablock[2][3] * bblock[1][2] -
 1567|      0|                 ablock[3][3] * bblock[1][3] - ablock[4][3] * bblock[1][4];
 1568|      0|  cblock[1][4] = cblock[1][4] - ablock[0][4] * bblock[1][0] -
 1569|      0|                 ablock[1][4] * bblock[1][1] - ablock[2][4] * bblock[1][2] -
 1570|      0|                 ablock[3][4] * bblock[1][3] - ablock[4][4] * bblock[1][4];
 1571|      0|  cblock[2][0] = cblock[2][0] - ablock[0][0] * bblock[2][0] -
 1572|      0|                 ablock[1][0] * bblock[2][1] - ablock[2][0] * bblock[2][2] -
 1573|      0|                 ablock[3][0] * bblock[2][3] - ablock[4][0] * bblock[2][4];
 1574|      0|  cblock[2][1] = cblock[2][1] - ablock[0][1] * bblock[2][0] -
 1575|      0|                 ablock[1][1] * bblock[2][1] - ablock[2][1] * bblock[2][2] -
 1576|      0|                 ablock[3][1] * bblock[2][3] - ablock[4][1] * bblock[2][4];
 1577|      0|  cblock[2][2] = cblock[2][2] - ablock[0][2] * bblock[2][0] -
 1578|      0|                 ablock[1][2] * bblock[2][1] - ablock[2][2] * bblock[2][2] -
 1579|      0|                 ablock[3][2] * bblock[2][3] - ablock[4][2] * bblock[2][4];
 1580|      0|  cblock[2][3] = cblock[2][3] - ablock[0][3] * bblock[2][0] -
 1581|      0|                 ablock[1][3] * bblock[2][1] - ablock[2][3] * bblock[2][2] -
 1582|      0|                 ablock[3][3] * bblock[2][3] - ablock[4][3] * bblock[2][4];
 1583|      0|  cblock[2][4] = cblock[2][4] - ablock[0][4] * bblock[2][0] -
 1584|      0|                 ablock[1][4] * bblock[2][1] - ablock[2][4] * bblock[2][2] -
 1585|      0|                 ablock[3][4] * bblock[2][3] - ablock[4][4] * bblock[2][4];
 1586|      0|  cblock[3][0] = cblock[3][0] - ablock[0][0] * bblock[3][0] -
 1587|      0|                 ablock[1][0] * bblock[3][1] - ablock[2][0] * bblock[3][2] -
 1588|      0|                 ablock[3][0] * bblock[3][3] - ablock[4][0] * bblock[3][4];
 1589|      0|  cblock[3][1] = cblock[3][1] - ablock[0][1] * bblock[3][0] -
 1590|      0|                 ablock[1][1] * bblock[3][1] - ablock[2][1] * bblock[3][2] -
 1591|      0|                 ablock[3][1] * bblock[3][3] - ablock[4][1] * bblock[3][4];
 1592|      0|  cblock[3][2] = cblock[3][2] - ablock[0][2] * bblock[3][0] -
 1593|      0|                 ablock[1][2] * bblock[3][1] - ablock[2][2] * bblock[3][2] -
 1594|      0|                 ablock[3][2] * bblock[3][3] - ablock[4][2] * bblock[3][4];
 1595|      0|  cblock[3][3] = cblock[3][3] - ablock[0][3] * bblock[3][0] -
 1596|      0|                 ablock[1][3] * bblock[3][1] - ablock[2][3] * bblock[3][2] -
 1597|      0|                 ablock[3][3] * bblock[3][3] - ablock[4][3] * bblock[3][4];
 1598|      0|  cblock[3][4] = cblock[3][4] - ablock[0][4] * bblock[3][0] -
 1599|      0|                 ablock[1][4] * bblock[3][1] - ablock[2][4] * bblock[3][2] -
 1600|      0|                 ablock[3][4] * bblock[3][3] - ablock[4][4] * bblock[3][4];
 1601|      0|  cblock[4][0] = cblock[4][0] - ablock[0][0] * bblock[4][0] -
 1602|      0|                 ablock[1][0] * bblock[4][1] - ablock[2][0] * bblock[4][2] -
 1603|      0|                 ablock[3][0] * bblock[4][3] - ablock[4][0] * bblock[4][4];
 1604|      0|  cblock[4][1] = cblock[4][1] - ablock[0][1] * bblock[4][0] -
 1605|      0|                 ablock[1][1] * bblock[4][1] - ablock[2][1] * bblock[4][2] -
 1606|      0|                 ablock[3][1] * bblock[4][3] - ablock[4][1] * bblock[4][4];
 1607|      0|  cblock[4][2] = cblock[4][2] - ablock[0][2] * bblock[4][0] -
 1608|      0|                 ablock[1][2] * bblock[4][1] - ablock[2][2] * bblock[4][2] -
 1609|      0|                 ablock[3][2] * bblock[4][3] - ablock[4][2] * bblock[4][4];
 1610|      0|  cblock[4][3] = cblock[4][3] - ablock[0][3] * bblock[4][0] -
 1611|      0|                 ablock[1][3] * bblock[4][1] - ablock[2][3] * bblock[4][2] -
 1612|      0|                 ablock[3][3] * bblock[4][3] - ablock[4][3] * bblock[4][4];
 1613|      0|  cblock[4][4] = cblock[4][4] - ablock[0][4] * bblock[4][0] -
 1614|      0|                 ablock[1][4] * bblock[4][1] - ablock[2][4] * bblock[4][2] -
 1615|      0|                 ablock[3][4] * bblock[4][3] - ablock[4][4] * bblock[4][4];
 1616|      0|}
 1617|       |
 1618|      0|void binvcrhs(double lhs[5][5], double c[5][5], double r[5]) {
 1619|      0|  double pivot, coeff;
 1620|       |
 1621|      0|  pivot = 1.00 / lhs[0][0];
 1622|      0|  lhs[1][0] = lhs[1][0] * pivot;
 1623|      0|  lhs[2][0] = lhs[2][0] * pivot;
 1624|      0|  lhs[3][0] = lhs[3][0] * pivot;
 1625|      0|  lhs[4][0] = lhs[4][0] * pivot;
 1626|      0|  c[0][0] = c[0][0] * pivot;
 1627|      0|  c[1][0] = c[1][0] * pivot;
 1628|      0|  c[2][0] = c[2][0] * pivot;
 1629|      0|  c[3][0] = c[3][0] * pivot;
 1630|      0|  c[4][0] = c[4][0] * pivot;
 1631|      0|  r[0] = r[0] * pivot;
 1632|       |
 1633|      0|  coeff = lhs[0][1];
 1634|      0|  lhs[1][1] = lhs[1][1] - coeff * lhs[1][0];
 1635|      0|  lhs[2][1] = lhs[2][1] - coeff * lhs[2][0];
 1636|      0|  lhs[3][1] = lhs[3][1] - coeff * lhs[3][0];
 1637|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][0];
 1638|      0|  c[0][1] = c[0][1] - coeff * c[0][0];
 1639|      0|  c[1][1] = c[1][1] - coeff * c[1][0];
 1640|      0|  c[2][1] = c[2][1] - coeff * c[2][0];
 1641|      0|  c[3][1] = c[3][1] - coeff * c[3][0];
 1642|      0|  c[4][1] = c[4][1] - coeff * c[4][0];
 1643|      0|  r[1] = r[1] - coeff * r[0];
 1644|       |
 1645|      0|  coeff = lhs[0][2];
 1646|      0|  lhs[1][2] = lhs[1][2] - coeff * lhs[1][0];
 1647|      0|  lhs[2][2] = lhs[2][2] - coeff * lhs[2][0];
 1648|      0|  lhs[3][2] = lhs[3][2] - coeff * lhs[3][0];
 1649|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][0];
 1650|      0|  c[0][2] = c[0][2] - coeff * c[0][0];
 1651|      0|  c[1][2] = c[1][2] - coeff * c[1][0];
 1652|      0|  c[2][2] = c[2][2] - coeff * c[2][0];
 1653|      0|  c[3][2] = c[3][2] - coeff * c[3][0];
 1654|      0|  c[4][2] = c[4][2] - coeff * c[4][0];
 1655|      0|  r[2] = r[2] - coeff * r[0];
 1656|       |
 1657|      0|  coeff = lhs[0][3];
 1658|      0|  lhs[1][3] = lhs[1][3] - coeff * lhs[1][0];
 1659|      0|  lhs[2][3] = lhs[2][3] - coeff * lhs[2][0];
 1660|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][0];
 1661|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][0];
 1662|      0|  c[0][3] = c[0][3] - coeff * c[0][0];
 1663|      0|  c[1][3] = c[1][3] - coeff * c[1][0];
 1664|      0|  c[2][3] = c[2][3] - coeff * c[2][0];
 1665|      0|  c[3][3] = c[3][3] - coeff * c[3][0];
 1666|      0|  c[4][3] = c[4][3] - coeff * c[4][0];
 1667|      0|  r[3] = r[3] - coeff * r[0];
 1668|       |
 1669|      0|  coeff = lhs[0][4];
 1670|      0|  lhs[1][4] = lhs[1][4] - coeff * lhs[1][0];
 1671|      0|  lhs[2][4] = lhs[2][4] - coeff * lhs[2][0];
 1672|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][0];
 1673|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][0];
 1674|      0|  c[0][4] = c[0][4] - coeff * c[0][0];
 1675|      0|  c[1][4] = c[1][4] - coeff * c[1][0];
 1676|      0|  c[2][4] = c[2][4] - coeff * c[2][0];
 1677|      0|  c[3][4] = c[3][4] - coeff * c[3][0];
 1678|      0|  c[4][4] = c[4][4] - coeff * c[4][0];
 1679|      0|  r[4] = r[4] - coeff * r[0];
 1680|       |
 1681|      0|  pivot = 1.00 / lhs[1][1];
 1682|      0|  lhs[2][1] = lhs[2][1] * pivot;
 1683|      0|  lhs[3][1] = lhs[3][1] * pivot;
 1684|      0|  lhs[4][1] = lhs[4][1] * pivot;
 1685|      0|  c[0][1] = c[0][1] * pivot;
 1686|      0|  c[1][1] = c[1][1] * pivot;
 1687|      0|  c[2][1] = c[2][1] * pivot;
 1688|      0|  c[3][1] = c[3][1] * pivot;
 1689|      0|  c[4][1] = c[4][1] * pivot;
 1690|      0|  r[1] = r[1] * pivot;
 1691|       |
 1692|      0|  coeff = lhs[1][0];
 1693|      0|  lhs[2][0] = lhs[2][0] - coeff * lhs[2][1];
 1694|      0|  lhs[3][0] = lhs[3][0] - coeff * lhs[3][1];
 1695|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][1];
 1696|      0|  c[0][0] = c[0][0] - coeff * c[0][1];
 1697|      0|  c[1][0] = c[1][0] - coeff * c[1][1];
 1698|      0|  c[2][0] = c[2][0] - coeff * c[2][1];
 1699|      0|  c[3][0] = c[3][0] - coeff * c[3][1];
 1700|      0|  c[4][0] = c[4][0] - coeff * c[4][1];
 1701|      0|  r[0] = r[0] - coeff * r[1];
 1702|       |
 1703|      0|  coeff = lhs[1][2];
 1704|      0|  lhs[2][2] = lhs[2][2] - coeff * lhs[2][1];
 1705|      0|  lhs[3][2] = lhs[3][2] - coeff * lhs[3][1];
 1706|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][1];
 1707|      0|  c[0][2] = c[0][2] - coeff * c[0][1];
 1708|      0|  c[1][2] = c[1][2] - coeff * c[1][1];
 1709|      0|  c[2][2] = c[2][2] - coeff * c[2][1];
 1710|      0|  c[3][2] = c[3][2] - coeff * c[3][1];
 1711|      0|  c[4][2] = c[4][2] - coeff * c[4][1];
 1712|      0|  r[2] = r[2] - coeff * r[1];
 1713|       |
 1714|      0|  coeff = lhs[1][3];
 1715|      0|  lhs[2][3] = lhs[2][3] - coeff * lhs[2][1];
 1716|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][1];
 1717|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][1];
 1718|      0|  c[0][3] = c[0][3] - coeff * c[0][1];
 1719|      0|  c[1][3] = c[1][3] - coeff * c[1][1];
 1720|      0|  c[2][3] = c[2][3] - coeff * c[2][1];
 1721|      0|  c[3][3] = c[3][3] - coeff * c[3][1];
 1722|      0|  c[4][3] = c[4][3] - coeff * c[4][1];
 1723|      0|  r[3] = r[3] - coeff * r[1];
 1724|       |
 1725|      0|  coeff = lhs[1][4];
 1726|      0|  lhs[2][4] = lhs[2][4] - coeff * lhs[2][1];
 1727|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][1];
 1728|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][1];
 1729|      0|  c[0][4] = c[0][4] - coeff * c[0][1];
 1730|      0|  c[1][4] = c[1][4] - coeff * c[1][1];
 1731|      0|  c[2][4] = c[2][4] - coeff * c[2][1];
 1732|      0|  c[3][4] = c[3][4] - coeff * c[3][1];
 1733|      0|  c[4][4] = c[4][4] - coeff * c[4][1];
 1734|      0|  r[4] = r[4] - coeff * r[1];
 1735|       |
 1736|      0|  pivot = 1.00 / lhs[2][2];
 1737|      0|  lhs[3][2] = lhs[3][2] * pivot;
 1738|      0|  lhs[4][2] = lhs[4][2] * pivot;
 1739|      0|  c[0][2] = c[0][2] * pivot;
 1740|      0|  c[1][2] = c[1][2] * pivot;
 1741|      0|  c[2][2] = c[2][2] * pivot;
 1742|      0|  c[3][2] = c[3][2] * pivot;
 1743|      0|  c[4][2] = c[4][2] * pivot;
 1744|      0|  r[2] = r[2] * pivot;
 1745|       |
 1746|      0|  coeff = lhs[2][0];
 1747|      0|  lhs[3][0] = lhs[3][0] - coeff * lhs[3][2];
 1748|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][2];
 1749|      0|  c[0][0] = c[0][0] - coeff * c[0][2];
 1750|      0|  c[1][0] = c[1][0] - coeff * c[1][2];
 1751|      0|  c[2][0] = c[2][0] - coeff * c[2][2];
 1752|      0|  c[3][0] = c[3][0] - coeff * c[3][2];
 1753|      0|  c[4][0] = c[4][0] - coeff * c[4][2];
 1754|      0|  r[0] = r[0] - coeff * r[2];
 1755|       |
 1756|      0|  coeff = lhs[2][1];
 1757|      0|  lhs[3][1] = lhs[3][1] - coeff * lhs[3][2];
 1758|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][2];
 1759|      0|  c[0][1] = c[0][1] - coeff * c[0][2];
 1760|      0|  c[1][1] = c[1][1] - coeff * c[1][2];
 1761|      0|  c[2][1] = c[2][1] - coeff * c[2][2];
 1762|      0|  c[3][1] = c[3][1] - coeff * c[3][2];
 1763|      0|  c[4][1] = c[4][1] - coeff * c[4][2];
 1764|      0|  r[1] = r[1] - coeff * r[2];
 1765|       |
 1766|      0|  coeff = lhs[2][3];
 1767|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][2];
 1768|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][2];
 1769|      0|  c[0][3] = c[0][3] - coeff * c[0][2];
 1770|      0|  c[1][3] = c[1][3] - coeff * c[1][2];
 1771|      0|  c[2][3] = c[2][3] - coeff * c[2][2];
 1772|      0|  c[3][3] = c[3][3] - coeff * c[3][2];
 1773|      0|  c[4][3] = c[4][3] - coeff * c[4][2];
 1774|      0|  r[3] = r[3] - coeff * r[2];
 1775|       |
 1776|      0|  coeff = lhs[2][4];
 1777|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][2];
 1778|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][2];
 1779|      0|  c[0][4] = c[0][4] - coeff * c[0][2];
 1780|      0|  c[1][4] = c[1][4] - coeff * c[1][2];
 1781|      0|  c[2][4] = c[2][4] - coeff * c[2][2];
 1782|      0|  c[3][4] = c[3][4] - coeff * c[3][2];
 1783|      0|  c[4][4] = c[4][4] - coeff * c[4][2];
 1784|      0|  r[4] = r[4] - coeff * r[2];
 1785|       |
 1786|      0|  pivot = 1.00 / lhs[3][3];
 1787|      0|  lhs[4][3] = lhs[4][3] * pivot;
 1788|      0|  c[0][3] = c[0][3] * pivot;
 1789|      0|  c[1][3] = c[1][3] * pivot;
 1790|      0|  c[2][3] = c[2][3] * pivot;
 1791|      0|  c[3][3] = c[3][3] * pivot;
 1792|      0|  c[4][3] = c[4][3] * pivot;
 1793|      0|  r[3] = r[3] * pivot;
 1794|       |
 1795|      0|  coeff = lhs[3][0];
 1796|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][3];
 1797|      0|  c[0][0] = c[0][0] - coeff * c[0][3];
 1798|      0|  c[1][0] = c[1][0] - coeff * c[1][3];
 1799|      0|  c[2][0] = c[2][0] - coeff * c[2][3];
 1800|      0|  c[3][0] = c[3][0] - coeff * c[3][3];
 1801|      0|  c[4][0] = c[4][0] - coeff * c[4][3];
 1802|      0|  r[0] = r[0] - coeff * r[3];
 1803|       |
 1804|      0|  coeff = lhs[3][1];
 1805|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][3];
 1806|      0|  c[0][1] = c[0][1] - coeff * c[0][3];
 1807|      0|  c[1][1] = c[1][1] - coeff * c[1][3];
 1808|      0|  c[2][1] = c[2][1] - coeff * c[2][3];
 1809|      0|  c[3][1] = c[3][1] - coeff * c[3][3];
 1810|      0|  c[4][1] = c[4][1] - coeff * c[4][3];
 1811|      0|  r[1] = r[1] - coeff * r[3];
 1812|       |
 1813|      0|  coeff = lhs[3][2];
 1814|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][3];
 1815|      0|  c[0][2] = c[0][2] - coeff * c[0][3];
 1816|      0|  c[1][2] = c[1][2] - coeff * c[1][3];
 1817|      0|  c[2][2] = c[2][2] - coeff * c[2][3];
 1818|      0|  c[3][2] = c[3][2] - coeff * c[3][3];
 1819|      0|  c[4][2] = c[4][2] - coeff * c[4][3];
 1820|      0|  r[2] = r[2] - coeff * r[3];
 1821|       |
 1822|      0|  coeff = lhs[3][4];
 1823|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][3];
 1824|      0|  c[0][4] = c[0][4] - coeff * c[0][3];
 1825|      0|  c[1][4] = c[1][4] - coeff * c[1][3];
 1826|      0|  c[2][4] = c[2][4] - coeff * c[2][3];
 1827|      0|  c[3][4] = c[3][4] - coeff * c[3][3];
 1828|      0|  c[4][4] = c[4][4] - coeff * c[4][3];
 1829|      0|  r[4] = r[4] - coeff * r[3];
 1830|       |
 1831|      0|  pivot = 1.00 / lhs[4][4];
 1832|      0|  c[0][4] = c[0][4] * pivot;
 1833|      0|  c[1][4] = c[1][4] * pivot;
 1834|      0|  c[2][4] = c[2][4] * pivot;
 1835|      0|  c[3][4] = c[3][4] * pivot;
 1836|      0|  c[4][4] = c[4][4] * pivot;
 1837|      0|  r[4] = r[4] * pivot;
 1838|       |
 1839|      0|  coeff = lhs[4][0];
 1840|      0|  c[0][0] = c[0][0] - coeff * c[0][4];
 1841|      0|  c[1][0] = c[1][0] - coeff * c[1][4];
 1842|      0|  c[2][0] = c[2][0] - coeff * c[2][4];
 1843|      0|  c[3][0] = c[3][0] - coeff * c[3][4];
 1844|      0|  c[4][0] = c[4][0] - coeff * c[4][4];
 1845|      0|  r[0] = r[0] - coeff * r[4];
 1846|       |
 1847|      0|  coeff = lhs[4][1];
 1848|      0|  c[0][1] = c[0][1] - coeff * c[0][4];
 1849|      0|  c[1][1] = c[1][1] - coeff * c[1][4];
 1850|      0|  c[2][1] = c[2][1] - coeff * c[2][4];
 1851|      0|  c[3][1] = c[3][1] - coeff * c[3][4];
 1852|      0|  c[4][1] = c[4][1] - coeff * c[4][4];
 1853|      0|  r[1] = r[1] - coeff * r[4];
 1854|       |
 1855|      0|  coeff = lhs[4][2];
 1856|      0|  c[0][2] = c[0][2] - coeff * c[0][4];
 1857|      0|  c[1][2] = c[1][2] - coeff * c[1][4];
 1858|      0|  c[2][2] = c[2][2] - coeff * c[2][4];
 1859|      0|  c[3][2] = c[3][2] - coeff * c[3][4];
 1860|      0|  c[4][2] = c[4][2] - coeff * c[4][4];
 1861|      0|  r[2] = r[2] - coeff * r[4];
 1862|       |
 1863|      0|  coeff = lhs[4][3];
 1864|      0|  c[0][3] = c[0][3] - coeff * c[0][4];
 1865|      0|  c[1][3] = c[1][3] - coeff * c[1][4];
 1866|      0|  c[2][3] = c[2][3] - coeff * c[2][4];
 1867|      0|  c[3][3] = c[3][3] - coeff * c[3][4];
 1868|      0|  c[4][3] = c[4][3] - coeff * c[4][4];
 1869|      0|  r[3] = r[3] - coeff * r[4];
 1870|      0|}
 1871|       |
 1872|      0|void binvrhs(double lhs[5][5], double r[5]) {
 1873|      0|  double pivot, coeff;
 1874|       |
 1875|      0|  pivot = 1.00 / lhs[0][0];
 1876|      0|  lhs[1][0] = lhs[1][0] * pivot;
 1877|      0|  lhs[2][0] = lhs[2][0] * pivot;
 1878|      0|  lhs[3][0] = lhs[3][0] * pivot;
 1879|      0|  lhs[4][0] = lhs[4][0] * pivot;
 1880|      0|  r[0] = r[0] * pivot;
 1881|       |
 1882|      0|  coeff = lhs[0][1];
 1883|      0|  lhs[1][1] = lhs[1][1] - coeff * lhs[1][0];
 1884|      0|  lhs[2][1] = lhs[2][1] - coeff * lhs[2][0];
 1885|      0|  lhs[3][1] = lhs[3][1] - coeff * lhs[3][0];
 1886|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][0];
 1887|      0|  r[1] = r[1] - coeff * r[0];
 1888|       |
 1889|      0|  coeff = lhs[0][2];
 1890|      0|  lhs[1][2] = lhs[1][2] - coeff * lhs[1][0];
 1891|      0|  lhs[2][2] = lhs[2][2] - coeff * lhs[2][0];
 1892|      0|  lhs[3][2] = lhs[3][2] - coeff * lhs[3][0];
 1893|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][0];
 1894|      0|  r[2] = r[2] - coeff * r[0];
 1895|       |
 1896|      0|  coeff = lhs[0][3];
 1897|      0|  lhs[1][3] = lhs[1][3] - coeff * lhs[1][0];
 1898|      0|  lhs[2][3] = lhs[2][3] - coeff * lhs[2][0];
 1899|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][0];
 1900|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][0];
 1901|      0|  r[3] = r[3] - coeff * r[0];
 1902|       |
 1903|      0|  coeff = lhs[0][4];
 1904|      0|  lhs[1][4] = lhs[1][4] - coeff * lhs[1][0];
 1905|      0|  lhs[2][4] = lhs[2][4] - coeff * lhs[2][0];
 1906|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][0];
 1907|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][0];
 1908|      0|  r[4] = r[4] - coeff * r[0];
 1909|       |
 1910|      0|  pivot = 1.00 / lhs[1][1];
 1911|      0|  lhs[2][1] = lhs[2][1] * pivot;
 1912|      0|  lhs[3][1] = lhs[3][1] * pivot;
 1913|      0|  lhs[4][1] = lhs[4][1] * pivot;
 1914|      0|  r[1] = r[1] * pivot;
 1915|       |
 1916|      0|  coeff = lhs[1][0];
 1917|      0|  lhs[2][0] = lhs[2][0] - coeff * lhs[2][1];
 1918|      0|  lhs[3][0] = lhs[3][0] - coeff * lhs[3][1];
 1919|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][1];
 1920|      0|  r[0] = r[0] - coeff * r[1];
 1921|       |
 1922|      0|  coeff = lhs[1][2];
 1923|      0|  lhs[2][2] = lhs[2][2] - coeff * lhs[2][1];
 1924|      0|  lhs[3][2] = lhs[3][2] - coeff * lhs[3][1];
 1925|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][1];
 1926|      0|  r[2] = r[2] - coeff * r[1];
 1927|       |
 1928|      0|  coeff = lhs[1][3];
 1929|      0|  lhs[2][3] = lhs[2][3] - coeff * lhs[2][1];
 1930|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][1];
 1931|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][1];
 1932|      0|  r[3] = r[3] - coeff * r[1];
 1933|       |
 1934|      0|  coeff = lhs[1][4];
 1935|      0|  lhs[2][4] = lhs[2][4] - coeff * lhs[2][1];
 1936|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][1];
 1937|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][1];
 1938|      0|  r[4] = r[4] - coeff * r[1];
 1939|       |
 1940|      0|  pivot = 1.00 / lhs[2][2];
 1941|      0|  lhs[3][2] = lhs[3][2] * pivot;
 1942|      0|  lhs[4][2] = lhs[4][2] * pivot;
 1943|      0|  r[2] = r[2] * pivot;
 1944|       |
 1945|      0|  coeff = lhs[2][0];
 1946|      0|  lhs[3][0] = lhs[3][0] - coeff * lhs[3][2];
 1947|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][2];
 1948|      0|  r[0] = r[0] - coeff * r[2];
 1949|       |
 1950|      0|  coeff = lhs[2][1];
 1951|      0|  lhs[3][1] = lhs[3][1] - coeff * lhs[3][2];
 1952|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][2];
 1953|      0|  r[1] = r[1] - coeff * r[2];
 1954|       |
 1955|      0|  coeff = lhs[2][3];
 1956|      0|  lhs[3][3] = lhs[3][3] - coeff * lhs[3][2];
 1957|      0|  lhs[4][3] = lhs[4][3] - coeff * lhs[4][2];
 1958|      0|  r[3] = r[3] - coeff * r[2];
 1959|       |
 1960|      0|  coeff = lhs[2][4];
 1961|      0|  lhs[3][4] = lhs[3][4] - coeff * lhs[3][2];
 1962|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][2];
 1963|      0|  r[4] = r[4] - coeff * r[2];
 1964|       |
 1965|      0|  pivot = 1.00 / lhs[3][3];
 1966|      0|  lhs[4][3] = lhs[4][3] * pivot;
 1967|      0|  r[3] = r[3] * pivot;
 1968|       |
 1969|      0|  coeff = lhs[3][0];
 1970|      0|  lhs[4][0] = lhs[4][0] - coeff * lhs[4][3];
 1971|      0|  r[0] = r[0] - coeff * r[3];
 1972|       |
 1973|      0|  coeff = lhs[3][1];
 1974|      0|  lhs[4][1] = lhs[4][1] - coeff * lhs[4][3];
 1975|      0|  r[1] = r[1] - coeff * r[3];
 1976|       |
 1977|      0|  coeff = lhs[3][2];
 1978|      0|  lhs[4][2] = lhs[4][2] - coeff * lhs[4][3];
 1979|      0|  r[2] = r[2] - coeff * r[3];
 1980|       |
 1981|      0|  coeff = lhs[3][4];
 1982|      0|  lhs[4][4] = lhs[4][4] - coeff * lhs[4][3];
 1983|      0|  r[4] = r[4] - coeff * r[3];
 1984|       |
 1985|      0|  pivot = 1.00 / lhs[4][4];
 1986|      0|  r[4] = r[4] * pivot;
 1987|       |
 1988|      0|  coeff = lhs[4][0];
 1989|      0|  r[0] = r[0] - coeff * r[4];
 1990|       |
 1991|      0|  coeff = lhs[4][1];
 1992|      0|  r[1] = r[1] - coeff * r[4];
 1993|       |
 1994|      0|  coeff = lhs[4][2];
 1995|      0|  r[2] = r[2] - coeff * r[4];
 1996|       |
 1997|      0|  coeff = lhs[4][3];
 1998|      0|  r[3] = r[3] - coeff * r[4];
 1999|      0|}
 2000|       |
 2001|       |//---------------------------------------------------------------------
 2002|       |// verification routine
 2003|       |//---------------------------------------------------------------------
 2004|      1|void verify(int no_time_steps, char *Class, logical *verified) {
 2005|      1|  double xcrref[5], xceref[5], xcrdif[5], xcedif[5];
 2006|      1|  double epsilon, xce[5], xcr[5], dtref = 0.0;
 2007|      1|  int m;
 2008|       |
 2009|       |  //---------------------------------------------------------------------
 2010|       |  // tolerance level
 2011|       |  //---------------------------------------------------------------------
 2012|      1|  epsilon = 1.0e-08;
 2013|       |
 2014|       |  //---------------------------------------------------------------------
 2015|       |  // compute the error norm and the residual norm, and exit if not printing
 2016|       |  //---------------------------------------------------------------------
 2017|      1|  error_norm(xce);
 2018|      1|#pragma dvm actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
 2019|      1|  compute_rhs();
 2020|      1|#pragma dvm get_actual(us, vs, ws, qs, rho_i, square, forcing, u, rhs)
 2021|       |
 2022|      1|  rhs_norm(xcr);
 2023|       |
 2024|      6|  for (m = 0; m < 5; m++) {
 2025|      5|    xcr[m] = xcr[m] / dt;
 2026|      5|  }
 2027|       |
 2028|      1|  *Class = 'U';
 2029|      1|  *verified = true;
 2030|       |
 2031|      6|  for (m = 0; m < 5; m++) {
 2032|      5|    xcrref[m] = 1.0;
 2033|      5|    xceref[m] = 1.0;
 2034|      5|  }
 2035|       |
 2036|       |  //---------------------------------------------------------------------
 2037|       |  // reference data for 12X12X12 grids after 60 time steps, with DT = 1.0e-02
 2038|       |  //---------------------------------------------------------------------
 2039|      1|  if ((grid_points[0] == 12) && (grid_points[1] == 12) &&
 2040|      1|      (grid_points[2] == 12) && (no_time_steps == 60)) {
 2041|       |
 2042|      0|    *Class = 'S';
 2043|      0|    dtref = 1.0e-2;
 2044|       |
 2045|       |    //---------------------------------------------------------------------
 2046|       |    // Reference values of RMS-norms of residual.
 2047|       |    //---------------------------------------------------------------------
 2048|      0|    xcrref[0] = 1.7034283709541311e-01;
 2049|      0|    xcrref[1] = 1.2975252070034097e-02;
 2050|      0|    xcrref[2] = 3.2527926989486055e-02;
 2051|      0|    xcrref[3] = 2.6436421275166801e-02;
 2052|      0|    xcrref[4] = 1.9211784131744430e-01;
 2053|       |
 2054|       |    //---------------------------------------------------------------------
 2055|       |    // Reference values of RMS-norms of solution error.
 2056|       |    //---------------------------------------------------------------------
 2057|      0|    xceref[0] = 4.9976913345811579e-04;
 2058|      0|    xceref[1] = 4.5195666782961927e-05;
 2059|      0|    xceref[2] = 7.3973765172921357e-05;
 2060|      0|    xceref[3] = 7.3821238632439731e-05;
 2061|      0|    xceref[4] = 8.9269630987491446e-04;
 2062|       |
 2063|       |    //---------------------------------------------------------------------
 2064|       |    // reference data for 24X24X24 grids after 200 time steps,
 2065|       |    // with DT = 0.8e-3
 2066|       |    //---------------------------------------------------------------------
 2067|      1|  } else if ((grid_points[0] == 24) && (grid_points[1] == 24) &&
 2068|      1|             (grid_points[2] == 24) && (no_time_steps == 200)) {
 2069|       |
 2070|      0|    *Class = 'W';
 2071|      0|    dtref = 0.8e-3;
 2072|       |    //---------------------------------------------------------------------
 2073|       |    // Reference values of RMS-norms of residual.
 2074|       |    //---------------------------------------------------------------------
 2075|      0|    xcrref[0] = 0.1125590409344e+03;
 2076|      0|    xcrref[1] = 0.1180007595731e+02;
 2077|      0|    xcrref[2] = 0.2710329767846e+02;
 2078|      0|    xcrref[3] = 0.2469174937669e+02;
 2079|      0|    xcrref[4] = 0.2638427874317e+03;
 2080|       |
 2081|       |    //---------------------------------------------------------------------
 2082|       |    // Reference values of RMS-norms of solution error.
 2083|       |    //---------------------------------------------------------------------
 2084|      0|    xceref[0] = 0.4419655736008e+01;
 2085|      0|    xceref[1] = 0.4638531260002e+00;
 2086|      0|    xceref[2] = 0.1011551749967e+01;
 2087|      0|    xceref[3] = 0.9235878729944e+00;
 2088|      0|    xceref[4] = 0.1018045837718e+02;
 2089|       |
 2090|       |    //---------------------------------------------------------------------
 2091|       |    // reference data for 64X64X64 grids after 200 time steps,
 2092|       |    // with DT = 0.8e-3
 2093|       |    //---------------------------------------------------------------------
 2094|      1|  } else if ((grid_points[0] == 64) && (grid_points[1] == 64) &&
 2095|      1|             (grid_points[2] == 64) && (no_time_steps == 200)) {
 2096|       |
 2097|      1|    *Class = 'A';
 2098|      1|    dtref = 0.8e-3;
 2099|       |    //---------------------------------------------------------------------
 2100|       |    // Reference values of RMS-norms of residual.
 2101|       |    //---------------------------------------------------------------------
 2102|      1|    xcrref[0] = 1.0806346714637264e+02;
 2103|      1|    xcrref[1] = 1.1319730901220813e+01;
 2104|      1|    xcrref[2] = 2.5974354511582465e+01;
 2105|      1|    xcrref[3] = 2.3665622544678910e+01;
 2106|      1|    xcrref[4] = 2.5278963211748344e+02;
 2107|       |
 2108|       |    //---------------------------------------------------------------------
 2109|       |    // Reference values of RMS-norms of solution error.
 2110|       |    //---------------------------------------------------------------------
 2111|      1|    xceref[0] = 4.2348416040525025e+00;
 2112|      1|    xceref[1] = 4.4390282496995698e-01;
 2113|      1|    xceref[2] = 9.6692480136345650e-01;
 2114|      1|    xceref[3] = 8.8302063039765474e-01;
 2115|      1|    xceref[4] = 9.7379901770829278e+00;
 2116|       |
 2117|       |    //---------------------------------------------------------------------
 2118|       |    // reference data for 102X102X102 grids after 200 time steps,
 2119|       |    // with DT = 3.0e-04
 2120|       |    //---------------------------------------------------------------------
 2121|      1|  } else if ((grid_points[0] == 102) && (grid_points[1] == 102) &&
 2122|      0|             (grid_points[2] == 102) && (no_time_steps == 200)) {
 2123|       |
 2124|      0|    *Class = 'B';
 2125|      0|    dtref = 3.0e-4;
 2126|       |
 2127|       |    //---------------------------------------------------------------------
 2128|       |    // Reference values of RMS-norms of residual.
 2129|       |    //---------------------------------------------------------------------
 2130|      0|    xcrref[0] = 1.4233597229287254e+03;
 2131|      0|    xcrref[1] = 9.9330522590150238e+01;
 2132|      0|    xcrref[2] = 3.5646025644535285e+02;
 2133|      0|    xcrref[3] = 3.2485447959084092e+02;
 2134|      0|    xcrref[4] = 3.2707541254659363e+03;
 2135|       |
 2136|       |    //---------------------------------------------------------------------
 2137|       |    // Reference values of RMS-norms of solution error.
 2138|       |    //---------------------------------------------------------------------
 2139|      0|    xceref[0] = 5.2969847140936856e+01;
 2140|      0|    xceref[1] = 4.4632896115670668e+00;
 2141|      0|    xceref[2] = 1.3122573342210174e+01;
 2142|      0|    xceref[3] = 1.2006925323559144e+01;
 2143|      0|    xceref[4] = 1.2459576151035986e+02;
 2144|       |
 2145|       |    //---------------------------------------------------------------------
 2146|       |    // reference data for 162X162X162 grids after 200 time steps,
 2147|       |    // with DT = 1.0e-04
 2148|       |    //---------------------------------------------------------------------
 2149|      0|  } else if ((grid_points[0] == 162) && (grid_points[1] == 162) &&
 2150|      0|             (grid_points[2] == 162) && (no_time_steps == 200)) {
 2151|       |
 2152|      0|    *Class = 'C';
 2153|      0|    dtref = 1.0e-4;
 2154|       |
 2155|       |    //---------------------------------------------------------------------
 2156|       |    // Reference values of RMS-norms of residual.
 2157|       |    //---------------------------------------------------------------------
 2158|      0|    xcrref[0] = 0.62398116551764615e+04;
 2159|      0|    xcrref[1] = 0.50793239190423964e+03;
 2160|      0|    xcrref[2] = 0.15423530093013596e+04;
 2161|      0|    xcrref[3] = 0.13302387929291190e+04;
 2162|      0|    xcrref[4] = 0.11604087428436455e+05;
 2163|       |
 2164|       |    //---------------------------------------------------------------------
 2165|       |    // Reference values of RMS-norms of solution error.
 2166|       |    //---------------------------------------------------------------------
 2167|      0|    xceref[0] = 0.16462008369091265e+03;
 2168|      0|    xceref[1] = 0.11497107903824313e+02;
 2169|      0|    xceref[2] = 0.41207446207461508e+02;
 2170|      0|    xceref[3] = 0.37087651059694167e+02;
 2171|      0|    xceref[4] = 0.36211053051841265e+03;
 2172|       |
 2173|       |    //---------------------------------------------------------------------
 2174|       |    // reference data for 408x408x408 grids after 250 time steps,
 2175|       |    // with DT = 0.2e-04
 2176|       |    //---------------------------------------------------------------------
 2177|      0|  } else if ((grid_points[0] == 408) && (grid_points[1] == 408) &&
 2178|      0|             (grid_points[2] == 408) && (no_time_steps == 250)) {
 2179|       |
 2180|      0|    *Class = 'D';
 2181|      0|    dtref = 0.2e-4;
 2182|       |
 2183|       |    //---------------------------------------------------------------------
 2184|       |    // Reference values of RMS-norms of residual.
 2185|       |    //---------------------------------------------------------------------
 2186|      0|    xcrref[0] = 0.2533188551738e+05;
 2187|      0|    xcrref[1] = 0.2346393716980e+04;
 2188|      0|    xcrref[2] = 0.6294554366904e+04;
 2189|      0|    xcrref[3] = 0.5352565376030e+04;
 2190|      0|    xcrref[4] = 0.3905864038618e+05;
 2191|       |
 2192|       |    //---------------------------------------------------------------------
 2193|       |    // Reference values of RMS-norms of solution error.
 2194|       |    //---------------------------------------------------------------------
 2195|      0|    xceref[0] = 0.3100009377557e+03;
 2196|      0|    xceref[1] = 0.2424086324913e+02;
 2197|      0|    xceref[2] = 0.7782212022645e+02;
 2198|      0|    xceref[3] = 0.6835623860116e+02;
 2199|      0|    xceref[4] = 0.6065737200368e+03;
 2200|       |
 2201|       |    //---------------------------------------------------------------------
 2202|       |    // reference data for 1020x1020x1020 grids after 250 time steps,
 2203|       |    // with DT = 0.4e-05
 2204|       |    //---------------------------------------------------------------------
 2205|      0|  } else if ((grid_points[0] == 1020) && (grid_points[1] == 1020) &&
 2206|      0|             (grid_points[2] == 1020) && (no_time_steps == 250)) {
 2207|       |
 2208|      0|    *Class = 'E';
 2209|      0|    dtref = 0.4e-5;
 2210|       |
 2211|       |    //---------------------------------------------------------------------
 2212|       |    // Reference values of RMS-norms of residual.
 2213|       |    //---------------------------------------------------------------------
 2214|      0|    xcrref[0] = 0.9795372484517e+05;
 2215|      0|    xcrref[1] = 0.9739814511521e+04;
 2216|      0|    xcrref[2] = 0.2467606342965e+05;
 2217|      0|    xcrref[3] = 0.2092419572860e+05;
 2218|      0|    xcrref[4] = 0.1392138856939e+06;
 2219|       |
 2220|       |    //---------------------------------------------------------------------
 2221|       |    // Reference values of RMS-norms of solution error.
 2222|       |    //---------------------------------------------------------------------
 2223|      0|    xceref[0] = 0.4327562208414e+03;
 2224|      0|    xceref[1] = 0.3699051964887e+02;
 2225|      0|    xceref[2] = 0.1089845040954e+03;
 2226|      0|    xceref[3] = 0.9462517622043e+02;
 2227|      0|    xceref[4] = 0.7765512765309e+03;
 2228|       |
 2229|      0|  } else {
 2230|      0|    *verified = false;
 2231|      0|  }
 2232|       |
 2233|       |  //---------------------------------------------------------------------
 2234|       |  // verification test for residuals if gridsize is one of
 2235|       |  // the defined grid sizes above (*Class != 'U')
 2236|       |  //---------------------------------------------------------------------
 2237|       |
 2238|       |  //---------------------------------------------------------------------
 2239|       |  // Compute the difference of solution values and the known reference values.
 2240|       |  //---------------------------------------------------------------------
 2241|      6|  for (m = 0; m < 5; m++) {
 2242|      5|    xcrdif[m] = fabs((xcr[m] - xcrref[m]) / xcrref[m]);
 2243|      5|    xcedif[m] = fabs((xce[m] - xceref[m]) / xceref[m]);
 2244|      5|  }
 2245|       |
 2246|       |  //---------------------------------------------------------------------
 2247|       |  // Output the comparison of computed results to known cases.
 2248|       |  //---------------------------------------------------------------------
 2249|      1|  if (*Class != 'U') {
 2250|      1|    printf(" Verification being performed for class %c\n", *Class);
 2251|      1|    printf(" accuracy setting for epsilon = %20.13E\n", epsilon);
 2252|      1|    *verified = (fabs(dt - dtref) <= epsilon);
 2253|      1|    if (!(*verified)) {
 2254|      0|      *Class = 'U';
 2255|      0|      printf(" DT does not match the reference value of %15.8E\n", dtref);
 2256|      0|    }
 2257|      1|  } else {
 2258|      0|    printf(" Unknown class\n");
 2259|      0|  }
 2260|       |
 2261|      1|  if (*Class != 'U') {
 2262|      1|    printf(" Comparison of RMS-norms of residual\n");
 2263|      1|  } else {
 2264|      0|    printf(" RMS-norms of residual\n");
 2265|      0|  }
 2266|       |
 2267|      6|  for (m = 0; m < 5; m++) {
 2268|      5|    if (*Class == 'U') {
 2269|      0|      printf("          %2d%20.13E\n", m + 1, xcr[m]);
 2270|      5|    } else if (xcrdif[m] <= epsilon) {
 2271|      5|      printf("          %2d%20.13E%20.13E%20.13E\n", m + 1, xcr[m], xcrref[m],
 2272|      5|             xcrdif[m]);
 2273|      5|    } else {
 2274|      0|      *verified = false;
 2275|      0|      printf(" FAILURE: %2d%20.13E%20.13E%20.13E\n", m + 1, xcr[m], xcrref[m],
 2276|      0|             xcrdif[m]);
 2277|      0|    }
 2278|      5|  }
 2279|       |
 2280|      1|  if (*Class != 'U') {
 2281|      1|    printf(" Comparison of RMS-norms of solution error\n");
 2282|      1|  } else {
 2283|      0|    printf(" RMS-norms of solution error\n");
 2284|      0|  }
 2285|       |
 2286|      6|  for (m = 0; m < 5; m++) {
 2287|      5|    if (*Class == 'U') {
 2288|      0|      printf("          %2d%20.13E\n", m + 1, xce[m]);
 2289|      5|    } else if (xcedif[m] <= epsilon) {
 2290|      5|      printf("          %2d%20.13E%20.13E%20.13E\n", m + 1, xce[m], xceref[m],
 2291|      5|             xcedif[m]);
 2292|      5|    } else {
 2293|      0|      *verified = false;
 2294|      0|      printf(" FAILURE: %2d%20.13E%20.13E%20.13E\n", m + 1, xce[m], xceref[m],
 2295|      0|             xcedif[m]);
 2296|      0|    }
 2297|      5|  }
 2298|       |
 2299|      1|  if (*Class == 'U') {
 2300|      0|    printf(" No reference values provided\n");
 2301|      0|    printf(" No verification performed\n");
 2302|      1|  } else if (*verified) {
 2303|      1|    printf(" Verification Successful\n");
 2304|      1|  } else {
 2305|      0|    printf(" Verification failed\n");
 2306|      0|  }
 2307|      1|}
 2308|       |
 2309|       |//---------------------------------------------------------------------
 2310|       |//
 2311|       |// Performs line solves in X direction by first factoring
 2312|       |// the block-tridiagonal matrix into an upper triangular matrix,
 2313|       |// and then performing back substitution to solve for the unknow
 2314|       |// vectors of each line.
 2315|       |//
 2316|       |// Make sure we treat elements zero to cell_size in the direction
 2317|       |// of the sweep.
 2318|       |//
 2319|       |//---------------------------------------------------------------------
 2320|    201|void x_solve() {
 2321|    201|  int i, j, k, m, n, isize, ksize, jsize;
 2322|       |
 2323|       |  //---------------------------------------------------------------------
 2324|       |  //---------------------------------------------------------------------
 2325|       |
 2326|    201|  if (timeron)
 2327|      0|    timer_start(t_xsolve);
 2328|       |
 2329|       |  //---------------------------------------------------------------------
 2330|       |  //---------------------------------------------------------------------
 2331|       |
 2332|       |  //---------------------------------------------------------------------
 2333|       |  // This function computes the left hand side in the xi-direction
 2334|       |  //---------------------------------------------------------------------
 2335|       |
 2336|    201|  isize = grid_points[0] - 1;
 2337|    201|  ksize = grid_points[2] - 2;
 2338|    201|  jsize = grid_points[1] - 2;
 2339|       |
 2340|       |  ////#pragma spf assert nomacro
 2341|       |
 2342|       |  ////#pragma spf assert nomacro
 2343|    201|  {
 2344|       |    //---------------------------------------------------------------------
 2345|       |    // determine a (labeled f) and n jacobians
 2346|       |    //---------------------------------------------------------------------
 2347|    201|#pragma dvm region
 2348|    201|{
 2349|    201|#pragma dvm parallel ([k][j] on rhs[k][j][][]) \
 2350|    201|            private(fjac, i, j, lhs, m, n, njac, tmp1, tmp2, tmp3)
 2351|  12.6k|    for (k = 1; k <= ksize; k++) {
 2352|   785k|      for (j = 1; j <= jsize; j++) {
 2353|  50.2M|        for (i = 0; i <= isize; i++) {
 2354|  49.4M|          tmp1 = rho_i[k][j][i];
 2355|  49.4M|          tmp2 = tmp1 * tmp1;
 2356|  49.4M|          tmp3 = tmp1 * tmp2;
 2357|       |          //-------------------------------------------------------------------
 2358|       |          //
 2359|       |          //-------------------------------------------------------------------
 2360|  49.4M|          fjac[i][0][0] = 0.0;
 2361|  49.4M|          fjac[i][1][0] = 1.0;
 2362|  49.4M|          fjac[i][2][0] = 0.0;
 2363|  49.4M|          fjac[i][3][0] = 0.0;
 2364|  49.4M|          fjac[i][4][0] = 0.0;
 2365|       |
 2366|  49.4M|          fjac[i][0][1] =
 2367|  49.4M|              -(u[k][j][i][1] * tmp2 * u[k][j][i][1]) + c2 * qs[k][j][i];
 2368|  49.4M|          fjac[i][1][1] = (2.0 - c2) * (u[k][j][i][1] / u[k][j][i][0]);
 2369|  49.4M|          fjac[i][2][1] = -c2 * (u[k][j][i][2] * tmp1);
 2370|  49.4M|          fjac[i][3][1] = -c2 * (u[k][j][i][3] * tmp1);
 2371|  49.4M|          fjac[i][4][1] = c2;
 2372|       |
 2373|  49.4M|          fjac[i][0][2] = -(u[k][j][i][1] * u[k][j][i][2]) * tmp2;
 2374|  49.4M|          fjac[i][1][2] = u[k][j][i][2] * tmp1;
 2375|  49.4M|          fjac[i][2][2] = u[k][j][i][1] * tmp1;
 2376|  49.4M|          fjac[i][3][2] = 0.0;
 2377|  49.4M|          fjac[i][4][2] = 0.0;
 2378|       |
 2379|  49.4M|          fjac[i][0][3] = -(u[k][j][i][1] * u[k][j][i][3]) * tmp2;
 2380|  49.4M|          fjac[i][1][3] = u[k][j][i][3] * tmp1;
 2381|  49.4M|          fjac[i][2][3] = 0.0;
 2382|  49.4M|          fjac[i][3][3] = u[k][j][i][1] * tmp1;
 2383|  49.4M|          fjac[i][4][3] = 0.0;
 2384|       |
 2385|  49.4M|          fjac[i][0][4] = (c2 * 2.0 * square[k][j][i] - c1 * u[k][j][i][4]) *
 2386|  49.4M|                          (u[k][j][i][1] * tmp2);
 2387|  49.4M|          fjac[i][1][4] =
 2388|  49.4M|              c1 * u[k][j][i][4] * tmp1 -
 2389|  49.4M|              c2 * (u[k][j][i][1] * u[k][j][i][1] * tmp2 + qs[k][j][i]);
 2390|  49.4M|          fjac[i][2][4] = -c2 * (u[k][j][i][2] * u[k][j][i][1]) * tmp2;
 2391|  49.4M|          fjac[i][3][4] = -c2 * (u[k][j][i][3] * u[k][j][i][1]) * tmp2;
 2392|  49.4M|          fjac[i][4][4] = c1 * (u[k][j][i][1] * tmp1);
 2393|       |
 2394|  49.4M|          njac[i][0][0] = 0.0;
 2395|  49.4M|          njac[i][1][0] = 0.0;
 2396|  49.4M|          njac[i][2][0] = 0.0;
 2397|  49.4M|          njac[i][3][0] = 0.0;
 2398|  49.4M|          njac[i][4][0] = 0.0;
 2399|       |
 2400|  49.4M|          njac[i][0][1] = -con43 * c3c4 * tmp2 * u[k][j][i][1];
 2401|  49.4M|          njac[i][1][1] = con43 * c3c4 * tmp1;
 2402|  49.4M|          njac[i][2][1] = 0.0;
 2403|  49.4M|          njac[i][3][1] = 0.0;
 2404|  49.4M|          njac[i][4][1] = 0.0;
 2405|       |
 2406|  49.4M|          njac[i][0][2] = -c3c4 * tmp2 * u[k][j][i][2];
 2407|  49.4M|          njac[i][1][2] = 0.0;
 2408|  49.4M|          njac[i][2][2] = c3c4 * tmp1;
 2409|  49.4M|          njac[i][3][2] = 0.0;
 2410|  49.4M|          njac[i][4][2] = 0.0;
 2411|       |
 2412|  49.4M|          njac[i][0][3] = -c3c4 * tmp2 * u[k][j][i][3];
 2413|  49.4M|          njac[i][1][3] = 0.0;
 2414|  49.4M|          njac[i][2][3] = 0.0;
 2415|  49.4M|          njac[i][3][3] = c3c4 * tmp1;
 2416|  49.4M|          njac[i][4][3] = 0.0;
 2417|       |
 2418|  49.4M|          njac[i][0][4] =
 2419|  49.4M|              -(con43 * c3c4 - c1345) * tmp3 * (u[k][j][i][1] * u[k][j][i][1]) -
 2420|  49.4M|              (c3c4 - c1345) * tmp3 * (u[k][j][i][2] * u[k][j][i][2]) -
 2421|  49.4M|              (c3c4 - c1345) * tmp3 * (u[k][j][i][3] * u[k][j][i][3]) -
 2422|  49.4M|              c1345 * tmp2 * u[k][j][i][4];
 2423|       |
 2424|  49.4M|          njac[i][1][4] = (con43 * c3c4 - c1345) * tmp2 * u[k][j][i][1];
 2425|  49.4M|          njac[i][2][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][2];
 2426|  49.4M|          njac[i][3][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][3];
 2427|  49.4M|          njac[i][4][4] = (c1345)*tmp1;
 2428|  49.4M|        }
 2429|       |        //---------------------------------------------------------------------
 2430|       |        // now jacobians set, so form left hand side in x direction
 2431|       |        //---------------------------------------------------------------------
 2432|       |        /* lhsinit(lhs, isize) is inlined below */
 2433|       |        ////#pragma spf assert nomacro
 2434|   772k|        {
 2435|       |
 2436|   772k|          int size0 = isize;
 2437|   772k|          int i, m, n;
 2438|       |
 2439|   772k|          i = size0;
 2440|       |          //---------------------------------------------------------------------
 2441|       |          // zero the whole left hand side for starters
 2442|       |          //---------------------------------------------------------------------
 2443|  4.63M|          for (n = 0; n < 5; n++) {
 2444|  23.1M|            for (m = 0; m < 5; m++) {
 2445|  19.3M|              lhs[0][0][n][m] = 0.0;
 2446|  19.3M|              lhs[0][1][n][m] = 0.0;
 2447|  19.3M|              lhs[0][2][n][m] = 0.0;
 2448|  19.3M|              lhs[(grid_points[0] - 1)][0][n][m] = 0.0;
 2449|  19.3M|              lhs[(grid_points[0] - 1)][1][n][m] = 0.0;
 2450|  19.3M|              lhs[(grid_points[0] - 1)][2][n][m] = 0.0;
 2451|  19.3M|            }
 2452|  3.86M|          }
 2453|       |
 2454|       |          //---------------------------------------------------------------------
 2455|       |          // next, set all diagonal values to 1. This is overkill, but
 2456|       |          // convenient
 2457|       |          //---------------------------------------------------------------------
 2458|  4.63M|          for (m = 0; m < 5; m++) {
 2459|  3.86M|            lhs[0][1][m][m] = 1.0;
 2460|  3.86M|            lhs[(grid_points[0] - 1)][1][m][m] = 1.0;
 2461|  3.86M|          }
 2462|   772k|        }
 2463|       |
 2464|  48.6M|        for (i = 1; i <= (grid_points[0] - 1) - 1; i++) {
 2465|  47.9M|          tmp1 = dt * tx1;
 2466|  47.9M|          tmp2 = dt * tx2;
 2467|       |
 2468|  47.9M|          lhs[i][AA][0][0] =
 2469|  47.9M|              -tmp2 * fjac[i - 1][0][0] - tmp1 * njac[i - 1][0][0] - tmp1 * dx1;
 2470|  47.9M|          lhs[i][AA][1][0] =
 2471|  47.9M|              -tmp2 * fjac[i - 1][1][0] - tmp1 * njac[i - 1][1][0];
 2472|  47.9M|          lhs[i][AA][2][0] =
 2473|  47.9M|              -tmp2 * fjac[i - 1][2][0] - tmp1 * njac[i - 1][2][0];
 2474|  47.9M|          lhs[i][AA][3][0] =
 2475|  47.9M|              -tmp2 * fjac[i - 1][3][0] - tmp1 * njac[i - 1][3][0];
 2476|  47.9M|          lhs[i][AA][4][0] =
 2477|  47.9M|              -tmp2 * fjac[i - 1][4][0] - tmp1 * njac[i - 1][4][0];
 2478|       |
 2479|  47.9M|          lhs[i][AA][0][1] =
 2480|  47.9M|              -tmp2 * fjac[i - 1][0][1] - tmp1 * njac[i - 1][0][1];
 2481|  47.9M|          lhs[i][AA][1][1] =
 2482|  47.9M|              -tmp2 * fjac[i - 1][1][1] - tmp1 * njac[i - 1][1][1] - tmp1 * dx2;
 2483|  47.9M|          lhs[i][AA][2][1] =
 2484|  47.9M|              -tmp2 * fjac[i - 1][2][1] - tmp1 * njac[i - 1][2][1];
 2485|  47.9M|          lhs[i][AA][3][1] =
 2486|  47.9M|              -tmp2 * fjac[i - 1][3][1] - tmp1 * njac[i - 1][3][1];
 2487|  47.9M|          lhs[i][AA][4][1] =
 2488|  47.9M|              -tmp2 * fjac[i - 1][4][1] - tmp1 * njac[i - 1][4][1];
 2489|       |
 2490|  47.9M|          lhs[i][AA][0][2] =
 2491|  47.9M|              -tmp2 * fjac[i - 1][0][2] - tmp1 * njac[i - 1][0][2];
 2492|  47.9M|          lhs[i][AA][1][2] =
 2493|  47.9M|              -tmp2 * fjac[i - 1][1][2] - tmp1 * njac[i - 1][1][2];
 2494|  47.9M|          lhs[i][AA][2][2] =
 2495|  47.9M|              -tmp2 * fjac[i - 1][2][2] - tmp1 * njac[i - 1][2][2] - tmp1 * dx3;
 2496|  47.9M|          lhs[i][AA][3][2] =
 2497|  47.9M|              -tmp2 * fjac[i - 1][3][2] - tmp1 * njac[i - 1][3][2];
 2498|  47.9M|          lhs[i][AA][4][2] =
 2499|  47.9M|              -tmp2 * fjac[i - 1][4][2] - tmp1 * njac[i - 1][4][2];
 2500|       |
 2501|  47.9M|          lhs[i][AA][0][3] =
 2502|  47.9M|              -tmp2 * fjac[i - 1][0][3] - tmp1 * njac[i - 1][0][3];
 2503|  47.9M|          lhs[i][AA][1][3] =
 2504|  47.9M|              -tmp2 * fjac[i - 1][1][3] - tmp1 * njac[i - 1][1][3];
 2505|  47.9M|          lhs[i][AA][2][3] =
 2506|  47.9M|              -tmp2 * fjac[i - 1][2][3] - tmp1 * njac[i - 1][2][3];
 2507|  47.9M|          lhs[i][AA][3][3] =
 2508|  47.9M|              -tmp2 * fjac[i - 1][3][3] - tmp1 * njac[i - 1][3][3] - tmp1 * dx4;
 2509|  47.9M|          lhs[i][AA][4][3] =
 2510|  47.9M|              -tmp2 * fjac[i - 1][4][3] - tmp1 * njac[i - 1][4][3];
 2511|       |
 2512|  47.9M|          lhs[i][AA][0][4] =
 2513|  47.9M|              -tmp2 * fjac[i - 1][0][4] - tmp1 * njac[i - 1][0][4];
 2514|  47.9M|          lhs[i][AA][1][4] =
 2515|  47.9M|              -tmp2 * fjac[i - 1][1][4] - tmp1 * njac[i - 1][1][4];
 2516|  47.9M|          lhs[i][AA][2][4] =
 2517|  47.9M|              -tmp2 * fjac[i - 1][2][4] - tmp1 * njac[i - 1][2][4];
 2518|  47.9M|          lhs[i][AA][3][4] =
 2519|  47.9M|              -tmp2 * fjac[i - 1][3][4] - tmp1 * njac[i - 1][3][4];
 2520|  47.9M|          lhs[i][AA][4][4] =
 2521|  47.9M|              -tmp2 * fjac[i - 1][4][4] - tmp1 * njac[i - 1][4][4] - tmp1 * dx5;
 2522|       |
 2523|  47.9M|          lhs[i][BB][0][0] =
 2524|  47.9M|              1.0 + tmp1 * 2.0 * njac[i][0][0] + tmp1 * 2.0 * dx1;
 2525|  47.9M|          lhs[i][BB][1][0] = tmp1 * 2.0 * njac[i][1][0];
 2526|  47.9M|          lhs[i][BB][2][0] = tmp1 * 2.0 * njac[i][2][0];
 2527|  47.9M|          lhs[i][BB][3][0] = tmp1 * 2.0 * njac[i][3][0];
 2528|  47.9M|          lhs[i][BB][4][0] = tmp1 * 2.0 * njac[i][4][0];
 2529|       |
 2530|  47.9M|          lhs[i][BB][0][1] = tmp1 * 2.0 * njac[i][0][1];
 2531|  47.9M|          lhs[i][BB][1][1] =
 2532|  47.9M|              1.0 + tmp1 * 2.0 * njac[i][1][1] + tmp1 * 2.0 * dx2;
 2533|  47.9M|          lhs[i][BB][2][1] = tmp1 * 2.0 * njac[i][2][1];
 2534|  47.9M|          lhs[i][BB][3][1] = tmp1 * 2.0 * njac[i][3][1];
 2535|  47.9M|          lhs[i][BB][4][1] = tmp1 * 2.0 * njac[i][4][1];
 2536|       |
 2537|  47.9M|          lhs[i][BB][0][2] = tmp1 * 2.0 * njac[i][0][2];
 2538|  47.9M|          lhs[i][BB][1][2] = tmp1 * 2.0 * njac[i][1][2];
 2539|  47.9M|          lhs[i][BB][2][2] =
 2540|  47.9M|              1.0 + tmp1 * 2.0 * njac[i][2][2] + tmp1 * 2.0 * dx3;
 2541|  47.9M|          lhs[i][BB][3][2] = tmp1 * 2.0 * njac[i][3][2];
 2542|  47.9M|          lhs[i][BB][4][2] = tmp1 * 2.0 * njac[i][4][2];
 2543|       |
 2544|  47.9M|          lhs[i][BB][0][3] = tmp1 * 2.0 * njac[i][0][3];
 2545|  47.9M|          lhs[i][BB][1][3] = tmp1 * 2.0 * njac[i][1][3];
 2546|  47.9M|          lhs[i][BB][2][3] = tmp1 * 2.0 * njac[i][2][3];
 2547|  47.9M|          lhs[i][BB][3][3] =
 2548|  47.9M|              1.0 + tmp1 * 2.0 * njac[i][3][3] + tmp1 * 2.0 * dx4;
 2549|  47.9M|          lhs[i][BB][4][3] = tmp1 * 2.0 * njac[i][4][3];
 2550|       |
 2551|  47.9M|          lhs[i][BB][0][4] = tmp1 * 2.0 * njac[i][0][4];
 2552|  47.9M|          lhs[i][BB][1][4] = tmp1 * 2.0 * njac[i][1][4];
 2553|  47.9M|          lhs[i][BB][2][4] = tmp1 * 2.0 * njac[i][2][4];
 2554|  47.9M|          lhs[i][BB][3][4] = tmp1 * 2.0 * njac[i][3][4];
 2555|  47.9M|          lhs[i][BB][4][4] =
 2556|  47.9M|              1.0 + tmp1 * 2.0 * njac[i][4][4] + tmp1 * 2.0 * dx5;
 2557|       |
 2558|  47.9M|          lhs[i][CC][0][0] =
 2559|  47.9M|              tmp2 * fjac[i + 1][0][0] - tmp1 * njac[i + 1][0][0] - tmp1 * dx1;
 2560|  47.9M|          lhs[i][CC][1][0] =
 2561|  47.9M|              tmp2 * fjac[i + 1][1][0] - tmp1 * njac[i + 1][1][0];
 2562|  47.9M|          lhs[i][CC][2][0] =
 2563|  47.9M|              tmp2 * fjac[i + 1][2][0] - tmp1 * njac[i + 1][2][0];
 2564|  47.9M|          lhs[i][CC][3][0] =
 2565|  47.9M|              tmp2 * fjac[i + 1][3][0] - tmp1 * njac[i + 1][3][0];
 2566|  47.9M|          lhs[i][CC][4][0] =
 2567|  47.9M|              tmp2 * fjac[i + 1][4][0] - tmp1 * njac[i + 1][4][0];
 2568|       |
 2569|  47.9M|          lhs[i][CC][0][1] =
 2570|  47.9M|              tmp2 * fjac[i + 1][0][1] - tmp1 * njac[i + 1][0][1];
 2571|  47.9M|          lhs[i][CC][1][1] =
 2572|  47.9M|              tmp2 * fjac[i + 1][1][1] - tmp1 * njac[i + 1][1][1] - tmp1 * dx2;
 2573|  47.9M|          lhs[i][CC][2][1] =
 2574|  47.9M|              tmp2 * fjac[i + 1][2][1] - tmp1 * njac[i + 1][2][1];
 2575|  47.9M|          lhs[i][CC][3][1] =
 2576|  47.9M|              tmp2 * fjac[i + 1][3][1] - tmp1 * njac[i + 1][3][1];
 2577|  47.9M|          lhs[i][CC][4][1] =
 2578|  47.9M|              tmp2 * fjac[i + 1][4][1] - tmp1 * njac[i + 1][4][1];
 2579|       |
 2580|  47.9M|          lhs[i][CC][0][2] =
 2581|  47.9M|              tmp2 * fjac[i + 1][0][2] - tmp1 * njac[i + 1][0][2];
 2582|  47.9M|          lhs[i][CC][1][2] =
 2583|  47.9M|              tmp2 * fjac[i + 1][1][2] - tmp1 * njac[i + 1][1][2];
 2584|  47.9M|          lhs[i][CC][2][2] =
 2585|  47.9M|              tmp2 * fjac[i + 1][2][2] - tmp1 * njac[i + 1][2][2] - tmp1 * dx3;
 2586|  47.9M|          lhs[i][CC][3][2] =
 2587|  47.9M|              tmp2 * fjac[i + 1][3][2] - tmp1 * njac[i + 1][3][2];
 2588|  47.9M|          lhs[i][CC][4][2] =
 2589|  47.9M|              tmp2 * fjac[i + 1][4][2] - tmp1 * njac[i + 1][4][2];
 2590|       |
 2591|  47.9M|          lhs[i][CC][0][3] =
 2592|  47.9M|              tmp2 * fjac[i + 1][0][3] - tmp1 * njac[i + 1][0][3];
 2593|  47.9M|          lhs[i][CC][1][3] =
 2594|  47.9M|              tmp2 * fjac[i + 1][1][3] - tmp1 * njac[i + 1][1][3];
 2595|  47.9M|          lhs[i][CC][2][3] =
 2596|  47.9M|              tmp2 * fjac[i + 1][2][3] - tmp1 * njac[i + 1][2][3];
 2597|  47.9M|          lhs[i][CC][3][3] =
 2598|  47.9M|              tmp2 * fjac[i + 1][3][3] - tmp1 * njac[i + 1][3][3] - tmp1 * dx4;
 2599|  47.9M|          lhs[i][CC][4][3] =
 2600|  47.9M|              tmp2 * fjac[i + 1][4][3] - tmp1 * njac[i + 1][4][3];
 2601|       |
 2602|  47.9M|          lhs[i][CC][0][4] =
 2603|  47.9M|              tmp2 * fjac[i + 1][0][4] - tmp1 * njac[i + 1][0][4];
 2604|  47.9M|          lhs[i][CC][1][4] =
 2605|  47.9M|              tmp2 * fjac[i + 1][1][4] - tmp1 * njac[i + 1][1][4];
 2606|  47.9M|          lhs[i][CC][2][4] =
 2607|  47.9M|              tmp2 * fjac[i + 1][2][4] - tmp1 * njac[i + 1][2][4];
 2608|  47.9M|          lhs[i][CC][3][4] =
 2609|  47.9M|              tmp2 * fjac[i + 1][3][4] - tmp1 * njac[i + 1][3][4];
 2610|  47.9M|          lhs[i][CC][4][4] =
 2611|  47.9M|              tmp2 * fjac[i + 1][4][4] - tmp1 * njac[i + 1][4][4] - tmp1 * dx5;
 2612|  47.9M|        }
 2613|       |
 2614|       |        //---------------------------------------------------------------------
 2615|       |        //---------------------------------------------------------------------
 2616|       |
 2617|       |        //---------------------------------------------------------------------
 2618|       |        // performs guaussian elimination on this cell.
 2619|       |        //
 2620|       |        // assumes that unpacking routines for non-first cells
 2621|       |        // preload C' and rhs' from previous cell.
 2622|       |        //
 2623|       |        // assumed send happens outside this routine, but that
 2624|       |        // c'(IMAX) and rhs'(IMAX) will be sent to next cell
 2625|       |        //---------------------------------------------------------------------
 2626|       |
 2627|       |        //---------------------------------------------------------------------
 2628|       |        // outer most do loops - sweeping in i direction
 2629|       |        //---------------------------------------------------------------------
 2630|       |
 2631|       |        //---------------------------------------------------------------------
 2632|       |        // multiply c[k][j][0] by b_inverse and copy back to c
 2633|       |        // multiply rhs(0) by b_inverse(0) and copy to rhs
 2634|       |        //---------------------------------------------------------------------
 2635|       |        /* binvcrhs(lhs[0][BB], lhs[0][CC], rhs[k][j][0]) is inlined below */
 2636|       |        ////#pragma spf assert nomacro
 2637|   772k|        {
 2638|       |
 2639|   772k|          lhs[0][1][1][0] = lhs[0][1][1][0] * (1.00 / lhs[0][1][0][0]);
 2640|   772k|          lhs[0][1][2][0] = lhs[0][1][2][0] * (1.00 / lhs[0][1][0][0]);
 2641|   772k|          lhs[0][1][3][0] = lhs[0][1][3][0] * (1.00 / lhs[0][1][0][0]);
 2642|   772k|          lhs[0][1][4][0] = lhs[0][1][4][0] * (1.00 / lhs[0][1][0][0]);
 2643|   772k|          lhs[0][2][0][0] = lhs[0][2][0][0] * (1.00 / lhs[0][1][0][0]);
 2644|   772k|          lhs[0][2][1][0] = lhs[0][2][1][0] * (1.00 / lhs[0][1][0][0]);
 2645|   772k|          lhs[0][2][2][0] = lhs[0][2][2][0] * (1.00 / lhs[0][1][0][0]);
 2646|   772k|          lhs[0][2][3][0] = lhs[0][2][3][0] * (1.00 / lhs[0][1][0][0]);
 2647|   772k|          lhs[0][2][4][0] = lhs[0][2][4][0] * (1.00 / lhs[0][1][0][0]);
 2648|   772k|          (rhs[k][j][0])[0] = (rhs[k][j][0])[0] * (1.00 / lhs[0][1][0][0]);
 2649|       |
 2650|   772k|          lhs[0][1][1][1] =
 2651|   772k|              lhs[0][1][1][1] - (lhs[0][1][0][1]) * lhs[0][1][1][0];
 2652|   772k|          lhs[0][1][2][1] =
 2653|   772k|              lhs[0][1][2][1] - (lhs[0][1][0][1]) * lhs[0][1][2][0];
 2654|   772k|          lhs[0][1][3][1] =
 2655|   772k|              lhs[0][1][3][1] - (lhs[0][1][0][1]) * lhs[0][1][3][0];
 2656|   772k|          lhs[0][1][4][1] =
 2657|   772k|              lhs[0][1][4][1] - (lhs[0][1][0][1]) * lhs[0][1][4][0];
 2658|   772k|          lhs[0][2][0][1] =
 2659|   772k|              lhs[0][2][0][1] - (lhs[0][1][0][1]) * lhs[0][2][0][0];
 2660|   772k|          lhs[0][2][1][1] =
 2661|   772k|              lhs[0][2][1][1] - (lhs[0][1][0][1]) * lhs[0][2][1][0];
 2662|   772k|          lhs[0][2][2][1] =
 2663|   772k|              lhs[0][2][2][1] - (lhs[0][1][0][1]) * lhs[0][2][2][0];
 2664|   772k|          lhs[0][2][3][1] =
 2665|   772k|              lhs[0][2][3][1] - (lhs[0][1][0][1]) * lhs[0][2][3][0];
 2666|   772k|          lhs[0][2][4][1] =
 2667|   772k|              lhs[0][2][4][1] - (lhs[0][1][0][1]) * lhs[0][2][4][0];
 2668|   772k|          (rhs[k][j][0])[1] =
 2669|   772k|              (rhs[k][j][0])[1] - (lhs[0][1][0][1]) * (rhs[k][j][0])[0];
 2670|       |
 2671|   772k|          lhs[0][1][1][2] =
 2672|   772k|              lhs[0][1][1][2] - (lhs[0][1][0][2]) * lhs[0][1][1][0];
 2673|   772k|          lhs[0][1][2][2] =
 2674|   772k|              lhs[0][1][2][2] - (lhs[0][1][0][2]) * lhs[0][1][2][0];
 2675|   772k|          lhs[0][1][3][2] =
 2676|   772k|              lhs[0][1][3][2] - (lhs[0][1][0][2]) * lhs[0][1][3][0];
 2677|   772k|          lhs[0][1][4][2] =
 2678|   772k|              lhs[0][1][4][2] - (lhs[0][1][0][2]) * lhs[0][1][4][0];
 2679|   772k|          lhs[0][2][0][2] =
 2680|   772k|              lhs[0][2][0][2] - (lhs[0][1][0][2]) * lhs[0][2][0][0];
 2681|   772k|          lhs[0][2][1][2] =
 2682|   772k|              lhs[0][2][1][2] - (lhs[0][1][0][2]) * lhs[0][2][1][0];
 2683|   772k|          lhs[0][2][2][2] =
 2684|   772k|              lhs[0][2][2][2] - (lhs[0][1][0][2]) * lhs[0][2][2][0];
 2685|   772k|          lhs[0][2][3][2] =
 2686|   772k|              lhs[0][2][3][2] - (lhs[0][1][0][2]) * lhs[0][2][3][0];
 2687|   772k|          lhs[0][2][4][2] =
 2688|   772k|              lhs[0][2][4][2] - (lhs[0][1][0][2]) * lhs[0][2][4][0];
 2689|   772k|          (rhs[k][j][0])[2] =
 2690|   772k|              (rhs[k][j][0])[2] - (lhs[0][1][0][2]) * (rhs[k][j][0])[0];
 2691|       |
 2692|   772k|          lhs[0][1][1][3] =
 2693|   772k|              lhs[0][1][1][3] - (lhs[0][1][0][3]) * lhs[0][1][1][0];
 2694|   772k|          lhs[0][1][2][3] =
 2695|   772k|              lhs[0][1][2][3] - (lhs[0][1][0][3]) * lhs[0][1][2][0];
 2696|   772k|          lhs[0][1][3][3] =
 2697|   772k|              lhs[0][1][3][3] - (lhs[0][1][0][3]) * lhs[0][1][3][0];
 2698|   772k|          lhs[0][1][4][3] =
 2699|   772k|              lhs[0][1][4][3] - (lhs[0][1][0][3]) * lhs[0][1][4][0];
 2700|   772k|          lhs[0][2][0][3] =
 2701|   772k|              lhs[0][2][0][3] - (lhs[0][1][0][3]) * lhs[0][2][0][0];
 2702|   772k|          lhs[0][2][1][3] =
 2703|   772k|              lhs[0][2][1][3] - (lhs[0][1][0][3]) * lhs[0][2][1][0];
 2704|   772k|          lhs[0][2][2][3] =
 2705|   772k|              lhs[0][2][2][3] - (lhs[0][1][0][3]) * lhs[0][2][2][0];
 2706|   772k|          lhs[0][2][3][3] =
 2707|   772k|              lhs[0][2][3][3] - (lhs[0][1][0][3]) * lhs[0][2][3][0];
 2708|   772k|          lhs[0][2][4][3] =
 2709|   772k|              lhs[0][2][4][3] - (lhs[0][1][0][3]) * lhs[0][2][4][0];
 2710|   772k|          (rhs[k][j][0])[3] =
 2711|   772k|              (rhs[k][j][0])[3] - (lhs[0][1][0][3]) * (rhs[k][j][0])[0];
 2712|       |
 2713|   772k|          lhs[0][1][1][4] =
 2714|   772k|              lhs[0][1][1][4] - (lhs[0][1][0][4]) * lhs[0][1][1][0];
 2715|   772k|          lhs[0][1][2][4] =
 2716|   772k|              lhs[0][1][2][4] - (lhs[0][1][0][4]) * lhs[0][1][2][0];
 2717|   772k|          lhs[0][1][3][4] =
 2718|   772k|              lhs[0][1][3][4] - (lhs[0][1][0][4]) * lhs[0][1][3][0];
 2719|   772k|          lhs[0][1][4][4] =
 2720|   772k|              lhs[0][1][4][4] - (lhs[0][1][0][4]) * lhs[0][1][4][0];
 2721|   772k|          lhs[0][2][0][4] =
 2722|   772k|              lhs[0][2][0][4] - (lhs[0][1][0][4]) * lhs[0][2][0][0];
 2723|   772k|          lhs[0][2][1][4] =
 2724|   772k|              lhs[0][2][1][4] - (lhs[0][1][0][4]) * lhs[0][2][1][0];
 2725|   772k|          lhs[0][2][2][4] =
 2726|   772k|              lhs[0][2][2][4] - (lhs[0][1][0][4]) * lhs[0][2][2][0];
 2727|   772k|          lhs[0][2][3][4] =
 2728|   772k|              lhs[0][2][3][4] - (lhs[0][1][0][4]) * lhs[0][2][3][0];
 2729|   772k|          lhs[0][2][4][4] =
 2730|   772k|              lhs[0][2][4][4] - (lhs[0][1][0][4]) * lhs[0][2][4][0];
 2731|   772k|          (rhs[k][j][0])[4] =
 2732|   772k|              (rhs[k][j][0])[4] - (lhs[0][1][0][4]) * (rhs[k][j][0])[0];
 2733|       |
 2734|   772k|          lhs[0][1][2][1] = lhs[0][1][2][1] * (1.00 / lhs[0][1][1][1]);
 2735|   772k|          lhs[0][1][3][1] = lhs[0][1][3][1] * (1.00 / lhs[0][1][1][1]);
 2736|   772k|          lhs[0][1][4][1] = lhs[0][1][4][1] * (1.00 / lhs[0][1][1][1]);
 2737|   772k|          lhs[0][2][0][1] = lhs[0][2][0][1] * (1.00 / lhs[0][1][1][1]);
 2738|   772k|          lhs[0][2][1][1] = lhs[0][2][1][1] * (1.00 / lhs[0][1][1][1]);
 2739|   772k|          lhs[0][2][2][1] = lhs[0][2][2][1] * (1.00 / lhs[0][1][1][1]);
 2740|   772k|          lhs[0][2][3][1] = lhs[0][2][3][1] * (1.00 / lhs[0][1][1][1]);
 2741|   772k|          lhs[0][2][4][1] = lhs[0][2][4][1] * (1.00 / lhs[0][1][1][1]);
 2742|   772k|          (rhs[k][j][0])[1] = (rhs[k][j][0])[1] * (1.00 / lhs[0][1][1][1]);
 2743|       |
 2744|   772k|          lhs[0][1][2][0] =
 2745|   772k|              lhs[0][1][2][0] - (lhs[0][1][1][0]) * lhs[0][1][2][1];
 2746|   772k|          lhs[0][1][3][0] =
 2747|   772k|              lhs[0][1][3][0] - (lhs[0][1][1][0]) * lhs[0][1][3][1];
 2748|   772k|          lhs[0][1][4][0] =
 2749|   772k|              lhs[0][1][4][0] - (lhs[0][1][1][0]) * lhs[0][1][4][1];
 2750|   772k|          lhs[0][2][0][0] =
 2751|   772k|              lhs[0][2][0][0] - (lhs[0][1][1][0]) * lhs[0][2][0][1];
 2752|   772k|          lhs[0][2][1][0] =
 2753|   772k|              lhs[0][2][1][0] - (lhs[0][1][1][0]) * lhs[0][2][1][1];
 2754|   772k|          lhs[0][2][2][0] =
 2755|   772k|              lhs[0][2][2][0] - (lhs[0][1][1][0]) * lhs[0][2][2][1];
 2756|   772k|          lhs[0][2][3][0] =
 2757|   772k|              lhs[0][2][3][0] - (lhs[0][1][1][0]) * lhs[0][2][3][1];
 2758|   772k|          lhs[0][2][4][0] =
 2759|   772k|              lhs[0][2][4][0] - (lhs[0][1][1][0]) * lhs[0][2][4][1];
 2760|   772k|          (rhs[k][j][0])[0] =
 2761|   772k|              (rhs[k][j][0])[0] - (lhs[0][1][1][0]) * (rhs[k][j][0])[1];
 2762|       |
 2763|   772k|          lhs[0][1][2][2] =
 2764|   772k|              lhs[0][1][2][2] - (lhs[0][1][1][2]) * lhs[0][1][2][1];
 2765|   772k|          lhs[0][1][3][2] =
 2766|   772k|              lhs[0][1][3][2] - (lhs[0][1][1][2]) * lhs[0][1][3][1];
 2767|   772k|          lhs[0][1][4][2] =
 2768|   772k|              lhs[0][1][4][2] - (lhs[0][1][1][2]) * lhs[0][1][4][1];
 2769|   772k|          lhs[0][2][0][2] =
 2770|   772k|              lhs[0][2][0][2] - (lhs[0][1][1][2]) * lhs[0][2][0][1];
 2771|   772k|          lhs[0][2][1][2] =
 2772|   772k|              lhs[0][2][1][2] - (lhs[0][1][1][2]) * lhs[0][2][1][1];
 2773|   772k|          lhs[0][2][2][2] =
 2774|   772k|              lhs[0][2][2][2] - (lhs[0][1][1][2]) * lhs[0][2][2][1];
 2775|   772k|          lhs[0][2][3][2] =
 2776|   772k|              lhs[0][2][3][2] - (lhs[0][1][1][2]) * lhs[0][2][3][1];
 2777|   772k|          lhs[0][2][4][2] =
 2778|   772k|              lhs[0][2][4][2] - (lhs[0][1][1][2]) * lhs[0][2][4][1];
 2779|   772k|          (rhs[k][j][0])[2] =
 2780|   772k|              (rhs[k][j][0])[2] - (lhs[0][1][1][2]) * (rhs[k][j][0])[1];
 2781|       |
 2782|   772k|          lhs[0][1][2][3] =
 2783|   772k|              lhs[0][1][2][3] - (lhs[0][1][1][3]) * lhs[0][1][2][1];
 2784|   772k|          lhs[0][1][3][3] =
 2785|   772k|              lhs[0][1][3][3] - (lhs[0][1][1][3]) * lhs[0][1][3][1];
 2786|   772k|          lhs[0][1][4][3] =
 2787|   772k|              lhs[0][1][4][3] - (lhs[0][1][1][3]) * lhs[0][1][4][1];
 2788|   772k|          lhs[0][2][0][3] =
 2789|   772k|              lhs[0][2][0][3] - (lhs[0][1][1][3]) * lhs[0][2][0][1];
 2790|   772k|          lhs[0][2][1][3] =
 2791|   772k|              lhs[0][2][1][3] - (lhs[0][1][1][3]) * lhs[0][2][1][1];
 2792|   772k|          lhs[0][2][2][3] =
 2793|   772k|              lhs[0][2][2][3] - (lhs[0][1][1][3]) * lhs[0][2][2][1];
 2794|   772k|          lhs[0][2][3][3] =
 2795|   772k|              lhs[0][2][3][3] - (lhs[0][1][1][3]) * lhs[0][2][3][1];
 2796|   772k|          lhs[0][2][4][3] =
 2797|   772k|              lhs[0][2][4][3] - (lhs[0][1][1][3]) * lhs[0][2][4][1];
 2798|   772k|          (rhs[k][j][0])[3] =
 2799|   772k|              (rhs[k][j][0])[3] - (lhs[0][1][1][3]) * (rhs[k][j][0])[1];
 2800|       |
 2801|   772k|          lhs[0][1][2][4] =
 2802|   772k|              lhs[0][1][2][4] - (lhs[0][1][1][4]) * lhs[0][1][2][1];
 2803|   772k|          lhs[0][1][3][4] =
 2804|   772k|              lhs[0][1][3][4] - (lhs[0][1][1][4]) * lhs[0][1][3][1];
 2805|   772k|          lhs[0][1][4][4] =
 2806|   772k|              lhs[0][1][4][4] - (lhs[0][1][1][4]) * lhs[0][1][4][1];
 2807|   772k|          lhs[0][2][0][4] =
 2808|   772k|              lhs[0][2][0][4] - (lhs[0][1][1][4]) * lhs[0][2][0][1];
 2809|   772k|          lhs[0][2][1][4] =
 2810|   772k|              lhs[0][2][1][4] - (lhs[0][1][1][4]) * lhs[0][2][1][1];
 2811|   772k|          lhs[0][2][2][4] =
 2812|   772k|              lhs[0][2][2][4] - (lhs[0][1][1][4]) * lhs[0][2][2][1];
 2813|   772k|          lhs[0][2][3][4] =
 2814|   772k|              lhs[0][2][3][4] - (lhs[0][1][1][4]) * lhs[0][2][3][1];
 2815|   772k|          lhs[0][2][4][4] =
 2816|   772k|              lhs[0][2][4][4] - (lhs[0][1][1][4]) * lhs[0][2][4][1];
 2817|   772k|          (rhs[k][j][0])[4] =
 2818|   772k|              (rhs[k][j][0])[4] - (lhs[0][1][1][4]) * (rhs[k][j][0])[1];
 2819|       |
 2820|   772k|          lhs[0][1][3][2] = lhs[0][1][3][2] * (1.00 / lhs[0][1][2][2]);
 2821|   772k|          lhs[0][1][4][2] = lhs[0][1][4][2] * (1.00 / lhs[0][1][2][2]);
 2822|   772k|          lhs[0][2][0][2] = lhs[0][2][0][2] * (1.00 / lhs[0][1][2][2]);
 2823|   772k|          lhs[0][2][1][2] = lhs[0][2][1][2] * (1.00 / lhs[0][1][2][2]);
 2824|   772k|          lhs[0][2][2][2] = lhs[0][2][2][2] * (1.00 / lhs[0][1][2][2]);
 2825|   772k|          lhs[0][2][3][2] = lhs[0][2][3][2] * (1.00 / lhs[0][1][2][2]);
 2826|   772k|          lhs[0][2][4][2] = lhs[0][2][4][2] * (1.00 / lhs[0][1][2][2]);
 2827|   772k|          (rhs[k][j][0])[2] = (rhs[k][j][0])[2] * (1.00 / lhs[0][1][2][2]);
 2828|       |
 2829|   772k|          lhs[0][1][3][0] =
 2830|   772k|              lhs[0][1][3][0] - (lhs[0][1][2][0]) * lhs[0][1][3][2];
 2831|   772k|          lhs[0][1][4][0] =
 2832|   772k|              lhs[0][1][4][0] - (lhs[0][1][2][0]) * lhs[0][1][4][2];
 2833|   772k|          lhs[0][2][0][0] =
 2834|   772k|              lhs[0][2][0][0] - (lhs[0][1][2][0]) * lhs[0][2][0][2];
 2835|   772k|          lhs[0][2][1][0] =
 2836|   772k|              lhs[0][2][1][0] - (lhs[0][1][2][0]) * lhs[0][2][1][2];
 2837|   772k|          lhs[0][2][2][0] =
 2838|   772k|              lhs[0][2][2][0] - (lhs[0][1][2][0]) * lhs[0][2][2][2];
 2839|   772k|          lhs[0][2][3][0] =
 2840|   772k|              lhs[0][2][3][0] - (lhs[0][1][2][0]) * lhs[0][2][3][2];
 2841|   772k|          lhs[0][2][4][0] =
 2842|   772k|              lhs[0][2][4][0] - (lhs[0][1][2][0]) * lhs[0][2][4][2];
 2843|   772k|          (rhs[k][j][0])[0] =
 2844|   772k|              (rhs[k][j][0])[0] - (lhs[0][1][2][0]) * (rhs[k][j][0])[2];
 2845|       |
 2846|   772k|          lhs[0][1][3][1] =
 2847|   772k|              lhs[0][1][3][1] - (lhs[0][1][2][1]) * lhs[0][1][3][2];
 2848|   772k|          lhs[0][1][4][1] =
 2849|   772k|              lhs[0][1][4][1] - (lhs[0][1][2][1]) * lhs[0][1][4][2];
 2850|   772k|          lhs[0][2][0][1] =
 2851|   772k|              lhs[0][2][0][1] - (lhs[0][1][2][1]) * lhs[0][2][0][2];
 2852|   772k|          lhs[0][2][1][1] =
 2853|   772k|              lhs[0][2][1][1] - (lhs[0][1][2][1]) * lhs[0][2][1][2];
 2854|   772k|          lhs[0][2][2][1] =
 2855|   772k|              lhs[0][2][2][1] - (lhs[0][1][2][1]) * lhs[0][2][2][2];
 2856|   772k|          lhs[0][2][3][1] =
 2857|   772k|              lhs[0][2][3][1] - (lhs[0][1][2][1]) * lhs[0][2][3][2];
 2858|   772k|          lhs[0][2][4][1] =
 2859|   772k|              lhs[0][2][4][1] - (lhs[0][1][2][1]) * lhs[0][2][4][2];
 2860|   772k|          (rhs[k][j][0])[1] =
 2861|   772k|              (rhs[k][j][0])[1] - (lhs[0][1][2][1]) * (rhs[k][j][0])[2];
 2862|       |
 2863|   772k|          lhs[0][1][3][3] =
 2864|   772k|              lhs[0][1][3][3] - (lhs[0][1][2][3]) * lhs[0][1][3][2];
 2865|   772k|          lhs[0][1][4][3] =
 2866|   772k|              lhs[0][1][4][3] - (lhs[0][1][2][3]) * lhs[0][1][4][2];
 2867|   772k|          lhs[0][2][0][3] =
 2868|   772k|              lhs[0][2][0][3] - (lhs[0][1][2][3]) * lhs[0][2][0][2];
 2869|   772k|          lhs[0][2][1][3] =
 2870|   772k|              lhs[0][2][1][3] - (lhs[0][1][2][3]) * lhs[0][2][1][2];
 2871|   772k|          lhs[0][2][2][3] =
 2872|   772k|              lhs[0][2][2][3] - (lhs[0][1][2][3]) * lhs[0][2][2][2];
 2873|   772k|          lhs[0][2][3][3] =
 2874|   772k|              lhs[0][2][3][3] - (lhs[0][1][2][3]) * lhs[0][2][3][2];
 2875|   772k|          lhs[0][2][4][3] =
 2876|   772k|              lhs[0][2][4][3] - (lhs[0][1][2][3]) * lhs[0][2][4][2];
 2877|   772k|          (rhs[k][j][0])[3] =
 2878|   772k|              (rhs[k][j][0])[3] - (lhs[0][1][2][3]) * (rhs[k][j][0])[2];
 2879|       |
 2880|   772k|          lhs[0][1][3][4] =
 2881|   772k|              lhs[0][1][3][4] - (lhs[0][1][2][4]) * lhs[0][1][3][2];
 2882|   772k|          lhs[0][1][4][4] =
 2883|   772k|              lhs[0][1][4][4] - (lhs[0][1][2][4]) * lhs[0][1][4][2];
 2884|   772k|          lhs[0][2][0][4] =
 2885|   772k|              lhs[0][2][0][4] - (lhs[0][1][2][4]) * lhs[0][2][0][2];
 2886|   772k|          lhs[0][2][1][4] =
 2887|   772k|              lhs[0][2][1][4] - (lhs[0][1][2][4]) * lhs[0][2][1][2];
 2888|   772k|          lhs[0][2][2][4] =
 2889|   772k|              lhs[0][2][2][4] - (lhs[0][1][2][4]) * lhs[0][2][2][2];
 2890|   772k|          lhs[0][2][3][4] =
 2891|   772k|              lhs[0][2][3][4] - (lhs[0][1][2][4]) * lhs[0][2][3][2];
 2892|   772k|          lhs[0][2][4][4] =
 2893|   772k|              lhs[0][2][4][4] - (lhs[0][1][2][4]) * lhs[0][2][4][2];
 2894|   772k|          (rhs[k][j][0])[4] =
 2895|   772k|              (rhs[k][j][0])[4] - (lhs[0][1][2][4]) * (rhs[k][j][0])[2];
 2896|       |
 2897|   772k|          lhs[0][1][4][3] = lhs[0][1][4][3] * (1.00 / lhs[0][1][3][3]);
 2898|   772k|          lhs[0][2][0][3] = lhs[0][2][0][3] * (1.00 / lhs[0][1][3][3]);
 2899|   772k|          lhs[0][2][1][3] = lhs[0][2][1][3] * (1.00 / lhs[0][1][3][3]);
 2900|   772k|          lhs[0][2][2][3] = lhs[0][2][2][3] * (1.00 / lhs[0][1][3][3]);
 2901|   772k|          lhs[0][2][3][3] = lhs[0][2][3][3] * (1.00 / lhs[0][1][3][3]);
 2902|   772k|          lhs[0][2][4][3] = lhs[0][2][4][3] * (1.00 / lhs[0][1][3][3]);
 2903|   772k|          (rhs[k][j][0])[3] = (rhs[k][j][0])[3] * (1.00 / lhs[0][1][3][3]);
 2904|       |
 2905|   772k|          lhs[0][1][4][0] =
 2906|   772k|              lhs[0][1][4][0] - (lhs[0][1][3][0]) * lhs[0][1][4][3];
 2907|   772k|          lhs[0][2][0][0] =
 2908|   772k|              lhs[0][2][0][0] - (lhs[0][1][3][0]) * lhs[0][2][0][3];
 2909|   772k|          lhs[0][2][1][0] =
 2910|   772k|              lhs[0][2][1][0] - (lhs[0][1][3][0]) * lhs[0][2][1][3];
 2911|   772k|          lhs[0][2][2][0] =
 2912|   772k|              lhs[0][2][2][0] - (lhs[0][1][3][0]) * lhs[0][2][2][3];
 2913|   772k|          lhs[0][2][3][0] =
 2914|   772k|              lhs[0][2][3][0] - (lhs[0][1][3][0]) * lhs[0][2][3][3];
 2915|   772k|          lhs[0][2][4][0] =
 2916|   772k|              lhs[0][2][4][0] - (lhs[0][1][3][0]) * lhs[0][2][4][3];
 2917|   772k|          (rhs[k][j][0])[0] =
 2918|   772k|              (rhs[k][j][0])[0] - (lhs[0][1][3][0]) * (rhs[k][j][0])[3];
 2919|       |
 2920|   772k|          lhs[0][1][4][1] =
 2921|   772k|              lhs[0][1][4][1] - (lhs[0][1][3][1]) * lhs[0][1][4][3];
 2922|   772k|          lhs[0][2][0][1] =
 2923|   772k|              lhs[0][2][0][1] - (lhs[0][1][3][1]) * lhs[0][2][0][3];
 2924|   772k|          lhs[0][2][1][1] =
 2925|   772k|              lhs[0][2][1][1] - (lhs[0][1][3][1]) * lhs[0][2][1][3];
 2926|   772k|          lhs[0][2][2][1] =
 2927|   772k|              lhs[0][2][2][1] - (lhs[0][1][3][1]) * lhs[0][2][2][3];
 2928|   772k|          lhs[0][2][3][1] =
 2929|   772k|              lhs[0][2][3][1] - (lhs[0][1][3][1]) * lhs[0][2][3][3];
 2930|   772k|          lhs[0][2][4][1] =
 2931|   772k|              lhs[0][2][4][1] - (lhs[0][1][3][1]) * lhs[0][2][4][3];
 2932|   772k|          (rhs[k][j][0])[1] =
 2933|   772k|              (rhs[k][j][0])[1] - (lhs[0][1][3][1]) * (rhs[k][j][0])[3];
 2934|       |
 2935|   772k|          lhs[0][1][4][2] =
 2936|   772k|              lhs[0][1][4][2] - (lhs[0][1][3][2]) * lhs[0][1][4][3];
 2937|   772k|          lhs[0][2][0][2] =
 2938|   772k|              lhs[0][2][0][2] - (lhs[0][1][3][2]) * lhs[0][2][0][3];
 2939|   772k|          lhs[0][2][1][2] =
 2940|   772k|              lhs[0][2][1][2] - (lhs[0][1][3][2]) * lhs[0][2][1][3];
 2941|   772k|          lhs[0][2][2][2] =
 2942|   772k|              lhs[0][2][2][2] - (lhs[0][1][3][2]) * lhs[0][2][2][3];
 2943|   772k|          lhs[0][2][3][2] =
 2944|   772k|              lhs[0][2][3][2] - (lhs[0][1][3][2]) * lhs[0][2][3][3];
 2945|   772k|          lhs[0][2][4][2] =
 2946|   772k|              lhs[0][2][4][2] - (lhs[0][1][3][2]) * lhs[0][2][4][3];
 2947|   772k|          (rhs[k][j][0])[2] =
 2948|   772k|              (rhs[k][j][0])[2] - (lhs[0][1][3][2]) * (rhs[k][j][0])[3];
 2949|       |
 2950|   772k|          lhs[0][1][4][4] =
 2951|   772k|              lhs[0][1][4][4] - (lhs[0][1][3][4]) * lhs[0][1][4][3];
 2952|   772k|          lhs[0][2][0][4] =
 2953|   772k|              lhs[0][2][0][4] - (lhs[0][1][3][4]) * lhs[0][2][0][3];
 2954|   772k|          lhs[0][2][1][4] =
 2955|   772k|              lhs[0][2][1][4] - (lhs[0][1][3][4]) * lhs[0][2][1][3];
 2956|   772k|          lhs[0][2][2][4] =
 2957|   772k|              lhs[0][2][2][4] - (lhs[0][1][3][4]) * lhs[0][2][2][3];
 2958|   772k|          lhs[0][2][3][4] =
 2959|   772k|              lhs[0][2][3][4] - (lhs[0][1][3][4]) * lhs[0][2][3][3];
 2960|   772k|          lhs[0][2][4][4] =
 2961|   772k|              lhs[0][2][4][4] - (lhs[0][1][3][4]) * lhs[0][2][4][3];
 2962|   772k|          (rhs[k][j][0])[4] =
 2963|   772k|              (rhs[k][j][0])[4] - (lhs[0][1][3][4]) * (rhs[k][j][0])[3];
 2964|       |
 2965|   772k|          lhs[0][2][0][4] = lhs[0][2][0][4] * (1.00 / lhs[0][1][4][4]);
 2966|   772k|          lhs[0][2][1][4] = lhs[0][2][1][4] * (1.00 / lhs[0][1][4][4]);
 2967|   772k|          lhs[0][2][2][4] = lhs[0][2][2][4] * (1.00 / lhs[0][1][4][4]);
 2968|   772k|          lhs[0][2][3][4] = lhs[0][2][3][4] * (1.00 / lhs[0][1][4][4]);
 2969|   772k|          lhs[0][2][4][4] = lhs[0][2][4][4] * (1.00 / lhs[0][1][4][4]);
 2970|   772k|          (rhs[k][j][0])[4] = (rhs[k][j][0])[4] * (1.00 / lhs[0][1][4][4]);
 2971|       |
 2972|   772k|          lhs[0][2][0][0] =
 2973|   772k|              lhs[0][2][0][0] - (lhs[0][1][4][0]) * lhs[0][2][0][4];
 2974|   772k|          lhs[0][2][1][0] =
 2975|   772k|              lhs[0][2][1][0] - (lhs[0][1][4][0]) * lhs[0][2][1][4];
 2976|   772k|          lhs[0][2][2][0] =
 2977|   772k|              lhs[0][2][2][0] - (lhs[0][1][4][0]) * lhs[0][2][2][4];
 2978|   772k|          lhs[0][2][3][0] =
 2979|   772k|              lhs[0][2][3][0] - (lhs[0][1][4][0]) * lhs[0][2][3][4];
 2980|   772k|          lhs[0][2][4][0] =
 2981|   772k|              lhs[0][2][4][0] - (lhs[0][1][4][0]) * lhs[0][2][4][4];
 2982|   772k|          (rhs[k][j][0])[0] =
 2983|   772k|              (rhs[k][j][0])[0] - (lhs[0][1][4][0]) * (rhs[k][j][0])[4];
 2984|       |
 2985|   772k|          lhs[0][2][0][1] =
 2986|   772k|              lhs[0][2][0][1] - (lhs[0][1][4][1]) * lhs[0][2][0][4];
 2987|   772k|          lhs[0][2][1][1] =
 2988|   772k|              lhs[0][2][1][1] - (lhs[0][1][4][1]) * lhs[0][2][1][4];
 2989|   772k|          lhs[0][2][2][1] =
 2990|   772k|              lhs[0][2][2][1] - (lhs[0][1][4][1]) * lhs[0][2][2][4];
 2991|   772k|          lhs[0][2][3][1] =
 2992|   772k|              lhs[0][2][3][1] - (lhs[0][1][4][1]) * lhs[0][2][3][4];
 2993|   772k|          lhs[0][2][4][1] =
 2994|   772k|              lhs[0][2][4][1] - (lhs[0][1][4][1]) * lhs[0][2][4][4];
 2995|   772k|          (rhs[k][j][0])[1] =
 2996|   772k|              (rhs[k][j][0])[1] - (lhs[0][1][4][1]) * (rhs[k][j][0])[4];
 2997|       |
 2998|   772k|          lhs[0][2][0][2] =
 2999|   772k|              lhs[0][2][0][2] - (lhs[0][1][4][2]) * lhs[0][2][0][4];
 3000|   772k|          lhs[0][2][1][2] =
 3001|   772k|              lhs[0][2][1][2] - (lhs[0][1][4][2]) * lhs[0][2][1][4];
 3002|   772k|          lhs[0][2][2][2] =
 3003|   772k|              lhs[0][2][2][2] - (lhs[0][1][4][2]) * lhs[0][2][2][4];
 3004|   772k|          lhs[0][2][3][2] =
 3005|   772k|              lhs[0][2][3][2] - (lhs[0][1][4][2]) * lhs[0][2][3][4];
 3006|   772k|          lhs[0][2][4][2] =
 3007|   772k|              lhs[0][2][4][2] - (lhs[0][1][4][2]) * lhs[0][2][4][4];
 3008|   772k|          (rhs[k][j][0])[2] =
 3009|   772k|              (rhs[k][j][0])[2] - (lhs[0][1][4][2]) * (rhs[k][j][0])[4];
 3010|       |
 3011|   772k|          lhs[0][2][0][3] =
 3012|   772k|              lhs[0][2][0][3] - (lhs[0][1][4][3]) * lhs[0][2][0][4];
 3013|   772k|          lhs[0][2][1][3] =
 3014|   772k|              lhs[0][2][1][3] - (lhs[0][1][4][3]) * lhs[0][2][1][4];
 3015|   772k|          lhs[0][2][2][3] =
 3016|   772k|              lhs[0][2][2][3] - (lhs[0][1][4][3]) * lhs[0][2][2][4];
 3017|   772k|          lhs[0][2][3][3] =
 3018|   772k|              lhs[0][2][3][3] - (lhs[0][1][4][3]) * lhs[0][2][3][4];
 3019|   772k|          lhs[0][2][4][3] =
 3020|   772k|              lhs[0][2][4][3] - (lhs[0][1][4][3]) * lhs[0][2][4][4];
 3021|   772k|          (rhs[k][j][0])[3] =
 3022|   772k|              (rhs[k][j][0])[3] - (lhs[0][1][4][3]) * (rhs[k][j][0])[4];
 3023|   772k|        }
 3024|       |
 3025|       |        //---------------------------------------------------------------------
 3026|       |        // begin inner most do loop
 3027|       |        // do all the elements of the cell unless last
 3028|       |        //---------------------------------------------------------------------
 3029|  48.6M|        for (i = 1; i <= (grid_points[0] - 1) - 1; i++) {
 3030|       |          //-------------------------------------------------------------------
 3031|       |          // rhs(i) = rhs(i) - A*rhs(i-1)
 3032|       |          //-------------------------------------------------------------------
 3033|       |          /* matvec_sub(lhs[i][AA], rhs[k][j][i - 1], rhs[k][j][i]) is inlined
 3034|       |           * below */
 3035|       |          ////#pragma spf assert nomacro
 3036|  47.9M|          {
 3037|       |
 3038|       |            //---------------------------------------------------------------------
 3039|       |            // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 3040|       |            // $                  - lhs[ia][ablock][0][i]*
 3041|       |            //---------------------------------------------------------------------
 3042|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] -
 3043|  47.9M|                                (lhs[i][AA])[0][0] * (rhs[k][j][i - 1])[0] -
 3044|  47.9M|                                (lhs[i][AA])[1][0] * (rhs[k][j][i - 1])[1] -
 3045|  47.9M|                                (lhs[i][AA])[2][0] * (rhs[k][j][i - 1])[2] -
 3046|  47.9M|                                (lhs[i][AA])[3][0] * (rhs[k][j][i - 1])[3] -
 3047|  47.9M|                                (lhs[i][AA])[4][0] * (rhs[k][j][i - 1])[4];
 3048|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] -
 3049|  47.9M|                                (lhs[i][AA])[0][1] * (rhs[k][j][i - 1])[0] -
 3050|  47.9M|                                (lhs[i][AA])[1][1] * (rhs[k][j][i - 1])[1] -
 3051|  47.9M|                                (lhs[i][AA])[2][1] * (rhs[k][j][i - 1])[2] -
 3052|  47.9M|                                (lhs[i][AA])[3][1] * (rhs[k][j][i - 1])[3] -
 3053|  47.9M|                                (lhs[i][AA])[4][1] * (rhs[k][j][i - 1])[4];
 3054|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] -
 3055|  47.9M|                                (lhs[i][AA])[0][2] * (rhs[k][j][i - 1])[0] -
 3056|  47.9M|                                (lhs[i][AA])[1][2] * (rhs[k][j][i - 1])[1] -
 3057|  47.9M|                                (lhs[i][AA])[2][2] * (rhs[k][j][i - 1])[2] -
 3058|  47.9M|                                (lhs[i][AA])[3][2] * (rhs[k][j][i - 1])[3] -
 3059|  47.9M|                                (lhs[i][AA])[4][2] * (rhs[k][j][i - 1])[4];
 3060|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] -
 3061|  47.9M|                                (lhs[i][AA])[0][3] * (rhs[k][j][i - 1])[0] -
 3062|  47.9M|                                (lhs[i][AA])[1][3] * (rhs[k][j][i - 1])[1] -
 3063|  47.9M|                                (lhs[i][AA])[2][3] * (rhs[k][j][i - 1])[2] -
 3064|  47.9M|                                (lhs[i][AA])[3][3] * (rhs[k][j][i - 1])[3] -
 3065|  47.9M|                                (lhs[i][AA])[4][3] * (rhs[k][j][i - 1])[4];
 3066|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] -
 3067|  47.9M|                                (lhs[i][AA])[0][4] * (rhs[k][j][i - 1])[0] -
 3068|  47.9M|                                (lhs[i][AA])[1][4] * (rhs[k][j][i - 1])[1] -
 3069|  47.9M|                                (lhs[i][AA])[2][4] * (rhs[k][j][i - 1])[2] -
 3070|  47.9M|                                (lhs[i][AA])[3][4] * (rhs[k][j][i - 1])[3] -
 3071|  47.9M|                                (lhs[i][AA])[4][4] * (rhs[k][j][i - 1])[4];
 3072|  47.9M|          }
 3073|       |
 3074|       |          //-------------------------------------------------------------------
 3075|       |          // B(i) = B(i) - C(i-1)*A(i)
 3076|       |          //-------------------------------------------------------------------
 3077|       |          /* matmul_sub(lhs[i][AA], lhs[i - 1][CC], lhs[i][BB]) is inlined below
 3078|       |           */
 3079|       |          ////#pragma spf assert nomacro
 3080|  47.9M|          {
 3081|       |
 3082|  47.9M|            (lhs[i][BB])[0][0] = (lhs[i][BB])[0][0] -
 3083|  47.9M|                                 (lhs[i][AA])[0][0] * (lhs[i - 1][CC])[0][0] -
 3084|  47.9M|                                 (lhs[i][AA])[1][0] * (lhs[i - 1][CC])[0][1] -
 3085|  47.9M|                                 (lhs[i][AA])[2][0] * (lhs[i - 1][CC])[0][2] -
 3086|  47.9M|                                 (lhs[i][AA])[3][0] * (lhs[i - 1][CC])[0][3] -
 3087|  47.9M|                                 (lhs[i][AA])[4][0] * (lhs[i - 1][CC])[0][4];
 3088|  47.9M|            (lhs[i][BB])[0][1] = (lhs[i][BB])[0][1] -
 3089|  47.9M|                                 (lhs[i][AA])[0][1] * (lhs[i - 1][CC])[0][0] -
 3090|  47.9M|                                 (lhs[i][AA])[1][1] * (lhs[i - 1][CC])[0][1] -
 3091|  47.9M|                                 (lhs[i][AA])[2][1] * (lhs[i - 1][CC])[0][2] -
 3092|  47.9M|                                 (lhs[i][AA])[3][1] * (lhs[i - 1][CC])[0][3] -
 3093|  47.9M|                                 (lhs[i][AA])[4][1] * (lhs[i - 1][CC])[0][4];
 3094|  47.9M|            (lhs[i][BB])[0][2] = (lhs[i][BB])[0][2] -
 3095|  47.9M|                                 (lhs[i][AA])[0][2] * (lhs[i - 1][CC])[0][0] -
 3096|  47.9M|                                 (lhs[i][AA])[1][2] * (lhs[i - 1][CC])[0][1] -
 3097|  47.9M|                                 (lhs[i][AA])[2][2] * (lhs[i - 1][CC])[0][2] -
 3098|  47.9M|                                 (lhs[i][AA])[3][2] * (lhs[i - 1][CC])[0][3] -
 3099|  47.9M|                                 (lhs[i][AA])[4][2] * (lhs[i - 1][CC])[0][4];
 3100|  47.9M|            (lhs[i][BB])[0][3] = (lhs[i][BB])[0][3] -
 3101|  47.9M|                                 (lhs[i][AA])[0][3] * (lhs[i - 1][CC])[0][0] -
 3102|  47.9M|                                 (lhs[i][AA])[1][3] * (lhs[i - 1][CC])[0][1] -
 3103|  47.9M|                                 (lhs[i][AA])[2][3] * (lhs[i - 1][CC])[0][2] -
 3104|  47.9M|                                 (lhs[i][AA])[3][3] * (lhs[i - 1][CC])[0][3] -
 3105|  47.9M|                                 (lhs[i][AA])[4][3] * (lhs[i - 1][CC])[0][4];
 3106|  47.9M|            (lhs[i][BB])[0][4] = (lhs[i][BB])[0][4] -
 3107|  47.9M|                                 (lhs[i][AA])[0][4] * (lhs[i - 1][CC])[0][0] -
 3108|  47.9M|                                 (lhs[i][AA])[1][4] * (lhs[i - 1][CC])[0][1] -
 3109|  47.9M|                                 (lhs[i][AA])[2][4] * (lhs[i - 1][CC])[0][2] -
 3110|  47.9M|                                 (lhs[i][AA])[3][4] * (lhs[i - 1][CC])[0][3] -
 3111|  47.9M|                                 (lhs[i][AA])[4][4] * (lhs[i - 1][CC])[0][4];
 3112|  47.9M|            (lhs[i][BB])[1][0] = (lhs[i][BB])[1][0] -
 3113|  47.9M|                                 (lhs[i][AA])[0][0] * (lhs[i - 1][CC])[1][0] -
 3114|  47.9M|                                 (lhs[i][AA])[1][0] * (lhs[i - 1][CC])[1][1] -
 3115|  47.9M|                                 (lhs[i][AA])[2][0] * (lhs[i - 1][CC])[1][2] -
 3116|  47.9M|                                 (lhs[i][AA])[3][0] * (lhs[i - 1][CC])[1][3] -
 3117|  47.9M|                                 (lhs[i][AA])[4][0] * (lhs[i - 1][CC])[1][4];
 3118|  47.9M|            (lhs[i][BB])[1][1] = (lhs[i][BB])[1][1] -
 3119|  47.9M|                                 (lhs[i][AA])[0][1] * (lhs[i - 1][CC])[1][0] -
 3120|  47.9M|                                 (lhs[i][AA])[1][1] * (lhs[i - 1][CC])[1][1] -
 3121|  47.9M|                                 (lhs[i][AA])[2][1] * (lhs[i - 1][CC])[1][2] -
 3122|  47.9M|                                 (lhs[i][AA])[3][1] * (lhs[i - 1][CC])[1][3] -
 3123|  47.9M|                                 (lhs[i][AA])[4][1] * (lhs[i - 1][CC])[1][4];
 3124|  47.9M|            (lhs[i][BB])[1][2] = (lhs[i][BB])[1][2] -
 3125|  47.9M|                                 (lhs[i][AA])[0][2] * (lhs[i - 1][CC])[1][0] -
 3126|  47.9M|                                 (lhs[i][AA])[1][2] * (lhs[i - 1][CC])[1][1] -
 3127|  47.9M|                                 (lhs[i][AA])[2][2] * (lhs[i - 1][CC])[1][2] -
 3128|  47.9M|                                 (lhs[i][AA])[3][2] * (lhs[i - 1][CC])[1][3] -
 3129|  47.9M|                                 (lhs[i][AA])[4][2] * (lhs[i - 1][CC])[1][4];
 3130|  47.9M|            (lhs[i][BB])[1][3] = (lhs[i][BB])[1][3] -
 3131|  47.9M|                                 (lhs[i][AA])[0][3] * (lhs[i - 1][CC])[1][0] -
 3132|  47.9M|                                 (lhs[i][AA])[1][3] * (lhs[i - 1][CC])[1][1] -
 3133|  47.9M|                                 (lhs[i][AA])[2][3] * (lhs[i - 1][CC])[1][2] -
 3134|  47.9M|                                 (lhs[i][AA])[3][3] * (lhs[i - 1][CC])[1][3] -
 3135|  47.9M|                                 (lhs[i][AA])[4][3] * (lhs[i - 1][CC])[1][4];
 3136|  47.9M|            (lhs[i][BB])[1][4] = (lhs[i][BB])[1][4] -
 3137|  47.9M|                                 (lhs[i][AA])[0][4] * (lhs[i - 1][CC])[1][0] -
 3138|  47.9M|                                 (lhs[i][AA])[1][4] * (lhs[i - 1][CC])[1][1] -
 3139|  47.9M|                                 (lhs[i][AA])[2][4] * (lhs[i - 1][CC])[1][2] -
 3140|  47.9M|                                 (lhs[i][AA])[3][4] * (lhs[i - 1][CC])[1][3] -
 3141|  47.9M|                                 (lhs[i][AA])[4][4] * (lhs[i - 1][CC])[1][4];
 3142|  47.9M|            (lhs[i][BB])[2][0] = (lhs[i][BB])[2][0] -
 3143|  47.9M|                                 (lhs[i][AA])[0][0] * (lhs[i - 1][CC])[2][0] -
 3144|  47.9M|                                 (lhs[i][AA])[1][0] * (lhs[i - 1][CC])[2][1] -
 3145|  47.9M|                                 (lhs[i][AA])[2][0] * (lhs[i - 1][CC])[2][2] -
 3146|  47.9M|                                 (lhs[i][AA])[3][0] * (lhs[i - 1][CC])[2][3] -
 3147|  47.9M|                                 (lhs[i][AA])[4][0] * (lhs[i - 1][CC])[2][4];
 3148|  47.9M|            (lhs[i][BB])[2][1] = (lhs[i][BB])[2][1] -
 3149|  47.9M|                                 (lhs[i][AA])[0][1] * (lhs[i - 1][CC])[2][0] -
 3150|  47.9M|                                 (lhs[i][AA])[1][1] * (lhs[i - 1][CC])[2][1] -
 3151|  47.9M|                                 (lhs[i][AA])[2][1] * (lhs[i - 1][CC])[2][2] -
 3152|  47.9M|                                 (lhs[i][AA])[3][1] * (lhs[i - 1][CC])[2][3] -
 3153|  47.9M|                                 (lhs[i][AA])[4][1] * (lhs[i - 1][CC])[2][4];
 3154|  47.9M|            (lhs[i][BB])[2][2] = (lhs[i][BB])[2][2] -
 3155|  47.9M|                                 (lhs[i][AA])[0][2] * (lhs[i - 1][CC])[2][0] -
 3156|  47.9M|                                 (lhs[i][AA])[1][2] * (lhs[i - 1][CC])[2][1] -
 3157|  47.9M|                                 (lhs[i][AA])[2][2] * (lhs[i - 1][CC])[2][2] -
 3158|  47.9M|                                 (lhs[i][AA])[3][2] * (lhs[i - 1][CC])[2][3] -
 3159|  47.9M|                                 (lhs[i][AA])[4][2] * (lhs[i - 1][CC])[2][4];
 3160|  47.9M|            (lhs[i][BB])[2][3] = (lhs[i][BB])[2][3] -
 3161|  47.9M|                                 (lhs[i][AA])[0][3] * (lhs[i - 1][CC])[2][0] -
 3162|  47.9M|                                 (lhs[i][AA])[1][3] * (lhs[i - 1][CC])[2][1] -
 3163|  47.9M|                                 (lhs[i][AA])[2][3] * (lhs[i - 1][CC])[2][2] -
 3164|  47.9M|                                 (lhs[i][AA])[3][3] * (lhs[i - 1][CC])[2][3] -
 3165|  47.9M|                                 (lhs[i][AA])[4][3] * (lhs[i - 1][CC])[2][4];
 3166|  47.9M|            (lhs[i][BB])[2][4] = (lhs[i][BB])[2][4] -
 3167|  47.9M|                                 (lhs[i][AA])[0][4] * (lhs[i - 1][CC])[2][0] -
 3168|  47.9M|                                 (lhs[i][AA])[1][4] * (lhs[i - 1][CC])[2][1] -
 3169|  47.9M|                                 (lhs[i][AA])[2][4] * (lhs[i - 1][CC])[2][2] -
 3170|  47.9M|                                 (lhs[i][AA])[3][4] * (lhs[i - 1][CC])[2][3] -
 3171|  47.9M|                                 (lhs[i][AA])[4][4] * (lhs[i - 1][CC])[2][4];
 3172|  47.9M|            (lhs[i][BB])[3][0] = (lhs[i][BB])[3][0] -
 3173|  47.9M|                                 (lhs[i][AA])[0][0] * (lhs[i - 1][CC])[3][0] -
 3174|  47.9M|                                 (lhs[i][AA])[1][0] * (lhs[i - 1][CC])[3][1] -
 3175|  47.9M|                                 (lhs[i][AA])[2][0] * (lhs[i - 1][CC])[3][2] -
 3176|  47.9M|                                 (lhs[i][AA])[3][0] * (lhs[i - 1][CC])[3][3] -
 3177|  47.9M|                                 (lhs[i][AA])[4][0] * (lhs[i - 1][CC])[3][4];
 3178|  47.9M|            (lhs[i][BB])[3][1] = (lhs[i][BB])[3][1] -
 3179|  47.9M|                                 (lhs[i][AA])[0][1] * (lhs[i - 1][CC])[3][0] -
 3180|  47.9M|                                 (lhs[i][AA])[1][1] * (lhs[i - 1][CC])[3][1] -
 3181|  47.9M|                                 (lhs[i][AA])[2][1] * (lhs[i - 1][CC])[3][2] -
 3182|  47.9M|                                 (lhs[i][AA])[3][1] * (lhs[i - 1][CC])[3][3] -
 3183|  47.9M|                                 (lhs[i][AA])[4][1] * (lhs[i - 1][CC])[3][4];
 3184|  47.9M|            (lhs[i][BB])[3][2] = (lhs[i][BB])[3][2] -
 3185|  47.9M|                                 (lhs[i][AA])[0][2] * (lhs[i - 1][CC])[3][0] -
 3186|  47.9M|                                 (lhs[i][AA])[1][2] * (lhs[i - 1][CC])[3][1] -
 3187|  47.9M|                                 (lhs[i][AA])[2][2] * (lhs[i - 1][CC])[3][2] -
 3188|  47.9M|                                 (lhs[i][AA])[3][2] * (lhs[i - 1][CC])[3][3] -
 3189|  47.9M|                                 (lhs[i][AA])[4][2] * (lhs[i - 1][CC])[3][4];
 3190|  47.9M|            (lhs[i][BB])[3][3] = (lhs[i][BB])[3][3] -
 3191|  47.9M|                                 (lhs[i][AA])[0][3] * (lhs[i - 1][CC])[3][0] -
 3192|  47.9M|                                 (lhs[i][AA])[1][3] * (lhs[i - 1][CC])[3][1] -
 3193|  47.9M|                                 (lhs[i][AA])[2][3] * (lhs[i - 1][CC])[3][2] -
 3194|  47.9M|                                 (lhs[i][AA])[3][3] * (lhs[i - 1][CC])[3][3] -
 3195|  47.9M|                                 (lhs[i][AA])[4][3] * (lhs[i - 1][CC])[3][4];
 3196|  47.9M|            (lhs[i][BB])[3][4] = (lhs[i][BB])[3][4] -
 3197|  47.9M|                                 (lhs[i][AA])[0][4] * (lhs[i - 1][CC])[3][0] -
 3198|  47.9M|                                 (lhs[i][AA])[1][4] * (lhs[i - 1][CC])[3][1] -
 3199|  47.9M|                                 (lhs[i][AA])[2][4] * (lhs[i - 1][CC])[3][2] -
 3200|  47.9M|                                 (lhs[i][AA])[3][4] * (lhs[i - 1][CC])[3][3] -
 3201|  47.9M|                                 (lhs[i][AA])[4][4] * (lhs[i - 1][CC])[3][4];
 3202|  47.9M|            (lhs[i][BB])[4][0] = (lhs[i][BB])[4][0] -
 3203|  47.9M|                                 (lhs[i][AA])[0][0] * (lhs[i - 1][CC])[4][0] -
 3204|  47.9M|                                 (lhs[i][AA])[1][0] * (lhs[i - 1][CC])[4][1] -
 3205|  47.9M|                                 (lhs[i][AA])[2][0] * (lhs[i - 1][CC])[4][2] -
 3206|  47.9M|                                 (lhs[i][AA])[3][0] * (lhs[i - 1][CC])[4][3] -
 3207|  47.9M|                                 (lhs[i][AA])[4][0] * (lhs[i - 1][CC])[4][4];
 3208|  47.9M|            (lhs[i][BB])[4][1] = (lhs[i][BB])[4][1] -
 3209|  47.9M|                                 (lhs[i][AA])[0][1] * (lhs[i - 1][CC])[4][0] -
 3210|  47.9M|                                 (lhs[i][AA])[1][1] * (lhs[i - 1][CC])[4][1] -
 3211|  47.9M|                                 (lhs[i][AA])[2][1] * (lhs[i - 1][CC])[4][2] -
 3212|  47.9M|                                 (lhs[i][AA])[3][1] * (lhs[i - 1][CC])[4][3] -
 3213|  47.9M|                                 (lhs[i][AA])[4][1] * (lhs[i - 1][CC])[4][4];
 3214|  47.9M|            (lhs[i][BB])[4][2] = (lhs[i][BB])[4][2] -
 3215|  47.9M|                                 (lhs[i][AA])[0][2] * (lhs[i - 1][CC])[4][0] -
 3216|  47.9M|                                 (lhs[i][AA])[1][2] * (lhs[i - 1][CC])[4][1] -
 3217|  47.9M|                                 (lhs[i][AA])[2][2] * (lhs[i - 1][CC])[4][2] -
 3218|  47.9M|                                 (lhs[i][AA])[3][2] * (lhs[i - 1][CC])[4][3] -
 3219|  47.9M|                                 (lhs[i][AA])[4][2] * (lhs[i - 1][CC])[4][4];
 3220|  47.9M|            (lhs[i][BB])[4][3] = (lhs[i][BB])[4][3] -
 3221|  47.9M|                                 (lhs[i][AA])[0][3] * (lhs[i - 1][CC])[4][0] -
 3222|  47.9M|                                 (lhs[i][AA])[1][3] * (lhs[i - 1][CC])[4][1] -
 3223|  47.9M|                                 (lhs[i][AA])[2][3] * (lhs[i - 1][CC])[4][2] -
 3224|  47.9M|                                 (lhs[i][AA])[3][3] * (lhs[i - 1][CC])[4][3] -
 3225|  47.9M|                                 (lhs[i][AA])[4][3] * (lhs[i - 1][CC])[4][4];
 3226|  47.9M|            (lhs[i][BB])[4][4] = (lhs[i][BB])[4][4] -
 3227|  47.9M|                                 (lhs[i][AA])[0][4] * (lhs[i - 1][CC])[4][0] -
 3228|  47.9M|                                 (lhs[i][AA])[1][4] * (lhs[i - 1][CC])[4][1] -
 3229|  47.9M|                                 (lhs[i][AA])[2][4] * (lhs[i - 1][CC])[4][2] -
 3230|  47.9M|                                 (lhs[i][AA])[3][4] * (lhs[i - 1][CC])[4][3] -
 3231|  47.9M|                                 (lhs[i][AA])[4][4] * (lhs[i - 1][CC])[4][4];
 3232|  47.9M|          }
 3233|       |
 3234|       |          //-------------------------------------------------------------------
 3235|       |          // multiply c[k][j][i] by b_inverse and copy back to c
 3236|       |          // multiply rhs[k][j][0] by b_inverse[k][j][0] and copy to rhs
 3237|       |          //-------------------------------------------------------------------
 3238|       |          /* binvcrhs(lhs[i][BB], lhs[i][CC], rhs[k][j][i]) is inlined below */
 3239|       |          ////#pragma spf assert nomacro
 3240|  47.9M|          {
 3241|       |
 3242|  47.9M|            (lhs[i][BB])[1][0] =
 3243|  47.9M|                (lhs[i][BB])[1][0] * (1.00 / (lhs[i][BB])[0][0]);
 3244|  47.9M|            (lhs[i][BB])[2][0] =
 3245|  47.9M|                (lhs[i][BB])[2][0] * (1.00 / (lhs[i][BB])[0][0]);
 3246|  47.9M|            (lhs[i][BB])[3][0] =
 3247|  47.9M|                (lhs[i][BB])[3][0] * (1.00 / (lhs[i][BB])[0][0]);
 3248|  47.9M|            (lhs[i][BB])[4][0] =
 3249|  47.9M|                (lhs[i][BB])[4][0] * (1.00 / (lhs[i][BB])[0][0]);
 3250|  47.9M|            (lhs[i][CC])[0][0] =
 3251|  47.9M|                (lhs[i][CC])[0][0] * (1.00 / (lhs[i][BB])[0][0]);
 3252|  47.9M|            (lhs[i][CC])[1][0] =
 3253|  47.9M|                (lhs[i][CC])[1][0] * (1.00 / (lhs[i][BB])[0][0]);
 3254|  47.9M|            (lhs[i][CC])[2][0] =
 3255|  47.9M|                (lhs[i][CC])[2][0] * (1.00 / (lhs[i][BB])[0][0]);
 3256|  47.9M|            (lhs[i][CC])[3][0] =
 3257|  47.9M|                (lhs[i][CC])[3][0] * (1.00 / (lhs[i][BB])[0][0]);
 3258|  47.9M|            (lhs[i][CC])[4][0] =
 3259|  47.9M|                (lhs[i][CC])[4][0] * (1.00 / (lhs[i][BB])[0][0]);
 3260|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] * (1.00 / (lhs[i][BB])[0][0]);
 3261|       |
 3262|  47.9M|            (lhs[i][BB])[1][1] =
 3263|  47.9M|                (lhs[i][BB])[1][1] - ((lhs[i][BB])[0][1]) * (lhs[i][BB])[1][0];
 3264|  47.9M|            (lhs[i][BB])[2][1] =
 3265|  47.9M|                (lhs[i][BB])[2][1] - ((lhs[i][BB])[0][1]) * (lhs[i][BB])[2][0];
 3266|  47.9M|            (lhs[i][BB])[3][1] =
 3267|  47.9M|                (lhs[i][BB])[3][1] - ((lhs[i][BB])[0][1]) * (lhs[i][BB])[3][0];
 3268|  47.9M|            (lhs[i][BB])[4][1] =
 3269|  47.9M|                (lhs[i][BB])[4][1] - ((lhs[i][BB])[0][1]) * (lhs[i][BB])[4][0];
 3270|  47.9M|            (lhs[i][CC])[0][1] =
 3271|  47.9M|                (lhs[i][CC])[0][1] - ((lhs[i][BB])[0][1]) * (lhs[i][CC])[0][0];
 3272|  47.9M|            (lhs[i][CC])[1][1] =
 3273|  47.9M|                (lhs[i][CC])[1][1] - ((lhs[i][BB])[0][1]) * (lhs[i][CC])[1][0];
 3274|  47.9M|            (lhs[i][CC])[2][1] =
 3275|  47.9M|                (lhs[i][CC])[2][1] - ((lhs[i][BB])[0][1]) * (lhs[i][CC])[2][0];
 3276|  47.9M|            (lhs[i][CC])[3][1] =
 3277|  47.9M|                (lhs[i][CC])[3][1] - ((lhs[i][BB])[0][1]) * (lhs[i][CC])[3][0];
 3278|  47.9M|            (lhs[i][CC])[4][1] =
 3279|  47.9M|                (lhs[i][CC])[4][1] - ((lhs[i][BB])[0][1]) * (lhs[i][CC])[4][0];
 3280|  47.9M|            (rhs[k][j][i])[1] =
 3281|  47.9M|                (rhs[k][j][i])[1] - ((lhs[i][BB])[0][1]) * (rhs[k][j][i])[0];
 3282|       |
 3283|  47.9M|            (lhs[i][BB])[1][2] =
 3284|  47.9M|                (lhs[i][BB])[1][2] - ((lhs[i][BB])[0][2]) * (lhs[i][BB])[1][0];
 3285|  47.9M|            (lhs[i][BB])[2][2] =
 3286|  47.9M|                (lhs[i][BB])[2][2] - ((lhs[i][BB])[0][2]) * (lhs[i][BB])[2][0];
 3287|  47.9M|            (lhs[i][BB])[3][2] =
 3288|  47.9M|                (lhs[i][BB])[3][2] - ((lhs[i][BB])[0][2]) * (lhs[i][BB])[3][0];
 3289|  47.9M|            (lhs[i][BB])[4][2] =
 3290|  47.9M|                (lhs[i][BB])[4][2] - ((lhs[i][BB])[0][2]) * (lhs[i][BB])[4][0];
 3291|  47.9M|            (lhs[i][CC])[0][2] =
 3292|  47.9M|                (lhs[i][CC])[0][2] - ((lhs[i][BB])[0][2]) * (lhs[i][CC])[0][0];
 3293|  47.9M|            (lhs[i][CC])[1][2] =
 3294|  47.9M|                (lhs[i][CC])[1][2] - ((lhs[i][BB])[0][2]) * (lhs[i][CC])[1][0];
 3295|  47.9M|            (lhs[i][CC])[2][2] =
 3296|  47.9M|                (lhs[i][CC])[2][2] - ((lhs[i][BB])[0][2]) * (lhs[i][CC])[2][0];
 3297|  47.9M|            (lhs[i][CC])[3][2] =
 3298|  47.9M|                (lhs[i][CC])[3][2] - ((lhs[i][BB])[0][2]) * (lhs[i][CC])[3][0];
 3299|  47.9M|            (lhs[i][CC])[4][2] =
 3300|  47.9M|                (lhs[i][CC])[4][2] - ((lhs[i][BB])[0][2]) * (lhs[i][CC])[4][0];
 3301|  47.9M|            (rhs[k][j][i])[2] =
 3302|  47.9M|                (rhs[k][j][i])[2] - ((lhs[i][BB])[0][2]) * (rhs[k][j][i])[0];
 3303|       |
 3304|  47.9M|            (lhs[i][BB])[1][3] =
 3305|  47.9M|                (lhs[i][BB])[1][3] - ((lhs[i][BB])[0][3]) * (lhs[i][BB])[1][0];
 3306|  47.9M|            (lhs[i][BB])[2][3] =
 3307|  47.9M|                (lhs[i][BB])[2][3] - ((lhs[i][BB])[0][3]) * (lhs[i][BB])[2][0];
 3308|  47.9M|            (lhs[i][BB])[3][3] =
 3309|  47.9M|                (lhs[i][BB])[3][3] - ((lhs[i][BB])[0][3]) * (lhs[i][BB])[3][0];
 3310|  47.9M|            (lhs[i][BB])[4][3] =
 3311|  47.9M|                (lhs[i][BB])[4][3] - ((lhs[i][BB])[0][3]) * (lhs[i][BB])[4][0];
 3312|  47.9M|            (lhs[i][CC])[0][3] =
 3313|  47.9M|                (lhs[i][CC])[0][3] - ((lhs[i][BB])[0][3]) * (lhs[i][CC])[0][0];
 3314|  47.9M|            (lhs[i][CC])[1][3] =
 3315|  47.9M|                (lhs[i][CC])[1][3] - ((lhs[i][BB])[0][3]) * (lhs[i][CC])[1][0];
 3316|  47.9M|            (lhs[i][CC])[2][3] =
 3317|  47.9M|                (lhs[i][CC])[2][3] - ((lhs[i][BB])[0][3]) * (lhs[i][CC])[2][0];
 3318|  47.9M|            (lhs[i][CC])[3][3] =
 3319|  47.9M|                (lhs[i][CC])[3][3] - ((lhs[i][BB])[0][3]) * (lhs[i][CC])[3][0];
 3320|  47.9M|            (lhs[i][CC])[4][3] =
 3321|  47.9M|                (lhs[i][CC])[4][3] - ((lhs[i][BB])[0][3]) * (lhs[i][CC])[4][0];
 3322|  47.9M|            (rhs[k][j][i])[3] =
 3323|  47.9M|                (rhs[k][j][i])[3] - ((lhs[i][BB])[0][3]) * (rhs[k][j][i])[0];
 3324|       |
 3325|  47.9M|            (lhs[i][BB])[1][4] =
 3326|  47.9M|                (lhs[i][BB])[1][4] - ((lhs[i][BB])[0][4]) * (lhs[i][BB])[1][0];
 3327|  47.9M|            (lhs[i][BB])[2][4] =
 3328|  47.9M|                (lhs[i][BB])[2][4] - ((lhs[i][BB])[0][4]) * (lhs[i][BB])[2][0];
 3329|  47.9M|            (lhs[i][BB])[3][4] =
 3330|  47.9M|                (lhs[i][BB])[3][4] - ((lhs[i][BB])[0][4]) * (lhs[i][BB])[3][0];
 3331|  47.9M|            (lhs[i][BB])[4][4] =
 3332|  47.9M|                (lhs[i][BB])[4][4] - ((lhs[i][BB])[0][4]) * (lhs[i][BB])[4][0];
 3333|  47.9M|            (lhs[i][CC])[0][4] =
 3334|  47.9M|                (lhs[i][CC])[0][4] - ((lhs[i][BB])[0][4]) * (lhs[i][CC])[0][0];
 3335|  47.9M|            (lhs[i][CC])[1][4] =
 3336|  47.9M|                (lhs[i][CC])[1][4] - ((lhs[i][BB])[0][4]) * (lhs[i][CC])[1][0];
 3337|  47.9M|            (lhs[i][CC])[2][4] =
 3338|  47.9M|                (lhs[i][CC])[2][4] - ((lhs[i][BB])[0][4]) * (lhs[i][CC])[2][0];
 3339|  47.9M|            (lhs[i][CC])[3][4] =
 3340|  47.9M|                (lhs[i][CC])[3][4] - ((lhs[i][BB])[0][4]) * (lhs[i][CC])[3][0];
 3341|  47.9M|            (lhs[i][CC])[4][4] =
 3342|  47.9M|                (lhs[i][CC])[4][4] - ((lhs[i][BB])[0][4]) * (lhs[i][CC])[4][0];
 3343|  47.9M|            (rhs[k][j][i])[4] =
 3344|  47.9M|                (rhs[k][j][i])[4] - ((lhs[i][BB])[0][4]) * (rhs[k][j][i])[0];
 3345|       |
 3346|  47.9M|            (lhs[i][BB])[2][1] =
 3347|  47.9M|                (lhs[i][BB])[2][1] * (1.00 / (lhs[i][BB])[1][1]);
 3348|  47.9M|            (lhs[i][BB])[3][1] =
 3349|  47.9M|                (lhs[i][BB])[3][1] * (1.00 / (lhs[i][BB])[1][1]);
 3350|  47.9M|            (lhs[i][BB])[4][1] =
 3351|  47.9M|                (lhs[i][BB])[4][1] * (1.00 / (lhs[i][BB])[1][1]);
 3352|  47.9M|            (lhs[i][CC])[0][1] =
 3353|  47.9M|                (lhs[i][CC])[0][1] * (1.00 / (lhs[i][BB])[1][1]);
 3354|  47.9M|            (lhs[i][CC])[1][1] =
 3355|  47.9M|                (lhs[i][CC])[1][1] * (1.00 / (lhs[i][BB])[1][1]);
 3356|  47.9M|            (lhs[i][CC])[2][1] =
 3357|  47.9M|                (lhs[i][CC])[2][1] * (1.00 / (lhs[i][BB])[1][1]);
 3358|  47.9M|            (lhs[i][CC])[3][1] =
 3359|  47.9M|                (lhs[i][CC])[3][1] * (1.00 / (lhs[i][BB])[1][1]);
 3360|  47.9M|            (lhs[i][CC])[4][1] =
 3361|  47.9M|                (lhs[i][CC])[4][1] * (1.00 / (lhs[i][BB])[1][1]);
 3362|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] * (1.00 / (lhs[i][BB])[1][1]);
 3363|       |
 3364|  47.9M|            (lhs[i][BB])[2][0] =
 3365|  47.9M|                (lhs[i][BB])[2][0] - ((lhs[i][BB])[1][0]) * (lhs[i][BB])[2][1];
 3366|  47.9M|            (lhs[i][BB])[3][0] =
 3367|  47.9M|                (lhs[i][BB])[3][0] - ((lhs[i][BB])[1][0]) * (lhs[i][BB])[3][1];
 3368|  47.9M|            (lhs[i][BB])[4][0] =
 3369|  47.9M|                (lhs[i][BB])[4][0] - ((lhs[i][BB])[1][0]) * (lhs[i][BB])[4][1];
 3370|  47.9M|            (lhs[i][CC])[0][0] =
 3371|  47.9M|                (lhs[i][CC])[0][0] - ((lhs[i][BB])[1][0]) * (lhs[i][CC])[0][1];
 3372|  47.9M|            (lhs[i][CC])[1][0] =
 3373|  47.9M|                (lhs[i][CC])[1][0] - ((lhs[i][BB])[1][0]) * (lhs[i][CC])[1][1];
 3374|  47.9M|            (lhs[i][CC])[2][0] =
 3375|  47.9M|                (lhs[i][CC])[2][0] - ((lhs[i][BB])[1][0]) * (lhs[i][CC])[2][1];
 3376|  47.9M|            (lhs[i][CC])[3][0] =
 3377|  47.9M|                (lhs[i][CC])[3][0] - ((lhs[i][BB])[1][0]) * (lhs[i][CC])[3][1];
 3378|  47.9M|            (lhs[i][CC])[4][0] =
 3379|  47.9M|                (lhs[i][CC])[4][0] - ((lhs[i][BB])[1][0]) * (lhs[i][CC])[4][1];
 3380|  47.9M|            (rhs[k][j][i])[0] =
 3381|  47.9M|                (rhs[k][j][i])[0] - ((lhs[i][BB])[1][0]) * (rhs[k][j][i])[1];
 3382|       |
 3383|  47.9M|            (lhs[i][BB])[2][2] =
 3384|  47.9M|                (lhs[i][BB])[2][2] - ((lhs[i][BB])[1][2]) * (lhs[i][BB])[2][1];
 3385|  47.9M|            (lhs[i][BB])[3][2] =
 3386|  47.9M|                (lhs[i][BB])[3][2] - ((lhs[i][BB])[1][2]) * (lhs[i][BB])[3][1];
 3387|  47.9M|            (lhs[i][BB])[4][2] =
 3388|  47.9M|                (lhs[i][BB])[4][2] - ((lhs[i][BB])[1][2]) * (lhs[i][BB])[4][1];
 3389|  47.9M|            (lhs[i][CC])[0][2] =
 3390|  47.9M|                (lhs[i][CC])[0][2] - ((lhs[i][BB])[1][2]) * (lhs[i][CC])[0][1];
 3391|  47.9M|            (lhs[i][CC])[1][2] =
 3392|  47.9M|                (lhs[i][CC])[1][2] - ((lhs[i][BB])[1][2]) * (lhs[i][CC])[1][1];
 3393|  47.9M|            (lhs[i][CC])[2][2] =
 3394|  47.9M|                (lhs[i][CC])[2][2] - ((lhs[i][BB])[1][2]) * (lhs[i][CC])[2][1];
 3395|  47.9M|            (lhs[i][CC])[3][2] =
 3396|  47.9M|                (lhs[i][CC])[3][2] - ((lhs[i][BB])[1][2]) * (lhs[i][CC])[3][1];
 3397|  47.9M|            (lhs[i][CC])[4][2] =
 3398|  47.9M|                (lhs[i][CC])[4][2] - ((lhs[i][BB])[1][2]) * (lhs[i][CC])[4][1];
 3399|  47.9M|            (rhs[k][j][i])[2] =
 3400|  47.9M|                (rhs[k][j][i])[2] - ((lhs[i][BB])[1][2]) * (rhs[k][j][i])[1];
 3401|       |
 3402|  47.9M|            (lhs[i][BB])[2][3] =
 3403|  47.9M|                (lhs[i][BB])[2][3] - ((lhs[i][BB])[1][3]) * (lhs[i][BB])[2][1];
 3404|  47.9M|            (lhs[i][BB])[3][3] =
 3405|  47.9M|                (lhs[i][BB])[3][3] - ((lhs[i][BB])[1][3]) * (lhs[i][BB])[3][1];
 3406|  47.9M|            (lhs[i][BB])[4][3] =
 3407|  47.9M|                (lhs[i][BB])[4][3] - ((lhs[i][BB])[1][3]) * (lhs[i][BB])[4][1];
 3408|  47.9M|            (lhs[i][CC])[0][3] =
 3409|  47.9M|                (lhs[i][CC])[0][3] - ((lhs[i][BB])[1][3]) * (lhs[i][CC])[0][1];
 3410|  47.9M|            (lhs[i][CC])[1][3] =
 3411|  47.9M|                (lhs[i][CC])[1][3] - ((lhs[i][BB])[1][3]) * (lhs[i][CC])[1][1];
 3412|  47.9M|            (lhs[i][CC])[2][3] =
 3413|  47.9M|                (lhs[i][CC])[2][3] - ((lhs[i][BB])[1][3]) * (lhs[i][CC])[2][1];
 3414|  47.9M|            (lhs[i][CC])[3][3] =
 3415|  47.9M|                (lhs[i][CC])[3][3] - ((lhs[i][BB])[1][3]) * (lhs[i][CC])[3][1];
 3416|  47.9M|            (lhs[i][CC])[4][3] =
 3417|  47.9M|                (lhs[i][CC])[4][3] - ((lhs[i][BB])[1][3]) * (lhs[i][CC])[4][1];
 3418|  47.9M|            (rhs[k][j][i])[3] =
 3419|  47.9M|                (rhs[k][j][i])[3] - ((lhs[i][BB])[1][3]) * (rhs[k][j][i])[1];
 3420|       |
 3421|  47.9M|            (lhs[i][BB])[2][4] =
 3422|  47.9M|                (lhs[i][BB])[2][4] - ((lhs[i][BB])[1][4]) * (lhs[i][BB])[2][1];
 3423|  47.9M|            (lhs[i][BB])[3][4] =
 3424|  47.9M|                (lhs[i][BB])[3][4] - ((lhs[i][BB])[1][4]) * (lhs[i][BB])[3][1];
 3425|  47.9M|            (lhs[i][BB])[4][4] =
 3426|  47.9M|                (lhs[i][BB])[4][4] - ((lhs[i][BB])[1][4]) * (lhs[i][BB])[4][1];
 3427|  47.9M|            (lhs[i][CC])[0][4] =
 3428|  47.9M|                (lhs[i][CC])[0][4] - ((lhs[i][BB])[1][4]) * (lhs[i][CC])[0][1];
 3429|  47.9M|            (lhs[i][CC])[1][4] =
 3430|  47.9M|                (lhs[i][CC])[1][4] - ((lhs[i][BB])[1][4]) * (lhs[i][CC])[1][1];
 3431|  47.9M|            (lhs[i][CC])[2][4] =
 3432|  47.9M|                (lhs[i][CC])[2][4] - ((lhs[i][BB])[1][4]) * (lhs[i][CC])[2][1];
 3433|  47.9M|            (lhs[i][CC])[3][4] =
 3434|  47.9M|                (lhs[i][CC])[3][4] - ((lhs[i][BB])[1][4]) * (lhs[i][CC])[3][1];
 3435|  47.9M|            (lhs[i][CC])[4][4] =
 3436|  47.9M|                (lhs[i][CC])[4][4] - ((lhs[i][BB])[1][4]) * (lhs[i][CC])[4][1];
 3437|  47.9M|            (rhs[k][j][i])[4] =
 3438|  47.9M|                (rhs[k][j][i])[4] - ((lhs[i][BB])[1][4]) * (rhs[k][j][i])[1];
 3439|       |
 3440|  47.9M|            (lhs[i][BB])[3][2] =
 3441|  47.9M|                (lhs[i][BB])[3][2] * (1.00 / (lhs[i][BB])[2][2]);
 3442|  47.9M|            (lhs[i][BB])[4][2] =
 3443|  47.9M|                (lhs[i][BB])[4][2] * (1.00 / (lhs[i][BB])[2][2]);
 3444|  47.9M|            (lhs[i][CC])[0][2] =
 3445|  47.9M|                (lhs[i][CC])[0][2] * (1.00 / (lhs[i][BB])[2][2]);
 3446|  47.9M|            (lhs[i][CC])[1][2] =
 3447|  47.9M|                (lhs[i][CC])[1][2] * (1.00 / (lhs[i][BB])[2][2]);
 3448|  47.9M|            (lhs[i][CC])[2][2] =
 3449|  47.9M|                (lhs[i][CC])[2][2] * (1.00 / (lhs[i][BB])[2][2]);
 3450|  47.9M|            (lhs[i][CC])[3][2] =
 3451|  47.9M|                (lhs[i][CC])[3][2] * (1.00 / (lhs[i][BB])[2][2]);
 3452|  47.9M|            (lhs[i][CC])[4][2] =
 3453|  47.9M|                (lhs[i][CC])[4][2] * (1.00 / (lhs[i][BB])[2][2]);
 3454|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] * (1.00 / (lhs[i][BB])[2][2]);
 3455|       |
 3456|  47.9M|            (lhs[i][BB])[3][0] =
 3457|  47.9M|                (lhs[i][BB])[3][0] - ((lhs[i][BB])[2][0]) * (lhs[i][BB])[3][2];
 3458|  47.9M|            (lhs[i][BB])[4][0] =
 3459|  47.9M|                (lhs[i][BB])[4][0] - ((lhs[i][BB])[2][0]) * (lhs[i][BB])[4][2];
 3460|  47.9M|            (lhs[i][CC])[0][0] =
 3461|  47.9M|                (lhs[i][CC])[0][0] - ((lhs[i][BB])[2][0]) * (lhs[i][CC])[0][2];
 3462|  47.9M|            (lhs[i][CC])[1][0] =
 3463|  47.9M|                (lhs[i][CC])[1][0] - ((lhs[i][BB])[2][0]) * (lhs[i][CC])[1][2];
 3464|  47.9M|            (lhs[i][CC])[2][0] =
 3465|  47.9M|                (lhs[i][CC])[2][0] - ((lhs[i][BB])[2][0]) * (lhs[i][CC])[2][2];
 3466|  47.9M|            (lhs[i][CC])[3][0] =
 3467|  47.9M|                (lhs[i][CC])[3][0] - ((lhs[i][BB])[2][0]) * (lhs[i][CC])[3][2];
 3468|  47.9M|            (lhs[i][CC])[4][0] =
 3469|  47.9M|                (lhs[i][CC])[4][0] - ((lhs[i][BB])[2][0]) * (lhs[i][CC])[4][2];
 3470|  47.9M|            (rhs[k][j][i])[0] =
 3471|  47.9M|                (rhs[k][j][i])[0] - ((lhs[i][BB])[2][0]) * (rhs[k][j][i])[2];
 3472|       |
 3473|  47.9M|            (lhs[i][BB])[3][1] =
 3474|  47.9M|                (lhs[i][BB])[3][1] - ((lhs[i][BB])[2][1]) * (lhs[i][BB])[3][2];
 3475|  47.9M|            (lhs[i][BB])[4][1] =
 3476|  47.9M|                (lhs[i][BB])[4][1] - ((lhs[i][BB])[2][1]) * (lhs[i][BB])[4][2];
 3477|  47.9M|            (lhs[i][CC])[0][1] =
 3478|  47.9M|                (lhs[i][CC])[0][1] - ((lhs[i][BB])[2][1]) * (lhs[i][CC])[0][2];
 3479|  47.9M|            (lhs[i][CC])[1][1] =
 3480|  47.9M|                (lhs[i][CC])[1][1] - ((lhs[i][BB])[2][1]) * (lhs[i][CC])[1][2];
 3481|  47.9M|            (lhs[i][CC])[2][1] =
 3482|  47.9M|                (lhs[i][CC])[2][1] - ((lhs[i][BB])[2][1]) * (lhs[i][CC])[2][2];
 3483|  47.9M|            (lhs[i][CC])[3][1] =
 3484|  47.9M|                (lhs[i][CC])[3][1] - ((lhs[i][BB])[2][1]) * (lhs[i][CC])[3][2];
 3485|  47.9M|            (lhs[i][CC])[4][1] =
 3486|  47.9M|                (lhs[i][CC])[4][1] - ((lhs[i][BB])[2][1]) * (lhs[i][CC])[4][2];
 3487|  47.9M|            (rhs[k][j][i])[1] =
 3488|  47.9M|                (rhs[k][j][i])[1] - ((lhs[i][BB])[2][1]) * (rhs[k][j][i])[2];
 3489|       |
 3490|  47.9M|            (lhs[i][BB])[3][3] =
 3491|  47.9M|                (lhs[i][BB])[3][3] - ((lhs[i][BB])[2][3]) * (lhs[i][BB])[3][2];
 3492|  47.9M|            (lhs[i][BB])[4][3] =
 3493|  47.9M|                (lhs[i][BB])[4][3] - ((lhs[i][BB])[2][3]) * (lhs[i][BB])[4][2];
 3494|  47.9M|            (lhs[i][CC])[0][3] =
 3495|  47.9M|                (lhs[i][CC])[0][3] - ((lhs[i][BB])[2][3]) * (lhs[i][CC])[0][2];
 3496|  47.9M|            (lhs[i][CC])[1][3] =
 3497|  47.9M|                (lhs[i][CC])[1][3] - ((lhs[i][BB])[2][3]) * (lhs[i][CC])[1][2];
 3498|  47.9M|            (lhs[i][CC])[2][3] =
 3499|  47.9M|                (lhs[i][CC])[2][3] - ((lhs[i][BB])[2][3]) * (lhs[i][CC])[2][2];
 3500|  47.9M|            (lhs[i][CC])[3][3] =
 3501|  47.9M|                (lhs[i][CC])[3][3] - ((lhs[i][BB])[2][3]) * (lhs[i][CC])[3][2];
 3502|  47.9M|            (lhs[i][CC])[4][3] =
 3503|  47.9M|                (lhs[i][CC])[4][3] - ((lhs[i][BB])[2][3]) * (lhs[i][CC])[4][2];
 3504|  47.9M|            (rhs[k][j][i])[3] =
 3505|  47.9M|                (rhs[k][j][i])[3] - ((lhs[i][BB])[2][3]) * (rhs[k][j][i])[2];
 3506|       |
 3507|  47.9M|            (lhs[i][BB])[3][4] =
 3508|  47.9M|                (lhs[i][BB])[3][4] - ((lhs[i][BB])[2][4]) * (lhs[i][BB])[3][2];
 3509|  47.9M|            (lhs[i][BB])[4][4] =
 3510|  47.9M|                (lhs[i][BB])[4][4] - ((lhs[i][BB])[2][4]) * (lhs[i][BB])[4][2];
 3511|  47.9M|            (lhs[i][CC])[0][4] =
 3512|  47.9M|                (lhs[i][CC])[0][4] - ((lhs[i][BB])[2][4]) * (lhs[i][CC])[0][2];
 3513|  47.9M|            (lhs[i][CC])[1][4] =
 3514|  47.9M|                (lhs[i][CC])[1][4] - ((lhs[i][BB])[2][4]) * (lhs[i][CC])[1][2];
 3515|  47.9M|            (lhs[i][CC])[2][4] =
 3516|  47.9M|                (lhs[i][CC])[2][4] - ((lhs[i][BB])[2][4]) * (lhs[i][CC])[2][2];
 3517|  47.9M|            (lhs[i][CC])[3][4] =
 3518|  47.9M|                (lhs[i][CC])[3][4] - ((lhs[i][BB])[2][4]) * (lhs[i][CC])[3][2];
 3519|  47.9M|            (lhs[i][CC])[4][4] =
 3520|  47.9M|                (lhs[i][CC])[4][4] - ((lhs[i][BB])[2][4]) * (lhs[i][CC])[4][2];
 3521|  47.9M|            (rhs[k][j][i])[4] =
 3522|  47.9M|                (rhs[k][j][i])[4] - ((lhs[i][BB])[2][4]) * (rhs[k][j][i])[2];
 3523|       |
 3524|  47.9M|            (lhs[i][BB])[4][3] =
 3525|  47.9M|                (lhs[i][BB])[4][3] * (1.00 / (lhs[i][BB])[3][3]);
 3526|  47.9M|            (lhs[i][CC])[0][3] =
 3527|  47.9M|                (lhs[i][CC])[0][3] * (1.00 / (lhs[i][BB])[3][3]);
 3528|  47.9M|            (lhs[i][CC])[1][3] =
 3529|  47.9M|                (lhs[i][CC])[1][3] * (1.00 / (lhs[i][BB])[3][3]);
 3530|  47.9M|            (lhs[i][CC])[2][3] =
 3531|  47.9M|                (lhs[i][CC])[2][3] * (1.00 / (lhs[i][BB])[3][3]);
 3532|  47.9M|            (lhs[i][CC])[3][3] =
 3533|  47.9M|                (lhs[i][CC])[3][3] * (1.00 / (lhs[i][BB])[3][3]);
 3534|  47.9M|            (lhs[i][CC])[4][3] =
 3535|  47.9M|                (lhs[i][CC])[4][3] * (1.00 / (lhs[i][BB])[3][3]);
 3536|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] * (1.00 / (lhs[i][BB])[3][3]);
 3537|       |
 3538|  47.9M|            (lhs[i][BB])[4][0] =
 3539|  47.9M|                (lhs[i][BB])[4][0] - ((lhs[i][BB])[3][0]) * (lhs[i][BB])[4][3];
 3540|  47.9M|            (lhs[i][CC])[0][0] =
 3541|  47.9M|                (lhs[i][CC])[0][0] - ((lhs[i][BB])[3][0]) * (lhs[i][CC])[0][3];
 3542|  47.9M|            (lhs[i][CC])[1][0] =
 3543|  47.9M|                (lhs[i][CC])[1][0] - ((lhs[i][BB])[3][0]) * (lhs[i][CC])[1][3];
 3544|  47.9M|            (lhs[i][CC])[2][0] =
 3545|  47.9M|                (lhs[i][CC])[2][0] - ((lhs[i][BB])[3][0]) * (lhs[i][CC])[2][3];
 3546|  47.9M|            (lhs[i][CC])[3][0] =
 3547|  47.9M|                (lhs[i][CC])[3][0] - ((lhs[i][BB])[3][0]) * (lhs[i][CC])[3][3];
 3548|  47.9M|            (lhs[i][CC])[4][0] =
 3549|  47.9M|                (lhs[i][CC])[4][0] - ((lhs[i][BB])[3][0]) * (lhs[i][CC])[4][3];
 3550|  47.9M|            (rhs[k][j][i])[0] =
 3551|  47.9M|                (rhs[k][j][i])[0] - ((lhs[i][BB])[3][0]) * (rhs[k][j][i])[3];
 3552|       |
 3553|  47.9M|            (lhs[i][BB])[4][1] =
 3554|  47.9M|                (lhs[i][BB])[4][1] - ((lhs[i][BB])[3][1]) * (lhs[i][BB])[4][3];
 3555|  47.9M|            (lhs[i][CC])[0][1] =
 3556|  47.9M|                (lhs[i][CC])[0][1] - ((lhs[i][BB])[3][1]) * (lhs[i][CC])[0][3];
 3557|  47.9M|            (lhs[i][CC])[1][1] =
 3558|  47.9M|                (lhs[i][CC])[1][1] - ((lhs[i][BB])[3][1]) * (lhs[i][CC])[1][3];
 3559|  47.9M|            (lhs[i][CC])[2][1] =
 3560|  47.9M|                (lhs[i][CC])[2][1] - ((lhs[i][BB])[3][1]) * (lhs[i][CC])[2][3];
 3561|  47.9M|            (lhs[i][CC])[3][1] =
 3562|  47.9M|                (lhs[i][CC])[3][1] - ((lhs[i][BB])[3][1]) * (lhs[i][CC])[3][3];
 3563|  47.9M|            (lhs[i][CC])[4][1] =
 3564|  47.9M|                (lhs[i][CC])[4][1] - ((lhs[i][BB])[3][1]) * (lhs[i][CC])[4][3];
 3565|  47.9M|            (rhs[k][j][i])[1] =
 3566|  47.9M|                (rhs[k][j][i])[1] - ((lhs[i][BB])[3][1]) * (rhs[k][j][i])[3];
 3567|       |
 3568|  47.9M|            (lhs[i][BB])[4][2] =
 3569|  47.9M|                (lhs[i][BB])[4][2] - ((lhs[i][BB])[3][2]) * (lhs[i][BB])[4][3];
 3570|  47.9M|            (lhs[i][CC])[0][2] =
 3571|  47.9M|                (lhs[i][CC])[0][2] - ((lhs[i][BB])[3][2]) * (lhs[i][CC])[0][3];
 3572|  47.9M|            (lhs[i][CC])[1][2] =
 3573|  47.9M|                (lhs[i][CC])[1][2] - ((lhs[i][BB])[3][2]) * (lhs[i][CC])[1][3];
 3574|  47.9M|            (lhs[i][CC])[2][2] =
 3575|  47.9M|                (lhs[i][CC])[2][2] - ((lhs[i][BB])[3][2]) * (lhs[i][CC])[2][3];
 3576|  47.9M|            (lhs[i][CC])[3][2] =
 3577|  47.9M|                (lhs[i][CC])[3][2] - ((lhs[i][BB])[3][2]) * (lhs[i][CC])[3][3];
 3578|  47.9M|            (lhs[i][CC])[4][2] =
 3579|  47.9M|                (lhs[i][CC])[4][2] - ((lhs[i][BB])[3][2]) * (lhs[i][CC])[4][3];
 3580|  47.9M|            (rhs[k][j][i])[2] =
 3581|  47.9M|                (rhs[k][j][i])[2] - ((lhs[i][BB])[3][2]) * (rhs[k][j][i])[3];
 3582|       |
 3583|  47.9M|            (lhs[i][BB])[4][4] =
 3584|  47.9M|                (lhs[i][BB])[4][4] - ((lhs[i][BB])[3][4]) * (lhs[i][BB])[4][3];
 3585|  47.9M|            (lhs[i][CC])[0][4] =
 3586|  47.9M|                (lhs[i][CC])[0][4] - ((lhs[i][BB])[3][4]) * (lhs[i][CC])[0][3];
 3587|  47.9M|            (lhs[i][CC])[1][4] =
 3588|  47.9M|                (lhs[i][CC])[1][4] - ((lhs[i][BB])[3][4]) * (lhs[i][CC])[1][3];
 3589|  47.9M|            (lhs[i][CC])[2][4] =
 3590|  47.9M|                (lhs[i][CC])[2][4] - ((lhs[i][BB])[3][4]) * (lhs[i][CC])[2][3];
 3591|  47.9M|            (lhs[i][CC])[3][4] =
 3592|  47.9M|                (lhs[i][CC])[3][4] - ((lhs[i][BB])[3][4]) * (lhs[i][CC])[3][3];
 3593|  47.9M|            (lhs[i][CC])[4][4] =
 3594|  47.9M|                (lhs[i][CC])[4][4] - ((lhs[i][BB])[3][4]) * (lhs[i][CC])[4][3];
 3595|  47.9M|            (rhs[k][j][i])[4] =
 3596|  47.9M|                (rhs[k][j][i])[4] - ((lhs[i][BB])[3][4]) * (rhs[k][j][i])[3];
 3597|       |
 3598|  47.9M|            (lhs[i][CC])[0][4] =
 3599|  47.9M|                (lhs[i][CC])[0][4] * (1.00 / (lhs[i][BB])[4][4]);
 3600|  47.9M|            (lhs[i][CC])[1][4] =
 3601|  47.9M|                (lhs[i][CC])[1][4] * (1.00 / (lhs[i][BB])[4][4]);
 3602|  47.9M|            (lhs[i][CC])[2][4] =
 3603|  47.9M|                (lhs[i][CC])[2][4] * (1.00 / (lhs[i][BB])[4][4]);
 3604|  47.9M|            (lhs[i][CC])[3][4] =
 3605|  47.9M|                (lhs[i][CC])[3][4] * (1.00 / (lhs[i][BB])[4][4]);
 3606|  47.9M|            (lhs[i][CC])[4][4] =
 3607|  47.9M|                (lhs[i][CC])[4][4] * (1.00 / (lhs[i][BB])[4][4]);
 3608|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] * (1.00 / (lhs[i][BB])[4][4]);
 3609|       |
 3610|  47.9M|            (lhs[i][CC])[0][0] =
 3611|  47.9M|                (lhs[i][CC])[0][0] - ((lhs[i][BB])[4][0]) * (lhs[i][CC])[0][4];
 3612|  47.9M|            (lhs[i][CC])[1][0] =
 3613|  47.9M|                (lhs[i][CC])[1][0] - ((lhs[i][BB])[4][0]) * (lhs[i][CC])[1][4];
 3614|  47.9M|            (lhs[i][CC])[2][0] =
 3615|  47.9M|                (lhs[i][CC])[2][0] - ((lhs[i][BB])[4][0]) * (lhs[i][CC])[2][4];
 3616|  47.9M|            (lhs[i][CC])[3][0] =
 3617|  47.9M|                (lhs[i][CC])[3][0] - ((lhs[i][BB])[4][0]) * (lhs[i][CC])[3][4];
 3618|  47.9M|            (lhs[i][CC])[4][0] =
 3619|  47.9M|                (lhs[i][CC])[4][0] - ((lhs[i][BB])[4][0]) * (lhs[i][CC])[4][4];
 3620|  47.9M|            (rhs[k][j][i])[0] =
 3621|  47.9M|                (rhs[k][j][i])[0] - ((lhs[i][BB])[4][0]) * (rhs[k][j][i])[4];
 3622|       |
 3623|  47.9M|            (lhs[i][CC])[0][1] =
 3624|  47.9M|                (lhs[i][CC])[0][1] - ((lhs[i][BB])[4][1]) * (lhs[i][CC])[0][4];
 3625|  47.9M|            (lhs[i][CC])[1][1] =
 3626|  47.9M|                (lhs[i][CC])[1][1] - ((lhs[i][BB])[4][1]) * (lhs[i][CC])[1][4];
 3627|  47.9M|            (lhs[i][CC])[2][1] =
 3628|  47.9M|                (lhs[i][CC])[2][1] - ((lhs[i][BB])[4][1]) * (lhs[i][CC])[2][4];
 3629|  47.9M|            (lhs[i][CC])[3][1] =
 3630|  47.9M|                (lhs[i][CC])[3][1] - ((lhs[i][BB])[4][1]) * (lhs[i][CC])[3][4];
 3631|  47.9M|            (lhs[i][CC])[4][1] =
 3632|  47.9M|                (lhs[i][CC])[4][1] - ((lhs[i][BB])[4][1]) * (lhs[i][CC])[4][4];
 3633|  47.9M|            (rhs[k][j][i])[1] =
 3634|  47.9M|                (rhs[k][j][i])[1] - ((lhs[i][BB])[4][1]) * (rhs[k][j][i])[4];
 3635|       |
 3636|  47.9M|            (lhs[i][CC])[0][2] =
 3637|  47.9M|                (lhs[i][CC])[0][2] - ((lhs[i][BB])[4][2]) * (lhs[i][CC])[0][4];
 3638|  47.9M|            (lhs[i][CC])[1][2] =
 3639|  47.9M|                (lhs[i][CC])[1][2] - ((lhs[i][BB])[4][2]) * (lhs[i][CC])[1][4];
 3640|  47.9M|            (lhs[i][CC])[2][2] =
 3641|  47.9M|                (lhs[i][CC])[2][2] - ((lhs[i][BB])[4][2]) * (lhs[i][CC])[2][4];
 3642|  47.9M|            (lhs[i][CC])[3][2] =
 3643|  47.9M|                (lhs[i][CC])[3][2] - ((lhs[i][BB])[4][2]) * (lhs[i][CC])[3][4];
 3644|  47.9M|            (lhs[i][CC])[4][2] =
 3645|  47.9M|                (lhs[i][CC])[4][2] - ((lhs[i][BB])[4][2]) * (lhs[i][CC])[4][4];
 3646|  47.9M|            (rhs[k][j][i])[2] =
 3647|  47.9M|                (rhs[k][j][i])[2] - ((lhs[i][BB])[4][2]) * (rhs[k][j][i])[4];
 3648|       |
 3649|  47.9M|            (lhs[i][CC])[0][3] =
 3650|  47.9M|                (lhs[i][CC])[0][3] - ((lhs[i][BB])[4][3]) * (lhs[i][CC])[0][4];
 3651|  47.9M|            (lhs[i][CC])[1][3] =
 3652|  47.9M|                (lhs[i][CC])[1][3] - ((lhs[i][BB])[4][3]) * (lhs[i][CC])[1][4];
 3653|  47.9M|            (lhs[i][CC])[2][3] =
 3654|  47.9M|                (lhs[i][CC])[2][3] - ((lhs[i][BB])[4][3]) * (lhs[i][CC])[2][4];
 3655|  47.9M|            (lhs[i][CC])[3][3] =
 3656|  47.9M|                (lhs[i][CC])[3][3] - ((lhs[i][BB])[4][3]) * (lhs[i][CC])[3][4];
 3657|  47.9M|            (lhs[i][CC])[4][3] =
 3658|  47.9M|                (lhs[i][CC])[4][3] - ((lhs[i][BB])[4][3]) * (lhs[i][CC])[4][4];
 3659|  47.9M|            (rhs[k][j][i])[3] =
 3660|  47.9M|                (rhs[k][j][i])[3] - ((lhs[i][BB])[4][3]) * (rhs[k][j][i])[4];
 3661|  47.9M|          }
 3662|  47.9M|        }
 3663|       |
 3664|       |        //---------------------------------------------------------------------
 3665|       |        // rhs(isize) = rhs(isize) - A*rhs(isize-1)
 3666|       |        //---------------------------------------------------------------------
 3667|       |        /* matvec_sub(lhs[isize][AA], rhs[k][j][isize - 1], rhs[k][j][isize]) is
 3668|       |         * inlined below */
 3669|       |        ////#pragma spf assert nomacro
 3670|   772k|        {
 3671|       |
 3672|       |          //---------------------------------------------------------------------
 3673|       |          // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 3674|       |          // $                  - lhs[ia][ablock][0][i]*
 3675|       |          //---------------------------------------------------------------------
 3676|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 3677|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] -
 3678|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3679|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[0] -
 3680|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3681|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[1] -
 3682|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3683|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[2] -
 3684|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3685|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[3] -
 3686|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3687|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[4];
 3688|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 3689|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] -
 3690|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 3691|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[0] -
 3692|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 3693|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[1] -
 3694|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 3695|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[2] -
 3696|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 3697|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[3] -
 3698|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 3699|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[4];
 3700|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 3701|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] -
 3702|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 3703|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[0] -
 3704|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 3705|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[1] -
 3706|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 3707|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[2] -
 3708|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 3709|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[3] -
 3710|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 3711|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[4];
 3712|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 3713|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] -
 3714|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 3715|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[0] -
 3716|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 3717|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[1] -
 3718|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 3719|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[2] -
 3720|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 3721|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[3] -
 3722|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 3723|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[4];
 3724|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 3725|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] -
 3726|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 3727|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[0] -
 3728|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 3729|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[1] -
 3730|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 3731|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[2] -
 3732|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 3733|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[3] -
 3734|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 3735|   772k|                  (rhs[k][j][(grid_points[0] - 1) - 1])[4];
 3736|   772k|        }
 3737|       |
 3738|       |        //---------------------------------------------------------------------
 3739|       |        // B(isize) = B(isize) - C(isize-1)*A(isize)
 3740|       |        //---------------------------------------------------------------------
 3741|       |        /* matmul_sub(lhs[isize][AA], lhs[isize - 1][CC], lhs[isize][BB]) is
 3742|       |         * inlined below */
 3743|       |        ////#pragma spf assert nomacro
 3744|   772k|        {
 3745|       |
 3746|   772k|          (lhs[(grid_points[0] - 1)][BB])[0][0] =
 3747|   772k|              (lhs[(grid_points[0] - 1)][BB])[0][0] -
 3748|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3749|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][0] -
 3750|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3751|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][1] -
 3752|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3753|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][2] -
 3754|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3755|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][3] -
 3756|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3757|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][4];
 3758|   772k|          (lhs[(grid_points[0] - 1)][BB])[0][1] =
 3759|   772k|              (lhs[(grid_points[0] - 1)][BB])[0][1] -
 3760|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 3761|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][0] -
 3762|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 3763|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][1] -
 3764|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 3765|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][2] -
 3766|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 3767|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][3] -
 3768|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 3769|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][4];
 3770|   772k|          (lhs[(grid_points[0] - 1)][BB])[0][2] =
 3771|   772k|              (lhs[(grid_points[0] - 1)][BB])[0][2] -
 3772|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 3773|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][0] -
 3774|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 3775|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][1] -
 3776|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 3777|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][2] -
 3778|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 3779|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][3] -
 3780|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 3781|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][4];
 3782|   772k|          (lhs[(grid_points[0] - 1)][BB])[0][3] =
 3783|   772k|              (lhs[(grid_points[0] - 1)][BB])[0][3] -
 3784|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 3785|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][0] -
 3786|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 3787|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][1] -
 3788|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 3789|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][2] -
 3790|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 3791|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][3] -
 3792|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 3793|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][4];
 3794|   772k|          (lhs[(grid_points[0] - 1)][BB])[0][4] =
 3795|   772k|              (lhs[(grid_points[0] - 1)][BB])[0][4] -
 3796|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 3797|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][0] -
 3798|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 3799|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][1] -
 3800|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 3801|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][2] -
 3802|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 3803|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][3] -
 3804|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 3805|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[0][4];
 3806|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][0] =
 3807|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][0] -
 3808|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3809|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][0] -
 3810|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3811|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][1] -
 3812|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3813|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][2] -
 3814|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3815|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][3] -
 3816|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3817|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][4];
 3818|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][1] =
 3819|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][1] -
 3820|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 3821|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][0] -
 3822|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 3823|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][1] -
 3824|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 3825|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][2] -
 3826|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 3827|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][3] -
 3828|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 3829|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][4];
 3830|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][2] =
 3831|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][2] -
 3832|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 3833|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][0] -
 3834|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 3835|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][1] -
 3836|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 3837|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][2] -
 3838|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 3839|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][3] -
 3840|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 3841|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][4];
 3842|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][3] =
 3843|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][3] -
 3844|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 3845|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][0] -
 3846|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 3847|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][1] -
 3848|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 3849|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][2] -
 3850|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 3851|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][3] -
 3852|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 3853|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][4];
 3854|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][4] =
 3855|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][4] -
 3856|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 3857|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][0] -
 3858|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 3859|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][1] -
 3860|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 3861|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][2] -
 3862|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 3863|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][3] -
 3864|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 3865|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[1][4];
 3866|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][0] =
 3867|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][0] -
 3868|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3869|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][0] -
 3870|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3871|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][1] -
 3872|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3873|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][2] -
 3874|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3875|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][3] -
 3876|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3877|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][4];
 3878|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][1] =
 3879|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][1] -
 3880|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 3881|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][0] -
 3882|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 3883|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][1] -
 3884|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 3885|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][2] -
 3886|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 3887|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][3] -
 3888|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 3889|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][4];
 3890|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][2] =
 3891|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][2] -
 3892|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 3893|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][0] -
 3894|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 3895|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][1] -
 3896|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 3897|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][2] -
 3898|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 3899|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][3] -
 3900|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 3901|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][4];
 3902|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][3] =
 3903|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][3] -
 3904|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 3905|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][0] -
 3906|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 3907|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][1] -
 3908|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 3909|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][2] -
 3910|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 3911|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][3] -
 3912|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 3913|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][4];
 3914|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][4] =
 3915|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][4] -
 3916|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 3917|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][0] -
 3918|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 3919|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][1] -
 3920|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 3921|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][2] -
 3922|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 3923|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][3] -
 3924|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 3925|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[2][4];
 3926|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][0] =
 3927|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][0] -
 3928|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3929|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][0] -
 3930|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3931|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][1] -
 3932|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3933|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][2] -
 3934|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3935|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][3] -
 3936|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3937|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][4];
 3938|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][1] =
 3939|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][1] -
 3940|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 3941|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][0] -
 3942|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 3943|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][1] -
 3944|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 3945|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][2] -
 3946|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 3947|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][3] -
 3948|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 3949|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][4];
 3950|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][2] =
 3951|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][2] -
 3952|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 3953|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][0] -
 3954|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 3955|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][1] -
 3956|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 3957|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][2] -
 3958|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 3959|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][3] -
 3960|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 3961|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][4];
 3962|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][3] =
 3963|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][3] -
 3964|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 3965|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][0] -
 3966|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 3967|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][1] -
 3968|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 3969|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][2] -
 3970|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 3971|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][3] -
 3972|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 3973|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][4];
 3974|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][4] =
 3975|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][4] -
 3976|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 3977|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][0] -
 3978|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 3979|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][1] -
 3980|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 3981|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][2] -
 3982|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 3983|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][3] -
 3984|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 3985|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[3][4];
 3986|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][0] =
 3987|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][0] -
 3988|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][0] *
 3989|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][0] -
 3990|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][0] *
 3991|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][1] -
 3992|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][0] *
 3993|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][2] -
 3994|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][0] *
 3995|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][3] -
 3996|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][0] *
 3997|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][4];
 3998|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][1] =
 3999|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][1] -
 4000|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][1] *
 4001|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][0] -
 4002|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][1] *
 4003|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][1] -
 4004|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][1] *
 4005|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][2] -
 4006|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][1] *
 4007|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][3] -
 4008|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][1] *
 4009|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][4];
 4010|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][2] =
 4011|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][2] -
 4012|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][2] *
 4013|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][0] -
 4014|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][2] *
 4015|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][1] -
 4016|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][2] *
 4017|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][2] -
 4018|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][2] *
 4019|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][3] -
 4020|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][2] *
 4021|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][4];
 4022|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][3] =
 4023|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][3] -
 4024|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][3] *
 4025|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][0] -
 4026|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][3] *
 4027|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][1] -
 4028|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][3] *
 4029|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][2] -
 4030|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][3] *
 4031|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][3] -
 4032|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][3] *
 4033|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][4];
 4034|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][4] =
 4035|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][4] -
 4036|   772k|              (lhs[(grid_points[0] - 1)][AA])[0][4] *
 4037|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][0] -
 4038|   772k|              (lhs[(grid_points[0] - 1)][AA])[1][4] *
 4039|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][1] -
 4040|   772k|              (lhs[(grid_points[0] - 1)][AA])[2][4] *
 4041|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][2] -
 4042|   772k|              (lhs[(grid_points[0] - 1)][AA])[3][4] *
 4043|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][3] -
 4044|   772k|              (lhs[(grid_points[0] - 1)][AA])[4][4] *
 4045|   772k|                  (lhs[(grid_points[0] - 1) - 1][CC])[4][4];
 4046|   772k|        }
 4047|       |
 4048|       |        //---------------------------------------------------------------------
 4049|       |        // multiply rhs() by b_inverse() and copy to rhs
 4050|       |        //---------------------------------------------------------------------
 4051|       |        /* binvrhs(lhs[isize][BB], rhs[k][j][isize]) is inlined below */
 4052|       |        ////#pragma spf assert nomacro
 4053|   772k|        {
 4054|       |
 4055|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][0] =
 4056|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][0] *
 4057|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[0][0]);
 4058|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][0] =
 4059|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][0] *
 4060|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[0][0]);
 4061|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][0] =
 4062|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][0] *
 4063|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[0][0]);
 4064|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][0] =
 4065|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][0] *
 4066|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[0][0]);
 4067|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 4068|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] *
 4069|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[0][0]);
 4070|       |
 4071|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][1] =
 4072|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][1] -
 4073|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][1]) *
 4074|   772k|                  (lhs[(grid_points[0] - 1)][BB])[1][0];
 4075|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][1] =
 4076|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][1] -
 4077|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][1]) *
 4078|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][0];
 4079|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][1] =
 4080|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][1] -
 4081|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][1]) *
 4082|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][0];
 4083|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][1] =
 4084|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][1] -
 4085|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][1]) *
 4086|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][0];
 4087|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 4088|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] -
 4089|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][1]) *
 4090|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[0];
 4091|       |
 4092|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][2] =
 4093|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][2] -
 4094|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][2]) *
 4095|   772k|                  (lhs[(grid_points[0] - 1)][BB])[1][0];
 4096|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][2] =
 4097|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][2] -
 4098|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][2]) *
 4099|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][0];
 4100|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][2] =
 4101|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][2] -
 4102|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][2]) *
 4103|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][0];
 4104|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][2] =
 4105|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][2] -
 4106|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][2]) *
 4107|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][0];
 4108|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 4109|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] -
 4110|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][2]) *
 4111|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[0];
 4112|       |
 4113|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][3] =
 4114|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][3] -
 4115|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][3]) *
 4116|   772k|                  (lhs[(grid_points[0] - 1)][BB])[1][0];
 4117|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][3] =
 4118|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][3] -
 4119|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][3]) *
 4120|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][0];
 4121|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][3] =
 4122|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][3] -
 4123|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][3]) *
 4124|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][0];
 4125|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][3] =
 4126|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][3] -
 4127|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][3]) *
 4128|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][0];
 4129|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 4130|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] -
 4131|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][3]) *
 4132|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[0];
 4133|       |
 4134|   772k|          (lhs[(grid_points[0] - 1)][BB])[1][4] =
 4135|   772k|              (lhs[(grid_points[0] - 1)][BB])[1][4] -
 4136|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][4]) *
 4137|   772k|                  (lhs[(grid_points[0] - 1)][BB])[1][0];
 4138|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][4] =
 4139|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][4] -
 4140|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][4]) *
 4141|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][0];
 4142|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][4] =
 4143|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][4] -
 4144|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][4]) *
 4145|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][0];
 4146|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][4] =
 4147|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][4] -
 4148|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][4]) *
 4149|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][0];
 4150|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 4151|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] -
 4152|   772k|              ((lhs[(grid_points[0] - 1)][BB])[0][4]) *
 4153|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[0];
 4154|       |
 4155|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][1] =
 4156|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][1] *
 4157|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[1][1]);
 4158|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][1] =
 4159|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][1] *
 4160|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[1][1]);
 4161|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][1] =
 4162|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][1] *
 4163|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[1][1]);
 4164|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 4165|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] *
 4166|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[1][1]);
 4167|       |
 4168|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][0] =
 4169|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][0] -
 4170|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][0]) *
 4171|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][1];
 4172|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][0] =
 4173|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][0] -
 4174|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][0]) *
 4175|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][1];
 4176|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][0] =
 4177|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][0] -
 4178|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][0]) *
 4179|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][1];
 4180|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 4181|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] -
 4182|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][0]) *
 4183|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[1];
 4184|       |
 4185|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][2] =
 4186|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][2] -
 4187|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][2]) *
 4188|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][1];
 4189|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][2] =
 4190|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][2] -
 4191|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][2]) *
 4192|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][1];
 4193|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][2] =
 4194|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][2] -
 4195|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][2]) *
 4196|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][1];
 4197|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 4198|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] -
 4199|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][2]) *
 4200|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[1];
 4201|       |
 4202|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][3] =
 4203|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][3] -
 4204|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][3]) *
 4205|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][1];
 4206|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][3] =
 4207|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][3] -
 4208|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][3]) *
 4209|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][1];
 4210|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][3] =
 4211|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][3] -
 4212|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][3]) *
 4213|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][1];
 4214|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 4215|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] -
 4216|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][3]) *
 4217|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[1];
 4218|       |
 4219|   772k|          (lhs[(grid_points[0] - 1)][BB])[2][4] =
 4220|   772k|              (lhs[(grid_points[0] - 1)][BB])[2][4] -
 4221|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][4]) *
 4222|   772k|                  (lhs[(grid_points[0] - 1)][BB])[2][1];
 4223|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][4] =
 4224|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][4] -
 4225|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][4]) *
 4226|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][1];
 4227|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][4] =
 4228|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][4] -
 4229|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][4]) *
 4230|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][1];
 4231|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 4232|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] -
 4233|   772k|              ((lhs[(grid_points[0] - 1)][BB])[1][4]) *
 4234|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[1];
 4235|       |
 4236|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][2] =
 4237|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][2] *
 4238|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[2][2]);
 4239|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][2] =
 4240|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][2] *
 4241|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[2][2]);
 4242|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 4243|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] *
 4244|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[2][2]);
 4245|       |
 4246|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][0] =
 4247|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][0] -
 4248|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][0]) *
 4249|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][2];
 4250|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][0] =
 4251|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][0] -
 4252|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][0]) *
 4253|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][2];
 4254|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 4255|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] -
 4256|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][0]) *
 4257|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[2];
 4258|       |
 4259|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][1] =
 4260|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][1] -
 4261|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][1]) *
 4262|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][2];
 4263|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][1] =
 4264|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][1] -
 4265|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][1]) *
 4266|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][2];
 4267|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 4268|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] -
 4269|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][1]) *
 4270|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[2];
 4271|       |
 4272|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][3] =
 4273|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][3] -
 4274|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][3]) *
 4275|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][2];
 4276|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][3] =
 4277|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][3] -
 4278|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][3]) *
 4279|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][2];
 4280|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 4281|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] -
 4282|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][3]) *
 4283|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[2];
 4284|       |
 4285|   772k|          (lhs[(grid_points[0] - 1)][BB])[3][4] =
 4286|   772k|              (lhs[(grid_points[0] - 1)][BB])[3][4] -
 4287|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][4]) *
 4288|   772k|                  (lhs[(grid_points[0] - 1)][BB])[3][2];
 4289|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][4] =
 4290|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][4] -
 4291|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][4]) *
 4292|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][2];
 4293|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 4294|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] -
 4295|   772k|              ((lhs[(grid_points[0] - 1)][BB])[2][4]) *
 4296|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[2];
 4297|       |
 4298|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][3] =
 4299|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][3] *
 4300|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[3][3]);
 4301|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 4302|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] *
 4303|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[3][3]);
 4304|       |
 4305|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][0] =
 4306|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][0] -
 4307|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][0]) *
 4308|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][3];
 4309|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 4310|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] -
 4311|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][0]) *
 4312|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[3];
 4313|       |
 4314|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][1] =
 4315|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][1] -
 4316|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][1]) *
 4317|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][3];
 4318|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 4319|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] -
 4320|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][1]) *
 4321|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[3];
 4322|       |
 4323|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][2] =
 4324|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][2] -
 4325|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][2]) *
 4326|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][3];
 4327|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 4328|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] -
 4329|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][2]) *
 4330|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[3];
 4331|       |
 4332|   772k|          (lhs[(grid_points[0] - 1)][BB])[4][4] =
 4333|   772k|              (lhs[(grid_points[0] - 1)][BB])[4][4] -
 4334|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][4]) *
 4335|   772k|                  (lhs[(grid_points[0] - 1)][BB])[4][3];
 4336|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 4337|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] -
 4338|   772k|              ((lhs[(grid_points[0] - 1)][BB])[3][4]) *
 4339|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[3];
 4340|       |
 4341|   772k|          (rhs[k][j][(grid_points[0] - 1)])[4] =
 4342|   772k|              (rhs[k][j][(grid_points[0] - 1)])[4] *
 4343|   772k|              (1.00 / (lhs[(grid_points[0] - 1)][BB])[4][4]);
 4344|       |
 4345|   772k|          (rhs[k][j][(grid_points[0] - 1)])[0] =
 4346|   772k|              (rhs[k][j][(grid_points[0] - 1)])[0] -
 4347|   772k|              ((lhs[(grid_points[0] - 1)][BB])[4][0]) *
 4348|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[4];
 4349|       |
 4350|   772k|          (rhs[k][j][(grid_points[0] - 1)])[1] =
 4351|   772k|              (rhs[k][j][(grid_points[0] - 1)])[1] -
 4352|   772k|              ((lhs[(grid_points[0] - 1)][BB])[4][1]) *
 4353|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[4];
 4354|       |
 4355|   772k|          (rhs[k][j][(grid_points[0] - 1)])[2] =
 4356|   772k|              (rhs[k][j][(grid_points[0] - 1)])[2] -
 4357|   772k|              ((lhs[(grid_points[0] - 1)][BB])[4][2]) *
 4358|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[4];
 4359|       |
 4360|   772k|          (rhs[k][j][(grid_points[0] - 1)])[3] =
 4361|   772k|              (rhs[k][j][(grid_points[0] - 1)])[3] -
 4362|   772k|              ((lhs[(grid_points[0] - 1)][BB])[4][3]) *
 4363|   772k|                  (rhs[k][j][(grid_points[0] - 1)])[4];
 4364|   772k|        }
 4365|       |
 4366|       |        //---------------------------------------------------------------------
 4367|       |        // back solve: if last cell, then generate U(isize)=rhs(isize)
 4368|       |        // else assume U(isize) is loaded in un pack backsub_info
 4369|       |        // so just use it
 4370|       |        // after u(istart) will be sent to next cell
 4371|       |        //---------------------------------------------------------------------
 4372|  49.4M|        for (i = (grid_points[0] - 1) - 1; i >= 0; i--) {
 4373|   292M|          for (m = 0; m < BLOCK_SIZE; m++) {
 4374|  1.46G|            for (n = 0; n < BLOCK_SIZE; n++) {
 4375|  1.21G|              rhs[k][j][i][m] =
 4376|  1.21G|                  rhs[k][j][i][m] - lhs[i][CC][n][m] * rhs[k][j][i + 1][n];
 4377|  1.21G|            }
 4378|   243M|          }
 4379|  48.6M|        }
 4380|   772k|      }
 4381|  12.4k|    }
 4382|    201|  }
 4383|    201|}
 4384|    201|  if (timeron)
 4385|      0|    timer_stop(t_xsolve);
 4386|    201|}
 4387|       |
 4388|       |//---------------------------------------------------------------------
 4389|       |// Performs line solves in Y direction by first factoring
 4390|       |// the block-tridiagonal matrix into an upper triangular matrix,
 4391|       |// and then performing back substitution to solve for the unknow
 4392|       |// vectors of each line.
 4393|       |//
 4394|       |// Make sure we treat elements zero to cell_size in the direction
 4395|       |// of the sweep.
 4396|       |//---------------------------------------------------------------------
 4397|    201|void y_solve() {
 4398|    201|  int i, j, k, m, n, jsize;
 4399|       |
 4400|       |  //---------------------------------------------------------------------
 4401|       |  //---------------------------------------------------------------------
 4402|       |
 4403|    201|  if (timeron)
 4404|      0|    timer_start(t_ysolve);
 4405|       |
 4406|       |  //---------------------------------------------------------------------
 4407|       |  //---------------------------------------------------------------------
 4408|       |
 4409|       |  //---------------------------------------------------------------------
 4410|       |  // This function computes the left hand side for the three y-factors
 4411|       |  //---------------------------------------------------------------------
 4412|       |
 4413|    201|  jsize = grid_points[1] - 1;
 4414|       |
 4415|       |//#pragma spf assert nomacro
 4416|    201|  {
 4417|       |    //---------------------------------------------------------------------
 4418|       |    // Compute the indices for storing the tri-diagonal matrix;
 4419|       |    // determine a (labeled f) and n jacobians for cell c
 4420|       |    //---------------------------------------------------------------------
 4421|    201|#pragma dvm region
 4422|    201|{
 4423|    201|#pragma dvm parallel ([k][i] on rhs[k][][i][]) \
 4424|    201|            private(fjac, i, j, lhs, m, n, njac, tmp1, tmp2, tmp3)
 4425|  12.6k|    for (k = 1; k <= grid_points[2] - 2; k++) {
 4426|   785k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 4427|  50.2M|        for (j = 0; j <= (grid_points[1] - 1); j++) {
 4428|  49.4M|          tmp1 = rho_i[k][j][i];
 4429|  49.4M|          tmp2 = tmp1 * tmp1;
 4430|  49.4M|          tmp3 = tmp1 * tmp2;
 4431|       |
 4432|  49.4M|          fjac[j][0][0] = 0.0;
 4433|  49.4M|          fjac[j][1][0] = 0.0;
 4434|  49.4M|          fjac[j][2][0] = 1.0;
 4435|  49.4M|          fjac[j][3][0] = 0.0;
 4436|  49.4M|          fjac[j][4][0] = 0.0;
 4437|       |
 4438|  49.4M|          fjac[j][0][1] = -(u[k][j][i][1] * u[k][j][i][2]) * tmp2;
 4439|  49.4M|          fjac[j][1][1] = u[k][j][i][2] * tmp1;
 4440|  49.4M|          fjac[j][2][1] = u[k][j][i][1] * tmp1;
 4441|  49.4M|          fjac[j][3][1] = 0.0;
 4442|  49.4M|          fjac[j][4][1] = 0.0;
 4443|       |
 4444|  49.4M|          fjac[j][0][2] =
 4445|  49.4M|              -(u[k][j][i][2] * u[k][j][i][2] * tmp2) + c2 * qs[k][j][i];
 4446|  49.4M|          fjac[j][1][2] = -c2 * u[k][j][i][1] * tmp1;
 4447|  49.4M|          fjac[j][2][2] = (2.0 - c2) * u[k][j][i][2] * tmp1;
 4448|  49.4M|          fjac[j][3][2] = -c2 * u[k][j][i][3] * tmp1;
 4449|  49.4M|          fjac[j][4][2] = c2;
 4450|       |
 4451|  49.4M|          fjac[j][0][3] = -(u[k][j][i][2] * u[k][j][i][3]) * tmp2;
 4452|  49.4M|          fjac[j][1][3] = 0.0;
 4453|  49.4M|          fjac[j][2][3] = u[k][j][i][3] * tmp1;
 4454|  49.4M|          fjac[j][3][3] = u[k][j][i][2] * tmp1;
 4455|  49.4M|          fjac[j][4][3] = 0.0;
 4456|       |
 4457|  49.4M|          fjac[j][0][4] = (c2 * 2.0 * square[k][j][i] - c1 * u[k][j][i][4]) *
 4458|  49.4M|                          u[k][j][i][2] * tmp2;
 4459|  49.4M|          fjac[j][1][4] = -c2 * u[k][j][i][1] * u[k][j][i][2] * tmp2;
 4460|  49.4M|          fjac[j][2][4] =
 4461|  49.4M|              c1 * u[k][j][i][4] * tmp1 -
 4462|  49.4M|              c2 * (qs[k][j][i] + u[k][j][i][2] * u[k][j][i][2] * tmp2);
 4463|  49.4M|          fjac[j][3][4] = -c2 * (u[k][j][i][2] * u[k][j][i][3]) * tmp2;
 4464|  49.4M|          fjac[j][4][4] = c1 * u[k][j][i][2] * tmp1;
 4465|       |
 4466|  49.4M|          njac[j][0][0] = 0.0;
 4467|  49.4M|          njac[j][1][0] = 0.0;
 4468|  49.4M|          njac[j][2][0] = 0.0;
 4469|  49.4M|          njac[j][3][0] = 0.0;
 4470|  49.4M|          njac[j][4][0] = 0.0;
 4471|       |
 4472|  49.4M|          njac[j][0][1] = -c3c4 * tmp2 * u[k][j][i][1];
 4473|  49.4M|          njac[j][1][1] = c3c4 * tmp1;
 4474|  49.4M|          njac[j][2][1] = 0.0;
 4475|  49.4M|          njac[j][3][1] = 0.0;
 4476|  49.4M|          njac[j][4][1] = 0.0;
 4477|       |
 4478|  49.4M|          njac[j][0][2] = -con43 * c3c4 * tmp2 * u[k][j][i][2];
 4479|  49.4M|          njac[j][1][2] = 0.0;
 4480|  49.4M|          njac[j][2][2] = con43 * c3c4 * tmp1;
 4481|  49.4M|          njac[j][3][2] = 0.0;
 4482|  49.4M|          njac[j][4][2] = 0.0;
 4483|       |
 4484|  49.4M|          njac[j][0][3] = -c3c4 * tmp2 * u[k][j][i][3];
 4485|  49.4M|          njac[j][1][3] = 0.0;
 4486|  49.4M|          njac[j][2][3] = 0.0;
 4487|  49.4M|          njac[j][3][3] = c3c4 * tmp1;
 4488|  49.4M|          njac[j][4][3] = 0.0;
 4489|       |
 4490|  49.4M|          njac[j][0][4] =
 4491|  49.4M|              -(c3c4 - c1345) * tmp3 * (u[k][j][i][1] * u[k][j][i][1]) -
 4492|  49.4M|              (con43 * c3c4 - c1345) * tmp3 * (u[k][j][i][2] * u[k][j][i][2]) -
 4493|  49.4M|              (c3c4 - c1345) * tmp3 * (u[k][j][i][3] * u[k][j][i][3]) -
 4494|  49.4M|              c1345 * tmp2 * u[k][j][i][4];
 4495|       |
 4496|  49.4M|          njac[j][1][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][1];
 4497|  49.4M|          njac[j][2][4] = (con43 * c3c4 - c1345) * tmp2 * u[k][j][i][2];
 4498|  49.4M|          njac[j][3][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][3];
 4499|  49.4M|          njac[j][4][4] = (c1345)*tmp1;
 4500|  49.4M|        }
 4501|       |
 4502|       |        //---------------------------------------------------------------------
 4503|       |        // now joacobians set, so form left hand side in y direction
 4504|       |        //---------------------------------------------------------------------
 4505|       |        /* lhsinit(lhs, jsize) is inlined below */
 4506|       |//#pragma spf assert nomacro
 4507|   772k|        {
 4508|       |
 4509|   772k|          int size1 = jsize;
 4510|   772k|          int i, m, n;
 4511|       |
 4512|   772k|          i = size1;
 4513|       |          //---------------------------------------------------------------------
 4514|       |          // zero the whole left hand side for starters
 4515|       |          //---------------------------------------------------------------------
 4516|  4.63M|          for (n = 0; n < 5; n++) {
 4517|  23.1M|            for (m = 0; m < 5; m++) {
 4518|  19.3M|              lhs[0][0][n][m] = 0.0;
 4519|  19.3M|              lhs[0][1][n][m] = 0.0;
 4520|  19.3M|              lhs[0][2][n][m] = 0.0;
 4521|  19.3M|              lhs[(grid_points[1] - 1)][0][n][m] = 0.0;
 4522|  19.3M|              lhs[(grid_points[1] - 1)][1][n][m] = 0.0;
 4523|  19.3M|              lhs[(grid_points[1] - 1)][2][n][m] = 0.0;
 4524|  19.3M|            }
 4525|  3.86M|          }
 4526|       |
 4527|       |          //---------------------------------------------------------------------
 4528|       |          // next, set all diagonal values to 1. This is overkill, but
 4529|       |          // convenient
 4530|       |          //---------------------------------------------------------------------
 4531|  4.63M|          for (m = 0; m < 5; m++) {
 4532|  3.86M|            lhs[0][1][m][m] = 1.0;
 4533|  3.86M|            lhs[(grid_points[1] - 1)][1][m][m] = 1.0;
 4534|  3.86M|          }
 4535|   772k|        }
 4536|       |
 4537|  48.6M|        for (j = 1; j <= (grid_points[1] - 1) - 1; j++) {
 4538|  47.9M|          tmp1 = dt * ty1;
 4539|  47.9M|          tmp2 = dt * ty2;
 4540|       |
 4541|  47.9M|          lhs[j][AA][0][0] =
 4542|  47.9M|              -tmp2 * fjac[j - 1][0][0] - tmp1 * njac[j - 1][0][0] - tmp1 * dy1;
 4543|  47.9M|          lhs[j][AA][1][0] =
 4544|  47.9M|              -tmp2 * fjac[j - 1][1][0] - tmp1 * njac[j - 1][1][0];
 4545|  47.9M|          lhs[j][AA][2][0] =
 4546|  47.9M|              -tmp2 * fjac[j - 1][2][0] - tmp1 * njac[j - 1][2][0];
 4547|  47.9M|          lhs[j][AA][3][0] =
 4548|  47.9M|              -tmp2 * fjac[j - 1][3][0] - tmp1 * njac[j - 1][3][0];
 4549|  47.9M|          lhs[j][AA][4][0] =
 4550|  47.9M|              -tmp2 * fjac[j - 1][4][0] - tmp1 * njac[j - 1][4][0];
 4551|       |
 4552|  47.9M|          lhs[j][AA][0][1] =
 4553|  47.9M|              -tmp2 * fjac[j - 1][0][1] - tmp1 * njac[j - 1][0][1];
 4554|  47.9M|          lhs[j][AA][1][1] =
 4555|  47.9M|              -tmp2 * fjac[j - 1][1][1] - tmp1 * njac[j - 1][1][1] - tmp1 * dy2;
 4556|  47.9M|          lhs[j][AA][2][1] =
 4557|  47.9M|              -tmp2 * fjac[j - 1][2][1] - tmp1 * njac[j - 1][2][1];
 4558|  47.9M|          lhs[j][AA][3][1] =
 4559|  47.9M|              -tmp2 * fjac[j - 1][3][1] - tmp1 * njac[j - 1][3][1];
 4560|  47.9M|          lhs[j][AA][4][1] =
 4561|  47.9M|              -tmp2 * fjac[j - 1][4][1] - tmp1 * njac[j - 1][4][1];
 4562|       |
 4563|  47.9M|          lhs[j][AA][0][2] =
 4564|  47.9M|              -tmp2 * fjac[j - 1][0][2] - tmp1 * njac[j - 1][0][2];
 4565|  47.9M|          lhs[j][AA][1][2] =
 4566|  47.9M|              -tmp2 * fjac[j - 1][1][2] - tmp1 * njac[j - 1][1][2];
 4567|  47.9M|          lhs[j][AA][2][2] =
 4568|  47.9M|              -tmp2 * fjac[j - 1][2][2] - tmp1 * njac[j - 1][2][2] - tmp1 * dy3;
 4569|  47.9M|          lhs[j][AA][3][2] =
 4570|  47.9M|              -tmp2 * fjac[j - 1][3][2] - tmp1 * njac[j - 1][3][2];
 4571|  47.9M|          lhs[j][AA][4][2] =
 4572|  47.9M|              -tmp2 * fjac[j - 1][4][2] - tmp1 * njac[j - 1][4][2];
 4573|       |
 4574|  47.9M|          lhs[j][AA][0][3] =
 4575|  47.9M|              -tmp2 * fjac[j - 1][0][3] - tmp1 * njac[j - 1][0][3];
 4576|  47.9M|          lhs[j][AA][1][3] =
 4577|  47.9M|              -tmp2 * fjac[j - 1][1][3] - tmp1 * njac[j - 1][1][3];
 4578|  47.9M|          lhs[j][AA][2][3] =
 4579|  47.9M|              -tmp2 * fjac[j - 1][2][3] - tmp1 * njac[j - 1][2][3];
 4580|  47.9M|          lhs[j][AA][3][3] =
 4581|  47.9M|              -tmp2 * fjac[j - 1][3][3] - tmp1 * njac[j - 1][3][3] - tmp1 * dy4;
 4582|  47.9M|          lhs[j][AA][4][3] =
 4583|  47.9M|              -tmp2 * fjac[j - 1][4][3] - tmp1 * njac[j - 1][4][3];
 4584|       |
 4585|  47.9M|          lhs[j][AA][0][4] =
 4586|  47.9M|              -tmp2 * fjac[j - 1][0][4] - tmp1 * njac[j - 1][0][4];
 4587|  47.9M|          lhs[j][AA][1][4] =
 4588|  47.9M|              -tmp2 * fjac[j - 1][1][4] - tmp1 * njac[j - 1][1][4];
 4589|  47.9M|          lhs[j][AA][2][4] =
 4590|  47.9M|              -tmp2 * fjac[j - 1][2][4] - tmp1 * njac[j - 1][2][4];
 4591|  47.9M|          lhs[j][AA][3][4] =
 4592|  47.9M|              -tmp2 * fjac[j - 1][3][4] - tmp1 * njac[j - 1][3][4];
 4593|  47.9M|          lhs[j][AA][4][4] =
 4594|  47.9M|              -tmp2 * fjac[j - 1][4][4] - tmp1 * njac[j - 1][4][4] - tmp1 * dy5;
 4595|       |
 4596|  47.9M|          lhs[j][BB][0][0] =
 4597|  47.9M|              1.0 + tmp1 * 2.0 * njac[j][0][0] + tmp1 * 2.0 * dy1;
 4598|  47.9M|          lhs[j][BB][1][0] = tmp1 * 2.0 * njac[j][1][0];
 4599|  47.9M|          lhs[j][BB][2][0] = tmp1 * 2.0 * njac[j][2][0];
 4600|  47.9M|          lhs[j][BB][3][0] = tmp1 * 2.0 * njac[j][3][0];
 4601|  47.9M|          lhs[j][BB][4][0] = tmp1 * 2.0 * njac[j][4][0];
 4602|       |
 4603|  47.9M|          lhs[j][BB][0][1] = tmp1 * 2.0 * njac[j][0][1];
 4604|  47.9M|          lhs[j][BB][1][1] =
 4605|  47.9M|              1.0 + tmp1 * 2.0 * njac[j][1][1] + tmp1 * 2.0 * dy2;
 4606|  47.9M|          lhs[j][BB][2][1] = tmp1 * 2.0 * njac[j][2][1];
 4607|  47.9M|          lhs[j][BB][3][1] = tmp1 * 2.0 * njac[j][3][1];
 4608|  47.9M|          lhs[j][BB][4][1] = tmp1 * 2.0 * njac[j][4][1];
 4609|       |
 4610|  47.9M|          lhs[j][BB][0][2] = tmp1 * 2.0 * njac[j][0][2];
 4611|  47.9M|          lhs[j][BB][1][2] = tmp1 * 2.0 * njac[j][1][2];
 4612|  47.9M|          lhs[j][BB][2][2] =
 4613|  47.9M|              1.0 + tmp1 * 2.0 * njac[j][2][2] + tmp1 * 2.0 * dy3;
 4614|  47.9M|          lhs[j][BB][3][2] = tmp1 * 2.0 * njac[j][3][2];
 4615|  47.9M|          lhs[j][BB][4][2] = tmp1 * 2.0 * njac[j][4][2];
 4616|       |
 4617|  47.9M|          lhs[j][BB][0][3] = tmp1 * 2.0 * njac[j][0][3];
 4618|  47.9M|          lhs[j][BB][1][3] = tmp1 * 2.0 * njac[j][1][3];
 4619|  47.9M|          lhs[j][BB][2][3] = tmp1 * 2.0 * njac[j][2][3];
 4620|  47.9M|          lhs[j][BB][3][3] =
 4621|  47.9M|              1.0 + tmp1 * 2.0 * njac[j][3][3] + tmp1 * 2.0 * dy4;
 4622|  47.9M|          lhs[j][BB][4][3] = tmp1 * 2.0 * njac[j][4][3];
 4623|       |
 4624|  47.9M|          lhs[j][BB][0][4] = tmp1 * 2.0 * njac[j][0][4];
 4625|  47.9M|          lhs[j][BB][1][4] = tmp1 * 2.0 * njac[j][1][4];
 4626|  47.9M|          lhs[j][BB][2][4] = tmp1 * 2.0 * njac[j][2][4];
 4627|  47.9M|          lhs[j][BB][3][4] = tmp1 * 2.0 * njac[j][3][4];
 4628|  47.9M|          lhs[j][BB][4][4] =
 4629|  47.9M|              1.0 + tmp1 * 2.0 * njac[j][4][4] + tmp1 * 2.0 * dy5;
 4630|       |
 4631|  47.9M|          lhs[j][CC][0][0] =
 4632|  47.9M|              tmp2 * fjac[j + 1][0][0] - tmp1 * njac[j + 1][0][0] - tmp1 * dy1;
 4633|  47.9M|          lhs[j][CC][1][0] =
 4634|  47.9M|              tmp2 * fjac[j + 1][1][0] - tmp1 * njac[j + 1][1][0];
 4635|  47.9M|          lhs[j][CC][2][0] =
 4636|  47.9M|              tmp2 * fjac[j + 1][2][0] - tmp1 * njac[j + 1][2][0];
 4637|  47.9M|          lhs[j][CC][3][0] =
 4638|  47.9M|              tmp2 * fjac[j + 1][3][0] - tmp1 * njac[j + 1][3][0];
 4639|  47.9M|          lhs[j][CC][4][0] =
 4640|  47.9M|              tmp2 * fjac[j + 1][4][0] - tmp1 * njac[j + 1][4][0];
 4641|       |
 4642|  47.9M|          lhs[j][CC][0][1] =
 4643|  47.9M|              tmp2 * fjac[j + 1][0][1] - tmp1 * njac[j + 1][0][1];
 4644|  47.9M|          lhs[j][CC][1][1] =
 4645|  47.9M|              tmp2 * fjac[j + 1][1][1] - tmp1 * njac[j + 1][1][1] - tmp1 * dy2;
 4646|  47.9M|          lhs[j][CC][2][1] =
 4647|  47.9M|              tmp2 * fjac[j + 1][2][1] - tmp1 * njac[j + 1][2][1];
 4648|  47.9M|          lhs[j][CC][3][1] =
 4649|  47.9M|              tmp2 * fjac[j + 1][3][1] - tmp1 * njac[j + 1][3][1];
 4650|  47.9M|          lhs[j][CC][4][1] =
 4651|  47.9M|              tmp2 * fjac[j + 1][4][1] - tmp1 * njac[j + 1][4][1];
 4652|       |
 4653|  47.9M|          lhs[j][CC][0][2] =
 4654|  47.9M|              tmp2 * fjac[j + 1][0][2] - tmp1 * njac[j + 1][0][2];
 4655|  47.9M|          lhs[j][CC][1][2] =
 4656|  47.9M|              tmp2 * fjac[j + 1][1][2] - tmp1 * njac[j + 1][1][2];
 4657|  47.9M|          lhs[j][CC][2][2] =
 4658|  47.9M|              tmp2 * fjac[j + 1][2][2] - tmp1 * njac[j + 1][2][2] - tmp1 * dy3;
 4659|  47.9M|          lhs[j][CC][3][2] =
 4660|  47.9M|              tmp2 * fjac[j + 1][3][2] - tmp1 * njac[j + 1][3][2];
 4661|  47.9M|          lhs[j][CC][4][2] =
 4662|  47.9M|              tmp2 * fjac[j + 1][4][2] - tmp1 * njac[j + 1][4][2];
 4663|       |
 4664|  47.9M|          lhs[j][CC][0][3] =
 4665|  47.9M|              tmp2 * fjac[j + 1][0][3] - tmp1 * njac[j + 1][0][3];
 4666|  47.9M|          lhs[j][CC][1][3] =
 4667|  47.9M|              tmp2 * fjac[j + 1][1][3] - tmp1 * njac[j + 1][1][3];
 4668|  47.9M|          lhs[j][CC][2][3] =
 4669|  47.9M|              tmp2 * fjac[j + 1][2][3] - tmp1 * njac[j + 1][2][3];
 4670|  47.9M|          lhs[j][CC][3][3] =
 4671|  47.9M|              tmp2 * fjac[j + 1][3][3] - tmp1 * njac[j + 1][3][3] - tmp1 * dy4;
 4672|  47.9M|          lhs[j][CC][4][3] =
 4673|  47.9M|              tmp2 * fjac[j + 1][4][3] - tmp1 * njac[j + 1][4][3];
 4674|       |
 4675|  47.9M|          lhs[j][CC][0][4] =
 4676|  47.9M|              tmp2 * fjac[j + 1][0][4] - tmp1 * njac[j + 1][0][4];
 4677|  47.9M|          lhs[j][CC][1][4] =
 4678|  47.9M|              tmp2 * fjac[j + 1][1][4] - tmp1 * njac[j + 1][1][4];
 4679|  47.9M|          lhs[j][CC][2][4] =
 4680|  47.9M|              tmp2 * fjac[j + 1][2][4] - tmp1 * njac[j + 1][2][4];
 4681|  47.9M|          lhs[j][CC][3][4] =
 4682|  47.9M|              tmp2 * fjac[j + 1][3][4] - tmp1 * njac[j + 1][3][4];
 4683|  47.9M|          lhs[j][CC][4][4] =
 4684|  47.9M|              tmp2 * fjac[j + 1][4][4] - tmp1 * njac[j + 1][4][4] - tmp1 * dy5;
 4685|  47.9M|        }
 4686|       |
 4687|       |        //---------------------------------------------------------------------
 4688|       |        //---------------------------------------------------------------------
 4689|       |
 4690|       |        //---------------------------------------------------------------------
 4691|       |        // performs guaussian elimination on this cell.
 4692|       |        //
 4693|       |        // assumes that unpacking routines for non-first cells
 4694|       |        // preload C' and rhs' from previous cell.
 4695|       |        //
 4696|       |        // assumed send happens outside this routine, but that
 4697|       |        // c'(JMAX) and rhs'(JMAX) will be sent to next cell
 4698|       |        //---------------------------------------------------------------------
 4699|       |
 4700|       |        //---------------------------------------------------------------------
 4701|       |        // multiply c[k][0][i] by b_inverse and copy back to c
 4702|       |        // multiply rhs(0) by b_inverse(0) and copy to rhs
 4703|       |        //---------------------------------------------------------------------
 4704|       |        /* binvcrhs(lhs[0][BB], lhs[0][CC], rhs[k][0][i]) is inlined below */
 4705|       |//#pragma spf assert nomacro
 4706|   772k|        {
 4707|       |
 4708|   772k|          lhs[0][1][1][0] = lhs[0][1][1][0] * (1.00 / lhs[0][1][0][0]);
 4709|   772k|          lhs[0][1][2][0] = lhs[0][1][2][0] * (1.00 / lhs[0][1][0][0]);
 4710|   772k|          lhs[0][1][3][0] = lhs[0][1][3][0] * (1.00 / lhs[0][1][0][0]);
 4711|   772k|          lhs[0][1][4][0] = lhs[0][1][4][0] * (1.00 / lhs[0][1][0][0]);
 4712|   772k|          lhs[0][2][0][0] = lhs[0][2][0][0] * (1.00 / lhs[0][1][0][0]);
 4713|   772k|          lhs[0][2][1][0] = lhs[0][2][1][0] * (1.00 / lhs[0][1][0][0]);
 4714|   772k|          lhs[0][2][2][0] = lhs[0][2][2][0] * (1.00 / lhs[0][1][0][0]);
 4715|   772k|          lhs[0][2][3][0] = lhs[0][2][3][0] * (1.00 / lhs[0][1][0][0]);
 4716|   772k|          lhs[0][2][4][0] = lhs[0][2][4][0] * (1.00 / lhs[0][1][0][0]);
 4717|   772k|          (rhs[k][0][i])[0] = (rhs[k][0][i])[0] * (1.00 / lhs[0][1][0][0]);
 4718|       |
 4719|   772k|          lhs[0][1][1][1] =
 4720|   772k|              lhs[0][1][1][1] - (lhs[0][1][0][1]) * lhs[0][1][1][0];
 4721|   772k|          lhs[0][1][2][1] =
 4722|   772k|              lhs[0][1][2][1] - (lhs[0][1][0][1]) * lhs[0][1][2][0];
 4723|   772k|          lhs[0][1][3][1] =
 4724|   772k|              lhs[0][1][3][1] - (lhs[0][1][0][1]) * lhs[0][1][3][0];
 4725|   772k|          lhs[0][1][4][1] =
 4726|   772k|              lhs[0][1][4][1] - (lhs[0][1][0][1]) * lhs[0][1][4][0];
 4727|   772k|          lhs[0][2][0][1] =
 4728|   772k|              lhs[0][2][0][1] - (lhs[0][1][0][1]) * lhs[0][2][0][0];
 4729|   772k|          lhs[0][2][1][1] =
 4730|   772k|              lhs[0][2][1][1] - (lhs[0][1][0][1]) * lhs[0][2][1][0];
 4731|   772k|          lhs[0][2][2][1] =
 4732|   772k|              lhs[0][2][2][1] - (lhs[0][1][0][1]) * lhs[0][2][2][0];
 4733|   772k|          lhs[0][2][3][1] =
 4734|   772k|              lhs[0][2][3][1] - (lhs[0][1][0][1]) * lhs[0][2][3][0];
 4735|   772k|          lhs[0][2][4][1] =
 4736|   772k|              lhs[0][2][4][1] - (lhs[0][1][0][1]) * lhs[0][2][4][0];
 4737|   772k|          (rhs[k][0][i])[1] =
 4738|   772k|              (rhs[k][0][i])[1] - (lhs[0][1][0][1]) * (rhs[k][0][i])[0];
 4739|       |
 4740|   772k|          lhs[0][1][1][2] =
 4741|   772k|              lhs[0][1][1][2] - (lhs[0][1][0][2]) * lhs[0][1][1][0];
 4742|   772k|          lhs[0][1][2][2] =
 4743|   772k|              lhs[0][1][2][2] - (lhs[0][1][0][2]) * lhs[0][1][2][0];
 4744|   772k|          lhs[0][1][3][2] =
 4745|   772k|              lhs[0][1][3][2] - (lhs[0][1][0][2]) * lhs[0][1][3][0];
 4746|   772k|          lhs[0][1][4][2] =
 4747|   772k|              lhs[0][1][4][2] - (lhs[0][1][0][2]) * lhs[0][1][4][0];
 4748|   772k|          lhs[0][2][0][2] =
 4749|   772k|              lhs[0][2][0][2] - (lhs[0][1][0][2]) * lhs[0][2][0][0];
 4750|   772k|          lhs[0][2][1][2] =
 4751|   772k|              lhs[0][2][1][2] - (lhs[0][1][0][2]) * lhs[0][2][1][0];
 4752|   772k|          lhs[0][2][2][2] =
 4753|   772k|              lhs[0][2][2][2] - (lhs[0][1][0][2]) * lhs[0][2][2][0];
 4754|   772k|          lhs[0][2][3][2] =
 4755|   772k|              lhs[0][2][3][2] - (lhs[0][1][0][2]) * lhs[0][2][3][0];
 4756|   772k|          lhs[0][2][4][2] =
 4757|   772k|              lhs[0][2][4][2] - (lhs[0][1][0][2]) * lhs[0][2][4][0];
 4758|   772k|          (rhs[k][0][i])[2] =
 4759|   772k|              (rhs[k][0][i])[2] - (lhs[0][1][0][2]) * (rhs[k][0][i])[0];
 4760|       |
 4761|   772k|          lhs[0][1][1][3] =
 4762|   772k|              lhs[0][1][1][3] - (lhs[0][1][0][3]) * lhs[0][1][1][0];
 4763|   772k|          lhs[0][1][2][3] =
 4764|   772k|              lhs[0][1][2][3] - (lhs[0][1][0][3]) * lhs[0][1][2][0];
 4765|   772k|          lhs[0][1][3][3] =
 4766|   772k|              lhs[0][1][3][3] - (lhs[0][1][0][3]) * lhs[0][1][3][0];
 4767|   772k|          lhs[0][1][4][3] =
 4768|   772k|              lhs[0][1][4][3] - (lhs[0][1][0][3]) * lhs[0][1][4][0];
 4769|   772k|          lhs[0][2][0][3] =
 4770|   772k|              lhs[0][2][0][3] - (lhs[0][1][0][3]) * lhs[0][2][0][0];
 4771|   772k|          lhs[0][2][1][3] =
 4772|   772k|              lhs[0][2][1][3] - (lhs[0][1][0][3]) * lhs[0][2][1][0];
 4773|   772k|          lhs[0][2][2][3] =
 4774|   772k|              lhs[0][2][2][3] - (lhs[0][1][0][3]) * lhs[0][2][2][0];
 4775|   772k|          lhs[0][2][3][3] =
 4776|   772k|              lhs[0][2][3][3] - (lhs[0][1][0][3]) * lhs[0][2][3][0];
 4777|   772k|          lhs[0][2][4][3] =
 4778|   772k|              lhs[0][2][4][3] - (lhs[0][1][0][3]) * lhs[0][2][4][0];
 4779|   772k|          (rhs[k][0][i])[3] =
 4780|   772k|              (rhs[k][0][i])[3] - (lhs[0][1][0][3]) * (rhs[k][0][i])[0];
 4781|       |
 4782|   772k|          lhs[0][1][1][4] =
 4783|   772k|              lhs[0][1][1][4] - (lhs[0][1][0][4]) * lhs[0][1][1][0];
 4784|   772k|          lhs[0][1][2][4] =
 4785|   772k|              lhs[0][1][2][4] - (lhs[0][1][0][4]) * lhs[0][1][2][0];
 4786|   772k|          lhs[0][1][3][4] =
 4787|   772k|              lhs[0][1][3][4] - (lhs[0][1][0][4]) * lhs[0][1][3][0];
 4788|   772k|          lhs[0][1][4][4] =
 4789|   772k|              lhs[0][1][4][4] - (lhs[0][1][0][4]) * lhs[0][1][4][0];
 4790|   772k|          lhs[0][2][0][4] =
 4791|   772k|              lhs[0][2][0][4] - (lhs[0][1][0][4]) * lhs[0][2][0][0];
 4792|   772k|          lhs[0][2][1][4] =
 4793|   772k|              lhs[0][2][1][4] - (lhs[0][1][0][4]) * lhs[0][2][1][0];
 4794|   772k|          lhs[0][2][2][4] =
 4795|   772k|              lhs[0][2][2][4] - (lhs[0][1][0][4]) * lhs[0][2][2][0];
 4796|   772k|          lhs[0][2][3][4] =
 4797|   772k|              lhs[0][2][3][4] - (lhs[0][1][0][4]) * lhs[0][2][3][0];
 4798|   772k|          lhs[0][2][4][4] =
 4799|   772k|              lhs[0][2][4][4] - (lhs[0][1][0][4]) * lhs[0][2][4][0];
 4800|   772k|          (rhs[k][0][i])[4] =
 4801|   772k|              (rhs[k][0][i])[4] - (lhs[0][1][0][4]) * (rhs[k][0][i])[0];
 4802|       |
 4803|   772k|          lhs[0][1][2][1] = lhs[0][1][2][1] * (1.00 / lhs[0][1][1][1]);
 4804|   772k|          lhs[0][1][3][1] = lhs[0][1][3][1] * (1.00 / lhs[0][1][1][1]);
 4805|   772k|          lhs[0][1][4][1] = lhs[0][1][4][1] * (1.00 / lhs[0][1][1][1]);
 4806|   772k|          lhs[0][2][0][1] = lhs[0][2][0][1] * (1.00 / lhs[0][1][1][1]);
 4807|   772k|          lhs[0][2][1][1] = lhs[0][2][1][1] * (1.00 / lhs[0][1][1][1]);
 4808|   772k|          lhs[0][2][2][1] = lhs[0][2][2][1] * (1.00 / lhs[0][1][1][1]);
 4809|   772k|          lhs[0][2][3][1] = lhs[0][2][3][1] * (1.00 / lhs[0][1][1][1]);
 4810|   772k|          lhs[0][2][4][1] = lhs[0][2][4][1] * (1.00 / lhs[0][1][1][1]);
 4811|   772k|          (rhs[k][0][i])[1] = (rhs[k][0][i])[1] * (1.00 / lhs[0][1][1][1]);
 4812|       |
 4813|   772k|          lhs[0][1][2][0] =
 4814|   772k|              lhs[0][1][2][0] - (lhs[0][1][1][0]) * lhs[0][1][2][1];
 4815|   772k|          lhs[0][1][3][0] =
 4816|   772k|              lhs[0][1][3][0] - (lhs[0][1][1][0]) * lhs[0][1][3][1];
 4817|   772k|          lhs[0][1][4][0] =
 4818|   772k|              lhs[0][1][4][0] - (lhs[0][1][1][0]) * lhs[0][1][4][1];
 4819|   772k|          lhs[0][2][0][0] =
 4820|   772k|              lhs[0][2][0][0] - (lhs[0][1][1][0]) * lhs[0][2][0][1];
 4821|   772k|          lhs[0][2][1][0] =
 4822|   772k|              lhs[0][2][1][0] - (lhs[0][1][1][0]) * lhs[0][2][1][1];
 4823|   772k|          lhs[0][2][2][0] =
 4824|   772k|              lhs[0][2][2][0] - (lhs[0][1][1][0]) * lhs[0][2][2][1];
 4825|   772k|          lhs[0][2][3][0] =
 4826|   772k|              lhs[0][2][3][0] - (lhs[0][1][1][0]) * lhs[0][2][3][1];
 4827|   772k|          lhs[0][2][4][0] =
 4828|   772k|              lhs[0][2][4][0] - (lhs[0][1][1][0]) * lhs[0][2][4][1];
 4829|   772k|          (rhs[k][0][i])[0] =
 4830|   772k|              (rhs[k][0][i])[0] - (lhs[0][1][1][0]) * (rhs[k][0][i])[1];
 4831|       |
 4832|   772k|          lhs[0][1][2][2] =
 4833|   772k|              lhs[0][1][2][2] - (lhs[0][1][1][2]) * lhs[0][1][2][1];
 4834|   772k|          lhs[0][1][3][2] =
 4835|   772k|              lhs[0][1][3][2] - (lhs[0][1][1][2]) * lhs[0][1][3][1];
 4836|   772k|          lhs[0][1][4][2] =
 4837|   772k|              lhs[0][1][4][2] - (lhs[0][1][1][2]) * lhs[0][1][4][1];
 4838|   772k|          lhs[0][2][0][2] =
 4839|   772k|              lhs[0][2][0][2] - (lhs[0][1][1][2]) * lhs[0][2][0][1];
 4840|   772k|          lhs[0][2][1][2] =
 4841|   772k|              lhs[0][2][1][2] - (lhs[0][1][1][2]) * lhs[0][2][1][1];
 4842|   772k|          lhs[0][2][2][2] =
 4843|   772k|              lhs[0][2][2][2] - (lhs[0][1][1][2]) * lhs[0][2][2][1];
 4844|   772k|          lhs[0][2][3][2] =
 4845|   772k|              lhs[0][2][3][2] - (lhs[0][1][1][2]) * lhs[0][2][3][1];
 4846|   772k|          lhs[0][2][4][2] =
 4847|   772k|              lhs[0][2][4][2] - (lhs[0][1][1][2]) * lhs[0][2][4][1];
 4848|   772k|          (rhs[k][0][i])[2] =
 4849|   772k|              (rhs[k][0][i])[2] - (lhs[0][1][1][2]) * (rhs[k][0][i])[1];
 4850|       |
 4851|   772k|          lhs[0][1][2][3] =
 4852|   772k|              lhs[0][1][2][3] - (lhs[0][1][1][3]) * lhs[0][1][2][1];
 4853|   772k|          lhs[0][1][3][3] =
 4854|   772k|              lhs[0][1][3][3] - (lhs[0][1][1][3]) * lhs[0][1][3][1];
 4855|   772k|          lhs[0][1][4][3] =
 4856|   772k|              lhs[0][1][4][3] - (lhs[0][1][1][3]) * lhs[0][1][4][1];
 4857|   772k|          lhs[0][2][0][3] =
 4858|   772k|              lhs[0][2][0][3] - (lhs[0][1][1][3]) * lhs[0][2][0][1];
 4859|   772k|          lhs[0][2][1][3] =
 4860|   772k|              lhs[0][2][1][3] - (lhs[0][1][1][3]) * lhs[0][2][1][1];
 4861|   772k|          lhs[0][2][2][3] =
 4862|   772k|              lhs[0][2][2][3] - (lhs[0][1][1][3]) * lhs[0][2][2][1];
 4863|   772k|          lhs[0][2][3][3] =
 4864|   772k|              lhs[0][2][3][3] - (lhs[0][1][1][3]) * lhs[0][2][3][1];
 4865|   772k|          lhs[0][2][4][3] =
 4866|   772k|              lhs[0][2][4][3] - (lhs[0][1][1][3]) * lhs[0][2][4][1];
 4867|   772k|          (rhs[k][0][i])[3] =
 4868|   772k|              (rhs[k][0][i])[3] - (lhs[0][1][1][3]) * (rhs[k][0][i])[1];
 4869|       |
 4870|   772k|          lhs[0][1][2][4] =
 4871|   772k|              lhs[0][1][2][4] - (lhs[0][1][1][4]) * lhs[0][1][2][1];
 4872|   772k|          lhs[0][1][3][4] =
 4873|   772k|              lhs[0][1][3][4] - (lhs[0][1][1][4]) * lhs[0][1][3][1];
 4874|   772k|          lhs[0][1][4][4] =
 4875|   772k|              lhs[0][1][4][4] - (lhs[0][1][1][4]) * lhs[0][1][4][1];
 4876|   772k|          lhs[0][2][0][4] =
 4877|   772k|              lhs[0][2][0][4] - (lhs[0][1][1][4]) * lhs[0][2][0][1];
 4878|   772k|          lhs[0][2][1][4] =
 4879|   772k|              lhs[0][2][1][4] - (lhs[0][1][1][4]) * lhs[0][2][1][1];
 4880|   772k|          lhs[0][2][2][4] =
 4881|   772k|              lhs[0][2][2][4] - (lhs[0][1][1][4]) * lhs[0][2][2][1];
 4882|   772k|          lhs[0][2][3][4] =
 4883|   772k|              lhs[0][2][3][4] - (lhs[0][1][1][4]) * lhs[0][2][3][1];
 4884|   772k|          lhs[0][2][4][4] =
 4885|   772k|              lhs[0][2][4][4] - (lhs[0][1][1][4]) * lhs[0][2][4][1];
 4886|   772k|          (rhs[k][0][i])[4] =
 4887|   772k|              (rhs[k][0][i])[4] - (lhs[0][1][1][4]) * (rhs[k][0][i])[1];
 4888|       |
 4889|   772k|          lhs[0][1][3][2] = lhs[0][1][3][2] * (1.00 / lhs[0][1][2][2]);
 4890|   772k|          lhs[0][1][4][2] = lhs[0][1][4][2] * (1.00 / lhs[0][1][2][2]);
 4891|   772k|          lhs[0][2][0][2] = lhs[0][2][0][2] * (1.00 / lhs[0][1][2][2]);
 4892|   772k|          lhs[0][2][1][2] = lhs[0][2][1][2] * (1.00 / lhs[0][1][2][2]);
 4893|   772k|          lhs[0][2][2][2] = lhs[0][2][2][2] * (1.00 / lhs[0][1][2][2]);
 4894|   772k|          lhs[0][2][3][2] = lhs[0][2][3][2] * (1.00 / lhs[0][1][2][2]);
 4895|   772k|          lhs[0][2][4][2] = lhs[0][2][4][2] * (1.00 / lhs[0][1][2][2]);
 4896|   772k|          (rhs[k][0][i])[2] = (rhs[k][0][i])[2] * (1.00 / lhs[0][1][2][2]);
 4897|       |
 4898|   772k|          lhs[0][1][3][0] =
 4899|   772k|              lhs[0][1][3][0] - (lhs[0][1][2][0]) * lhs[0][1][3][2];
 4900|   772k|          lhs[0][1][4][0] =
 4901|   772k|              lhs[0][1][4][0] - (lhs[0][1][2][0]) * lhs[0][1][4][2];
 4902|   772k|          lhs[0][2][0][0] =
 4903|   772k|              lhs[0][2][0][0] - (lhs[0][1][2][0]) * lhs[0][2][0][2];
 4904|   772k|          lhs[0][2][1][0] =
 4905|   772k|              lhs[0][2][1][0] - (lhs[0][1][2][0]) * lhs[0][2][1][2];
 4906|   772k|          lhs[0][2][2][0] =
 4907|   772k|              lhs[0][2][2][0] - (lhs[0][1][2][0]) * lhs[0][2][2][2];
 4908|   772k|          lhs[0][2][3][0] =
 4909|   772k|              lhs[0][2][3][0] - (lhs[0][1][2][0]) * lhs[0][2][3][2];
 4910|   772k|          lhs[0][2][4][0] =
 4911|   772k|              lhs[0][2][4][0] - (lhs[0][1][2][0]) * lhs[0][2][4][2];
 4912|   772k|          (rhs[k][0][i])[0] =
 4913|   772k|              (rhs[k][0][i])[0] - (lhs[0][1][2][0]) * (rhs[k][0][i])[2];
 4914|       |
 4915|   772k|          lhs[0][1][3][1] =
 4916|   772k|              lhs[0][1][3][1] - (lhs[0][1][2][1]) * lhs[0][1][3][2];
 4917|   772k|          lhs[0][1][4][1] =
 4918|   772k|              lhs[0][1][4][1] - (lhs[0][1][2][1]) * lhs[0][1][4][2];
 4919|   772k|          lhs[0][2][0][1] =
 4920|   772k|              lhs[0][2][0][1] - (lhs[0][1][2][1]) * lhs[0][2][0][2];
 4921|   772k|          lhs[0][2][1][1] =
 4922|   772k|              lhs[0][2][1][1] - (lhs[0][1][2][1]) * lhs[0][2][1][2];
 4923|   772k|          lhs[0][2][2][1] =
 4924|   772k|              lhs[0][2][2][1] - (lhs[0][1][2][1]) * lhs[0][2][2][2];
 4925|   772k|          lhs[0][2][3][1] =
 4926|   772k|              lhs[0][2][3][1] - (lhs[0][1][2][1]) * lhs[0][2][3][2];
 4927|   772k|          lhs[0][2][4][1] =
 4928|   772k|              lhs[0][2][4][1] - (lhs[0][1][2][1]) * lhs[0][2][4][2];
 4929|   772k|          (rhs[k][0][i])[1] =
 4930|   772k|              (rhs[k][0][i])[1] - (lhs[0][1][2][1]) * (rhs[k][0][i])[2];
 4931|       |
 4932|   772k|          lhs[0][1][3][3] =
 4933|   772k|              lhs[0][1][3][3] - (lhs[0][1][2][3]) * lhs[0][1][3][2];
 4934|   772k|          lhs[0][1][4][3] =
 4935|   772k|              lhs[0][1][4][3] - (lhs[0][1][2][3]) * lhs[0][1][4][2];
 4936|   772k|          lhs[0][2][0][3] =
 4937|   772k|              lhs[0][2][0][3] - (lhs[0][1][2][3]) * lhs[0][2][0][2];
 4938|   772k|          lhs[0][2][1][3] =
 4939|   772k|              lhs[0][2][1][3] - (lhs[0][1][2][3]) * lhs[0][2][1][2];
 4940|   772k|          lhs[0][2][2][3] =
 4941|   772k|              lhs[0][2][2][3] - (lhs[0][1][2][3]) * lhs[0][2][2][2];
 4942|   772k|          lhs[0][2][3][3] =
 4943|   772k|              lhs[0][2][3][3] - (lhs[0][1][2][3]) * lhs[0][2][3][2];
 4944|   772k|          lhs[0][2][4][3] =
 4945|   772k|              lhs[0][2][4][3] - (lhs[0][1][2][3]) * lhs[0][2][4][2];
 4946|   772k|          (rhs[k][0][i])[3] =
 4947|   772k|              (rhs[k][0][i])[3] - (lhs[0][1][2][3]) * (rhs[k][0][i])[2];
 4948|       |
 4949|   772k|          lhs[0][1][3][4] =
 4950|   772k|              lhs[0][1][3][4] - (lhs[0][1][2][4]) * lhs[0][1][3][2];
 4951|   772k|          lhs[0][1][4][4] =
 4952|   772k|              lhs[0][1][4][4] - (lhs[0][1][2][4]) * lhs[0][1][4][2];
 4953|   772k|          lhs[0][2][0][4] =
 4954|   772k|              lhs[0][2][0][4] - (lhs[0][1][2][4]) * lhs[0][2][0][2];
 4955|   772k|          lhs[0][2][1][4] =
 4956|   772k|              lhs[0][2][1][4] - (lhs[0][1][2][4]) * lhs[0][2][1][2];
 4957|   772k|          lhs[0][2][2][4] =
 4958|   772k|              lhs[0][2][2][4] - (lhs[0][1][2][4]) * lhs[0][2][2][2];
 4959|   772k|          lhs[0][2][3][4] =
 4960|   772k|              lhs[0][2][3][4] - (lhs[0][1][2][4]) * lhs[0][2][3][2];
 4961|   772k|          lhs[0][2][4][4] =
 4962|   772k|              lhs[0][2][4][4] - (lhs[0][1][2][4]) * lhs[0][2][4][2];
 4963|   772k|          (rhs[k][0][i])[4] =
 4964|   772k|              (rhs[k][0][i])[4] - (lhs[0][1][2][4]) * (rhs[k][0][i])[2];
 4965|       |
 4966|   772k|          lhs[0][1][4][3] = lhs[0][1][4][3] * (1.00 / lhs[0][1][3][3]);
 4967|   772k|          lhs[0][2][0][3] = lhs[0][2][0][3] * (1.00 / lhs[0][1][3][3]);
 4968|   772k|          lhs[0][2][1][3] = lhs[0][2][1][3] * (1.00 / lhs[0][1][3][3]);
 4969|   772k|          lhs[0][2][2][3] = lhs[0][2][2][3] * (1.00 / lhs[0][1][3][3]);
 4970|   772k|          lhs[0][2][3][3] = lhs[0][2][3][3] * (1.00 / lhs[0][1][3][3]);
 4971|   772k|          lhs[0][2][4][3] = lhs[0][2][4][3] * (1.00 / lhs[0][1][3][3]);
 4972|   772k|          (rhs[k][0][i])[3] = (rhs[k][0][i])[3] * (1.00 / lhs[0][1][3][3]);
 4973|       |
 4974|   772k|          lhs[0][1][4][0] =
 4975|   772k|              lhs[0][1][4][0] - (lhs[0][1][3][0]) * lhs[0][1][4][3];
 4976|   772k|          lhs[0][2][0][0] =
 4977|   772k|              lhs[0][2][0][0] - (lhs[0][1][3][0]) * lhs[0][2][0][3];
 4978|   772k|          lhs[0][2][1][0] =
 4979|   772k|              lhs[0][2][1][0] - (lhs[0][1][3][0]) * lhs[0][2][1][3];
 4980|   772k|          lhs[0][2][2][0] =
 4981|   772k|              lhs[0][2][2][0] - (lhs[0][1][3][0]) * lhs[0][2][2][3];
 4982|   772k|          lhs[0][2][3][0] =
 4983|   772k|              lhs[0][2][3][0] - (lhs[0][1][3][0]) * lhs[0][2][3][3];
 4984|   772k|          lhs[0][2][4][0] =
 4985|   772k|              lhs[0][2][4][0] - (lhs[0][1][3][0]) * lhs[0][2][4][3];
 4986|   772k|          (rhs[k][0][i])[0] =
 4987|   772k|              (rhs[k][0][i])[0] - (lhs[0][1][3][0]) * (rhs[k][0][i])[3];
 4988|       |
 4989|   772k|          lhs[0][1][4][1] =
 4990|   772k|              lhs[0][1][4][1] - (lhs[0][1][3][1]) * lhs[0][1][4][3];
 4991|   772k|          lhs[0][2][0][1] =
 4992|   772k|              lhs[0][2][0][1] - (lhs[0][1][3][1]) * lhs[0][2][0][3];
 4993|   772k|          lhs[0][2][1][1] =
 4994|   772k|              lhs[0][2][1][1] - (lhs[0][1][3][1]) * lhs[0][2][1][3];
 4995|   772k|          lhs[0][2][2][1] =
 4996|   772k|              lhs[0][2][2][1] - (lhs[0][1][3][1]) * lhs[0][2][2][3];
 4997|   772k|          lhs[0][2][3][1] =
 4998|   772k|              lhs[0][2][3][1] - (lhs[0][1][3][1]) * lhs[0][2][3][3];
 4999|   772k|          lhs[0][2][4][1] =
 5000|   772k|              lhs[0][2][4][1] - (lhs[0][1][3][1]) * lhs[0][2][4][3];
 5001|   772k|          (rhs[k][0][i])[1] =
 5002|   772k|              (rhs[k][0][i])[1] - (lhs[0][1][3][1]) * (rhs[k][0][i])[3];
 5003|       |
 5004|   772k|          lhs[0][1][4][2] =
 5005|   772k|              lhs[0][1][4][2] - (lhs[0][1][3][2]) * lhs[0][1][4][3];
 5006|   772k|          lhs[0][2][0][2] =
 5007|   772k|              lhs[0][2][0][2] - (lhs[0][1][3][2]) * lhs[0][2][0][3];
 5008|   772k|          lhs[0][2][1][2] =
 5009|   772k|              lhs[0][2][1][2] - (lhs[0][1][3][2]) * lhs[0][2][1][3];
 5010|   772k|          lhs[0][2][2][2] =
 5011|   772k|              lhs[0][2][2][2] - (lhs[0][1][3][2]) * lhs[0][2][2][3];
 5012|   772k|          lhs[0][2][3][2] =
 5013|   772k|              lhs[0][2][3][2] - (lhs[0][1][3][2]) * lhs[0][2][3][3];
 5014|   772k|          lhs[0][2][4][2] =
 5015|   772k|              lhs[0][2][4][2] - (lhs[0][1][3][2]) * lhs[0][2][4][3];
 5016|   772k|          (rhs[k][0][i])[2] =
 5017|   772k|              (rhs[k][0][i])[2] - (lhs[0][1][3][2]) * (rhs[k][0][i])[3];
 5018|       |
 5019|   772k|          lhs[0][1][4][4] =
 5020|   772k|              lhs[0][1][4][4] - (lhs[0][1][3][4]) * lhs[0][1][4][3];
 5021|   772k|          lhs[0][2][0][4] =
 5022|   772k|              lhs[0][2][0][4] - (lhs[0][1][3][4]) * lhs[0][2][0][3];
 5023|   772k|          lhs[0][2][1][4] =
 5024|   772k|              lhs[0][2][1][4] - (lhs[0][1][3][4]) * lhs[0][2][1][3];
 5025|   772k|          lhs[0][2][2][4] =
 5026|   772k|              lhs[0][2][2][4] - (lhs[0][1][3][4]) * lhs[0][2][2][3];
 5027|   772k|          lhs[0][2][3][4] =
 5028|   772k|              lhs[0][2][3][4] - (lhs[0][1][3][4]) * lhs[0][2][3][3];
 5029|   772k|          lhs[0][2][4][4] =
 5030|   772k|              lhs[0][2][4][4] - (lhs[0][1][3][4]) * lhs[0][2][4][3];
 5031|   772k|          (rhs[k][0][i])[4] =
 5032|   772k|              (rhs[k][0][i])[4] - (lhs[0][1][3][4]) * (rhs[k][0][i])[3];
 5033|       |
 5034|   772k|          lhs[0][2][0][4] = lhs[0][2][0][4] * (1.00 / lhs[0][1][4][4]);
 5035|   772k|          lhs[0][2][1][4] = lhs[0][2][1][4] * (1.00 / lhs[0][1][4][4]);
 5036|   772k|          lhs[0][2][2][4] = lhs[0][2][2][4] * (1.00 / lhs[0][1][4][4]);
 5037|   772k|          lhs[0][2][3][4] = lhs[0][2][3][4] * (1.00 / lhs[0][1][4][4]);
 5038|   772k|          lhs[0][2][4][4] = lhs[0][2][4][4] * (1.00 / lhs[0][1][4][4]);
 5039|   772k|          (rhs[k][0][i])[4] = (rhs[k][0][i])[4] * (1.00 / lhs[0][1][4][4]);
 5040|       |
 5041|   772k|          lhs[0][2][0][0] =
 5042|   772k|              lhs[0][2][0][0] - (lhs[0][1][4][0]) * lhs[0][2][0][4];
 5043|   772k|          lhs[0][2][1][0] =
 5044|   772k|              lhs[0][2][1][0] - (lhs[0][1][4][0]) * lhs[0][2][1][4];
 5045|   772k|          lhs[0][2][2][0] =
 5046|   772k|              lhs[0][2][2][0] - (lhs[0][1][4][0]) * lhs[0][2][2][4];
 5047|   772k|          lhs[0][2][3][0] =
 5048|   772k|              lhs[0][2][3][0] - (lhs[0][1][4][0]) * lhs[0][2][3][4];
 5049|   772k|          lhs[0][2][4][0] =
 5050|   772k|              lhs[0][2][4][0] - (lhs[0][1][4][0]) * lhs[0][2][4][4];
 5051|   772k|          (rhs[k][0][i])[0] =
 5052|   772k|              (rhs[k][0][i])[0] - (lhs[0][1][4][0]) * (rhs[k][0][i])[4];
 5053|       |
 5054|   772k|          lhs[0][2][0][1] =
 5055|   772k|              lhs[0][2][0][1] - (lhs[0][1][4][1]) * lhs[0][2][0][4];
 5056|   772k|          lhs[0][2][1][1] =
 5057|   772k|              lhs[0][2][1][1] - (lhs[0][1][4][1]) * lhs[0][2][1][4];
 5058|   772k|          lhs[0][2][2][1] =
 5059|   772k|              lhs[0][2][2][1] - (lhs[0][1][4][1]) * lhs[0][2][2][4];
 5060|   772k|          lhs[0][2][3][1] =
 5061|   772k|              lhs[0][2][3][1] - (lhs[0][1][4][1]) * lhs[0][2][3][4];
 5062|   772k|          lhs[0][2][4][1] =
 5063|   772k|              lhs[0][2][4][1] - (lhs[0][1][4][1]) * lhs[0][2][4][4];
 5064|   772k|          (rhs[k][0][i])[1] =
 5065|   772k|              (rhs[k][0][i])[1] - (lhs[0][1][4][1]) * (rhs[k][0][i])[4];
 5066|       |
 5067|   772k|          lhs[0][2][0][2] =
 5068|   772k|              lhs[0][2][0][2] - (lhs[0][1][4][2]) * lhs[0][2][0][4];
 5069|   772k|          lhs[0][2][1][2] =
 5070|   772k|              lhs[0][2][1][2] - (lhs[0][1][4][2]) * lhs[0][2][1][4];
 5071|   772k|          lhs[0][2][2][2] =
 5072|   772k|              lhs[0][2][2][2] - (lhs[0][1][4][2]) * lhs[0][2][2][4];
 5073|   772k|          lhs[0][2][3][2] =
 5074|   772k|              lhs[0][2][3][2] - (lhs[0][1][4][2]) * lhs[0][2][3][4];
 5075|   772k|          lhs[0][2][4][2] =
 5076|   772k|              lhs[0][2][4][2] - (lhs[0][1][4][2]) * lhs[0][2][4][4];
 5077|   772k|          (rhs[k][0][i])[2] =
 5078|   772k|              (rhs[k][0][i])[2] - (lhs[0][1][4][2]) * (rhs[k][0][i])[4];
 5079|       |
 5080|   772k|          lhs[0][2][0][3] =
 5081|   772k|              lhs[0][2][0][3] - (lhs[0][1][4][3]) * lhs[0][2][0][4];
 5082|   772k|          lhs[0][2][1][3] =
 5083|   772k|              lhs[0][2][1][3] - (lhs[0][1][4][3]) * lhs[0][2][1][4];
 5084|   772k|          lhs[0][2][2][3] =
 5085|   772k|              lhs[0][2][2][3] - (lhs[0][1][4][3]) * lhs[0][2][2][4];
 5086|   772k|          lhs[0][2][3][3] =
 5087|   772k|              lhs[0][2][3][3] - (lhs[0][1][4][3]) * lhs[0][2][3][4];
 5088|   772k|          lhs[0][2][4][3] =
 5089|   772k|              lhs[0][2][4][3] - (lhs[0][1][4][3]) * lhs[0][2][4][4];
 5090|   772k|          (rhs[k][0][i])[3] =
 5091|   772k|              (rhs[k][0][i])[3] - (lhs[0][1][4][3]) * (rhs[k][0][i])[4];
 5092|   772k|        }
 5093|       |
 5094|       |        //---------------------------------------------------------------------
 5095|       |        // begin inner most do loop
 5096|       |        // do all the elements of the cell unless last
 5097|       |        //---------------------------------------------------------------------
 5098|  48.6M|        for (j = 1; j <= (grid_points[1] - 1) - 1; j++) {
 5099|       |          //-------------------------------------------------------------------
 5100|       |          // subtract A*lhs_vector(j-1) from lhs_vector(j)
 5101|       |          //
 5102|       |          // rhs(j) = rhs(j) - A*rhs(j-1)
 5103|       |          //-------------------------------------------------------------------
 5104|       |          /* matvec_sub(lhs[j][AA], rhs[k][j - 1][i], rhs[k][j][i]) is inlined
 5105|       |           * below */
 5106|       |//#pragma spf assert nomacro
 5107|  47.9M|          {
 5108|       |
 5109|       |            //---------------------------------------------------------------------
 5110|       |            // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 5111|       |            // $                  - lhs[ia][ablock][0][i]*
 5112|       |            //---------------------------------------------------------------------
 5113|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] -
 5114|  47.9M|                                (lhs[j][AA])[0][0] * (rhs[k][j - 1][i])[0] -
 5115|  47.9M|                                (lhs[j][AA])[1][0] * (rhs[k][j - 1][i])[1] -
 5116|  47.9M|                                (lhs[j][AA])[2][0] * (rhs[k][j - 1][i])[2] -
 5117|  47.9M|                                (lhs[j][AA])[3][0] * (rhs[k][j - 1][i])[3] -
 5118|  47.9M|                                (lhs[j][AA])[4][0] * (rhs[k][j - 1][i])[4];
 5119|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] -
 5120|  47.9M|                                (lhs[j][AA])[0][1] * (rhs[k][j - 1][i])[0] -
 5121|  47.9M|                                (lhs[j][AA])[1][1] * (rhs[k][j - 1][i])[1] -
 5122|  47.9M|                                (lhs[j][AA])[2][1] * (rhs[k][j - 1][i])[2] -
 5123|  47.9M|                                (lhs[j][AA])[3][1] * (rhs[k][j - 1][i])[3] -
 5124|  47.9M|                                (lhs[j][AA])[4][1] * (rhs[k][j - 1][i])[4];
 5125|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] -
 5126|  47.9M|                                (lhs[j][AA])[0][2] * (rhs[k][j - 1][i])[0] -
 5127|  47.9M|                                (lhs[j][AA])[1][2] * (rhs[k][j - 1][i])[1] -
 5128|  47.9M|                                (lhs[j][AA])[2][2] * (rhs[k][j - 1][i])[2] -
 5129|  47.9M|                                (lhs[j][AA])[3][2] * (rhs[k][j - 1][i])[3] -
 5130|  47.9M|                                (lhs[j][AA])[4][2] * (rhs[k][j - 1][i])[4];
 5131|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] -
 5132|  47.9M|                                (lhs[j][AA])[0][3] * (rhs[k][j - 1][i])[0] -
 5133|  47.9M|                                (lhs[j][AA])[1][3] * (rhs[k][j - 1][i])[1] -
 5134|  47.9M|                                (lhs[j][AA])[2][3] * (rhs[k][j - 1][i])[2] -
 5135|  47.9M|                                (lhs[j][AA])[3][3] * (rhs[k][j - 1][i])[3] -
 5136|  47.9M|                                (lhs[j][AA])[4][3] * (rhs[k][j - 1][i])[4];
 5137|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] -
 5138|  47.9M|                                (lhs[j][AA])[0][4] * (rhs[k][j - 1][i])[0] -
 5139|  47.9M|                                (lhs[j][AA])[1][4] * (rhs[k][j - 1][i])[1] -
 5140|  47.9M|                                (lhs[j][AA])[2][4] * (rhs[k][j - 1][i])[2] -
 5141|  47.9M|                                (lhs[j][AA])[3][4] * (rhs[k][j - 1][i])[3] -
 5142|  47.9M|                                (lhs[j][AA])[4][4] * (rhs[k][j - 1][i])[4];
 5143|  47.9M|          }
 5144|       |
 5145|       |          //-------------------------------------------------------------------
 5146|       |          // B(j) = B(j) - C(j-1)*A(j)
 5147|       |          //-------------------------------------------------------------------
 5148|       |          /* matmul_sub(lhs[j][AA], lhs[j - 1][CC], lhs[j][BB]) is inlined below
 5149|       |           */
 5150|       |//#pragma spf assert nomacro
 5151|  47.9M|          {
 5152|       |
 5153|  47.9M|            (lhs[j][BB])[0][0] = (lhs[j][BB])[0][0] -
 5154|  47.9M|                                 (lhs[j][AA])[0][0] * (lhs[j - 1][CC])[0][0] -
 5155|  47.9M|                                 (lhs[j][AA])[1][0] * (lhs[j - 1][CC])[0][1] -
 5156|  47.9M|                                 (lhs[j][AA])[2][0] * (lhs[j - 1][CC])[0][2] -
 5157|  47.9M|                                 (lhs[j][AA])[3][0] * (lhs[j - 1][CC])[0][3] -
 5158|  47.9M|                                 (lhs[j][AA])[4][0] * (lhs[j - 1][CC])[0][4];
 5159|  47.9M|            (lhs[j][BB])[0][1] = (lhs[j][BB])[0][1] -
 5160|  47.9M|                                 (lhs[j][AA])[0][1] * (lhs[j - 1][CC])[0][0] -
 5161|  47.9M|                                 (lhs[j][AA])[1][1] * (lhs[j - 1][CC])[0][1] -
 5162|  47.9M|                                 (lhs[j][AA])[2][1] * (lhs[j - 1][CC])[0][2] -
 5163|  47.9M|                                 (lhs[j][AA])[3][1] * (lhs[j - 1][CC])[0][3] -
 5164|  47.9M|                                 (lhs[j][AA])[4][1] * (lhs[j - 1][CC])[0][4];
 5165|  47.9M|            (lhs[j][BB])[0][2] = (lhs[j][BB])[0][2] -
 5166|  47.9M|                                 (lhs[j][AA])[0][2] * (lhs[j - 1][CC])[0][0] -
 5167|  47.9M|                                 (lhs[j][AA])[1][2] * (lhs[j - 1][CC])[0][1] -
 5168|  47.9M|                                 (lhs[j][AA])[2][2] * (lhs[j - 1][CC])[0][2] -
 5169|  47.9M|                                 (lhs[j][AA])[3][2] * (lhs[j - 1][CC])[0][3] -
 5170|  47.9M|                                 (lhs[j][AA])[4][2] * (lhs[j - 1][CC])[0][4];
 5171|  47.9M|            (lhs[j][BB])[0][3] = (lhs[j][BB])[0][3] -
 5172|  47.9M|                                 (lhs[j][AA])[0][3] * (lhs[j - 1][CC])[0][0] -
 5173|  47.9M|                                 (lhs[j][AA])[1][3] * (lhs[j - 1][CC])[0][1] -
 5174|  47.9M|                                 (lhs[j][AA])[2][3] * (lhs[j - 1][CC])[0][2] -
 5175|  47.9M|                                 (lhs[j][AA])[3][3] * (lhs[j - 1][CC])[0][3] -
 5176|  47.9M|                                 (lhs[j][AA])[4][3] * (lhs[j - 1][CC])[0][4];
 5177|  47.9M|            (lhs[j][BB])[0][4] = (lhs[j][BB])[0][4] -
 5178|  47.9M|                                 (lhs[j][AA])[0][4] * (lhs[j - 1][CC])[0][0] -
 5179|  47.9M|                                 (lhs[j][AA])[1][4] * (lhs[j - 1][CC])[0][1] -
 5180|  47.9M|                                 (lhs[j][AA])[2][4] * (lhs[j - 1][CC])[0][2] -
 5181|  47.9M|                                 (lhs[j][AA])[3][4] * (lhs[j - 1][CC])[0][3] -
 5182|  47.9M|                                 (lhs[j][AA])[4][4] * (lhs[j - 1][CC])[0][4];
 5183|  47.9M|            (lhs[j][BB])[1][0] = (lhs[j][BB])[1][0] -
 5184|  47.9M|                                 (lhs[j][AA])[0][0] * (lhs[j - 1][CC])[1][0] -
 5185|  47.9M|                                 (lhs[j][AA])[1][0] * (lhs[j - 1][CC])[1][1] -
 5186|  47.9M|                                 (lhs[j][AA])[2][0] * (lhs[j - 1][CC])[1][2] -
 5187|  47.9M|                                 (lhs[j][AA])[3][0] * (lhs[j - 1][CC])[1][3] -
 5188|  47.9M|                                 (lhs[j][AA])[4][0] * (lhs[j - 1][CC])[1][4];
 5189|  47.9M|            (lhs[j][BB])[1][1] = (lhs[j][BB])[1][1] -
 5190|  47.9M|                                 (lhs[j][AA])[0][1] * (lhs[j - 1][CC])[1][0] -
 5191|  47.9M|                                 (lhs[j][AA])[1][1] * (lhs[j - 1][CC])[1][1] -
 5192|  47.9M|                                 (lhs[j][AA])[2][1] * (lhs[j - 1][CC])[1][2] -
 5193|  47.9M|                                 (lhs[j][AA])[3][1] * (lhs[j - 1][CC])[1][3] -
 5194|  47.9M|                                 (lhs[j][AA])[4][1] * (lhs[j - 1][CC])[1][4];
 5195|  47.9M|            (lhs[j][BB])[1][2] = (lhs[j][BB])[1][2] -
 5196|  47.9M|                                 (lhs[j][AA])[0][2] * (lhs[j - 1][CC])[1][0] -
 5197|  47.9M|                                 (lhs[j][AA])[1][2] * (lhs[j - 1][CC])[1][1] -
 5198|  47.9M|                                 (lhs[j][AA])[2][2] * (lhs[j - 1][CC])[1][2] -
 5199|  47.9M|                                 (lhs[j][AA])[3][2] * (lhs[j - 1][CC])[1][3] -
 5200|  47.9M|                                 (lhs[j][AA])[4][2] * (lhs[j - 1][CC])[1][4];
 5201|  47.9M|            (lhs[j][BB])[1][3] = (lhs[j][BB])[1][3] -
 5202|  47.9M|                                 (lhs[j][AA])[0][3] * (lhs[j - 1][CC])[1][0] -
 5203|  47.9M|                                 (lhs[j][AA])[1][3] * (lhs[j - 1][CC])[1][1] -
 5204|  47.9M|                                 (lhs[j][AA])[2][3] * (lhs[j - 1][CC])[1][2] -
 5205|  47.9M|                                 (lhs[j][AA])[3][3] * (lhs[j - 1][CC])[1][3] -
 5206|  47.9M|                                 (lhs[j][AA])[4][3] * (lhs[j - 1][CC])[1][4];
 5207|  47.9M|            (lhs[j][BB])[1][4] = (lhs[j][BB])[1][4] -
 5208|  47.9M|                                 (lhs[j][AA])[0][4] * (lhs[j - 1][CC])[1][0] -
 5209|  47.9M|                                 (lhs[j][AA])[1][4] * (lhs[j - 1][CC])[1][1] -
 5210|  47.9M|                                 (lhs[j][AA])[2][4] * (lhs[j - 1][CC])[1][2] -
 5211|  47.9M|                                 (lhs[j][AA])[3][4] * (lhs[j - 1][CC])[1][3] -
 5212|  47.9M|                                 (lhs[j][AA])[4][4] * (lhs[j - 1][CC])[1][4];
 5213|  47.9M|            (lhs[j][BB])[2][0] = (lhs[j][BB])[2][0] -
 5214|  47.9M|                                 (lhs[j][AA])[0][0] * (lhs[j - 1][CC])[2][0] -
 5215|  47.9M|                                 (lhs[j][AA])[1][0] * (lhs[j - 1][CC])[2][1] -
 5216|  47.9M|                                 (lhs[j][AA])[2][0] * (lhs[j - 1][CC])[2][2] -
 5217|  47.9M|                                 (lhs[j][AA])[3][0] * (lhs[j - 1][CC])[2][3] -
 5218|  47.9M|                                 (lhs[j][AA])[4][0] * (lhs[j - 1][CC])[2][4];
 5219|  47.9M|            (lhs[j][BB])[2][1] = (lhs[j][BB])[2][1] -
 5220|  47.9M|                                 (lhs[j][AA])[0][1] * (lhs[j - 1][CC])[2][0] -
 5221|  47.9M|                                 (lhs[j][AA])[1][1] * (lhs[j - 1][CC])[2][1] -
 5222|  47.9M|                                 (lhs[j][AA])[2][1] * (lhs[j - 1][CC])[2][2] -
 5223|  47.9M|                                 (lhs[j][AA])[3][1] * (lhs[j - 1][CC])[2][3] -
 5224|  47.9M|                                 (lhs[j][AA])[4][1] * (lhs[j - 1][CC])[2][4];
 5225|  47.9M|            (lhs[j][BB])[2][2] = (lhs[j][BB])[2][2] -
 5226|  47.9M|                                 (lhs[j][AA])[0][2] * (lhs[j - 1][CC])[2][0] -
 5227|  47.9M|                                 (lhs[j][AA])[1][2] * (lhs[j - 1][CC])[2][1] -
 5228|  47.9M|                                 (lhs[j][AA])[2][2] * (lhs[j - 1][CC])[2][2] -
 5229|  47.9M|                                 (lhs[j][AA])[3][2] * (lhs[j - 1][CC])[2][3] -
 5230|  47.9M|                                 (lhs[j][AA])[4][2] * (lhs[j - 1][CC])[2][4];
 5231|  47.9M|            (lhs[j][BB])[2][3] = (lhs[j][BB])[2][3] -
 5232|  47.9M|                                 (lhs[j][AA])[0][3] * (lhs[j - 1][CC])[2][0] -
 5233|  47.9M|                                 (lhs[j][AA])[1][3] * (lhs[j - 1][CC])[2][1] -
 5234|  47.9M|                                 (lhs[j][AA])[2][3] * (lhs[j - 1][CC])[2][2] -
 5235|  47.9M|                                 (lhs[j][AA])[3][3] * (lhs[j - 1][CC])[2][3] -
 5236|  47.9M|                                 (lhs[j][AA])[4][3] * (lhs[j - 1][CC])[2][4];
 5237|  47.9M|            (lhs[j][BB])[2][4] = (lhs[j][BB])[2][4] -
 5238|  47.9M|                                 (lhs[j][AA])[0][4] * (lhs[j - 1][CC])[2][0] -
 5239|  47.9M|                                 (lhs[j][AA])[1][4] * (lhs[j - 1][CC])[2][1] -
 5240|  47.9M|                                 (lhs[j][AA])[2][4] * (lhs[j - 1][CC])[2][2] -
 5241|  47.9M|                                 (lhs[j][AA])[3][4] * (lhs[j - 1][CC])[2][3] -
 5242|  47.9M|                                 (lhs[j][AA])[4][4] * (lhs[j - 1][CC])[2][4];
 5243|  47.9M|            (lhs[j][BB])[3][0] = (lhs[j][BB])[3][0] -
 5244|  47.9M|                                 (lhs[j][AA])[0][0] * (lhs[j - 1][CC])[3][0] -
 5245|  47.9M|                                 (lhs[j][AA])[1][0] * (lhs[j - 1][CC])[3][1] -
 5246|  47.9M|                                 (lhs[j][AA])[2][0] * (lhs[j - 1][CC])[3][2] -
 5247|  47.9M|                                 (lhs[j][AA])[3][0] * (lhs[j - 1][CC])[3][3] -
 5248|  47.9M|                                 (lhs[j][AA])[4][0] * (lhs[j - 1][CC])[3][4];
 5249|  47.9M|            (lhs[j][BB])[3][1] = (lhs[j][BB])[3][1] -
 5250|  47.9M|                                 (lhs[j][AA])[0][1] * (lhs[j - 1][CC])[3][0] -
 5251|  47.9M|                                 (lhs[j][AA])[1][1] * (lhs[j - 1][CC])[3][1] -
 5252|  47.9M|                                 (lhs[j][AA])[2][1] * (lhs[j - 1][CC])[3][2] -
 5253|  47.9M|                                 (lhs[j][AA])[3][1] * (lhs[j - 1][CC])[3][3] -
 5254|  47.9M|                                 (lhs[j][AA])[4][1] * (lhs[j - 1][CC])[3][4];
 5255|  47.9M|            (lhs[j][BB])[3][2] = (lhs[j][BB])[3][2] -
 5256|  47.9M|                                 (lhs[j][AA])[0][2] * (lhs[j - 1][CC])[3][0] -
 5257|  47.9M|                                 (lhs[j][AA])[1][2] * (lhs[j - 1][CC])[3][1] -
 5258|  47.9M|                                 (lhs[j][AA])[2][2] * (lhs[j - 1][CC])[3][2] -
 5259|  47.9M|                                 (lhs[j][AA])[3][2] * (lhs[j - 1][CC])[3][3] -
 5260|  47.9M|                                 (lhs[j][AA])[4][2] * (lhs[j - 1][CC])[3][4];
 5261|  47.9M|            (lhs[j][BB])[3][3] = (lhs[j][BB])[3][3] -
 5262|  47.9M|                                 (lhs[j][AA])[0][3] * (lhs[j - 1][CC])[3][0] -
 5263|  47.9M|                                 (lhs[j][AA])[1][3] * (lhs[j - 1][CC])[3][1] -
 5264|  47.9M|                                 (lhs[j][AA])[2][3] * (lhs[j - 1][CC])[3][2] -
 5265|  47.9M|                                 (lhs[j][AA])[3][3] * (lhs[j - 1][CC])[3][3] -
 5266|  47.9M|                                 (lhs[j][AA])[4][3] * (lhs[j - 1][CC])[3][4];
 5267|  47.9M|            (lhs[j][BB])[3][4] = (lhs[j][BB])[3][4] -
 5268|  47.9M|                                 (lhs[j][AA])[0][4] * (lhs[j - 1][CC])[3][0] -
 5269|  47.9M|                                 (lhs[j][AA])[1][4] * (lhs[j - 1][CC])[3][1] -
 5270|  47.9M|                                 (lhs[j][AA])[2][4] * (lhs[j - 1][CC])[3][2] -
 5271|  47.9M|                                 (lhs[j][AA])[3][4] * (lhs[j - 1][CC])[3][3] -
 5272|  47.9M|                                 (lhs[j][AA])[4][4] * (lhs[j - 1][CC])[3][4];
 5273|  47.9M|            (lhs[j][BB])[4][0] = (lhs[j][BB])[4][0] -
 5274|  47.9M|                                 (lhs[j][AA])[0][0] * (lhs[j - 1][CC])[4][0] -
 5275|  47.9M|                                 (lhs[j][AA])[1][0] * (lhs[j - 1][CC])[4][1] -
 5276|  47.9M|                                 (lhs[j][AA])[2][0] * (lhs[j - 1][CC])[4][2] -
 5277|  47.9M|                                 (lhs[j][AA])[3][0] * (lhs[j - 1][CC])[4][3] -
 5278|  47.9M|                                 (lhs[j][AA])[4][0] * (lhs[j - 1][CC])[4][4];
 5279|  47.9M|            (lhs[j][BB])[4][1] = (lhs[j][BB])[4][1] -
 5280|  47.9M|                                 (lhs[j][AA])[0][1] * (lhs[j - 1][CC])[4][0] -
 5281|  47.9M|                                 (lhs[j][AA])[1][1] * (lhs[j - 1][CC])[4][1] -
 5282|  47.9M|                                 (lhs[j][AA])[2][1] * (lhs[j - 1][CC])[4][2] -
 5283|  47.9M|                                 (lhs[j][AA])[3][1] * (lhs[j - 1][CC])[4][3] -
 5284|  47.9M|                                 (lhs[j][AA])[4][1] * (lhs[j - 1][CC])[4][4];
 5285|  47.9M|            (lhs[j][BB])[4][2] = (lhs[j][BB])[4][2] -
 5286|  47.9M|                                 (lhs[j][AA])[0][2] * (lhs[j - 1][CC])[4][0] -
 5287|  47.9M|                                 (lhs[j][AA])[1][2] * (lhs[j - 1][CC])[4][1] -
 5288|  47.9M|                                 (lhs[j][AA])[2][2] * (lhs[j - 1][CC])[4][2] -
 5289|  47.9M|                                 (lhs[j][AA])[3][2] * (lhs[j - 1][CC])[4][3] -
 5290|  47.9M|                                 (lhs[j][AA])[4][2] * (lhs[j - 1][CC])[4][4];
 5291|  47.9M|            (lhs[j][BB])[4][3] = (lhs[j][BB])[4][3] -
 5292|  47.9M|                                 (lhs[j][AA])[0][3] * (lhs[j - 1][CC])[4][0] -
 5293|  47.9M|                                 (lhs[j][AA])[1][3] * (lhs[j - 1][CC])[4][1] -
 5294|  47.9M|                                 (lhs[j][AA])[2][3] * (lhs[j - 1][CC])[4][2] -
 5295|  47.9M|                                 (lhs[j][AA])[3][3] * (lhs[j - 1][CC])[4][3] -
 5296|  47.9M|                                 (lhs[j][AA])[4][3] * (lhs[j - 1][CC])[4][4];
 5297|  47.9M|            (lhs[j][BB])[4][4] = (lhs[j][BB])[4][4] -
 5298|  47.9M|                                 (lhs[j][AA])[0][4] * (lhs[j - 1][CC])[4][0] -
 5299|  47.9M|                                 (lhs[j][AA])[1][4] * (lhs[j - 1][CC])[4][1] -
 5300|  47.9M|                                 (lhs[j][AA])[2][4] * (lhs[j - 1][CC])[4][2] -
 5301|  47.9M|                                 (lhs[j][AA])[3][4] * (lhs[j - 1][CC])[4][3] -
 5302|  47.9M|                                 (lhs[j][AA])[4][4] * (lhs[j - 1][CC])[4][4];
 5303|  47.9M|          }
 5304|       |
 5305|       |          //-------------------------------------------------------------------
 5306|       |          // multiply c[k][j][i] by b_inverse and copy back to c
 5307|       |          // multiply rhs[k][0][i] by b_inverse[k][0][i] and copy to rhs
 5308|       |          //-------------------------------------------------------------------
 5309|       |          /* binvcrhs(lhs[j][BB], lhs[j][CC], rhs[k][j][i]) is inlined below */
 5310|       |//#pragma spf assert nomacro
 5311|  47.9M|          {
 5312|       |
 5313|  47.9M|            (lhs[j][BB])[1][0] =
 5314|  47.9M|                (lhs[j][BB])[1][0] * (1.00 / (lhs[j][BB])[0][0]);
 5315|  47.9M|            (lhs[j][BB])[2][0] =
 5316|  47.9M|                (lhs[j][BB])[2][0] * (1.00 / (lhs[j][BB])[0][0]);
 5317|  47.9M|            (lhs[j][BB])[3][0] =
 5318|  47.9M|                (lhs[j][BB])[3][0] * (1.00 / (lhs[j][BB])[0][0]);
 5319|  47.9M|            (lhs[j][BB])[4][0] =
 5320|  47.9M|                (lhs[j][BB])[4][0] * (1.00 / (lhs[j][BB])[0][0]);
 5321|  47.9M|            (lhs[j][CC])[0][0] =
 5322|  47.9M|                (lhs[j][CC])[0][0] * (1.00 / (lhs[j][BB])[0][0]);
 5323|  47.9M|            (lhs[j][CC])[1][0] =
 5324|  47.9M|                (lhs[j][CC])[1][0] * (1.00 / (lhs[j][BB])[0][0]);
 5325|  47.9M|            (lhs[j][CC])[2][0] =
 5326|  47.9M|                (lhs[j][CC])[2][0] * (1.00 / (lhs[j][BB])[0][0]);
 5327|  47.9M|            (lhs[j][CC])[3][0] =
 5328|  47.9M|                (lhs[j][CC])[3][0] * (1.00 / (lhs[j][BB])[0][0]);
 5329|  47.9M|            (lhs[j][CC])[4][0] =
 5330|  47.9M|                (lhs[j][CC])[4][0] * (1.00 / (lhs[j][BB])[0][0]);
 5331|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] * (1.00 / (lhs[j][BB])[0][0]);
 5332|       |
 5333|  47.9M|            (lhs[j][BB])[1][1] =
 5334|  47.9M|                (lhs[j][BB])[1][1] - ((lhs[j][BB])[0][1]) * (lhs[j][BB])[1][0];
 5335|  47.9M|            (lhs[j][BB])[2][1] =
 5336|  47.9M|                (lhs[j][BB])[2][1] - ((lhs[j][BB])[0][1]) * (lhs[j][BB])[2][0];
 5337|  47.9M|            (lhs[j][BB])[3][1] =
 5338|  47.9M|                (lhs[j][BB])[3][1] - ((lhs[j][BB])[0][1]) * (lhs[j][BB])[3][0];
 5339|  47.9M|            (lhs[j][BB])[4][1] =
 5340|  47.9M|                (lhs[j][BB])[4][1] - ((lhs[j][BB])[0][1]) * (lhs[j][BB])[4][0];
 5341|  47.9M|            (lhs[j][CC])[0][1] =
 5342|  47.9M|                (lhs[j][CC])[0][1] - ((lhs[j][BB])[0][1]) * (lhs[j][CC])[0][0];
 5343|  47.9M|            (lhs[j][CC])[1][1] =
 5344|  47.9M|                (lhs[j][CC])[1][1] - ((lhs[j][BB])[0][1]) * (lhs[j][CC])[1][0];
 5345|  47.9M|            (lhs[j][CC])[2][1] =
 5346|  47.9M|                (lhs[j][CC])[2][1] - ((lhs[j][BB])[0][1]) * (lhs[j][CC])[2][0];
 5347|  47.9M|            (lhs[j][CC])[3][1] =
 5348|  47.9M|                (lhs[j][CC])[3][1] - ((lhs[j][BB])[0][1]) * (lhs[j][CC])[3][0];
 5349|  47.9M|            (lhs[j][CC])[4][1] =
 5350|  47.9M|                (lhs[j][CC])[4][1] - ((lhs[j][BB])[0][1]) * (lhs[j][CC])[4][0];
 5351|  47.9M|            (rhs[k][j][i])[1] =
 5352|  47.9M|                (rhs[k][j][i])[1] - ((lhs[j][BB])[0][1]) * (rhs[k][j][i])[0];
 5353|       |
 5354|  47.9M|            (lhs[j][BB])[1][2] =
 5355|  47.9M|                (lhs[j][BB])[1][2] - ((lhs[j][BB])[0][2]) * (lhs[j][BB])[1][0];
 5356|  47.9M|            (lhs[j][BB])[2][2] =
 5357|  47.9M|                (lhs[j][BB])[2][2] - ((lhs[j][BB])[0][2]) * (lhs[j][BB])[2][0];
 5358|  47.9M|            (lhs[j][BB])[3][2] =
 5359|  47.9M|                (lhs[j][BB])[3][2] - ((lhs[j][BB])[0][2]) * (lhs[j][BB])[3][0];
 5360|  47.9M|            (lhs[j][BB])[4][2] =
 5361|  47.9M|                (lhs[j][BB])[4][2] - ((lhs[j][BB])[0][2]) * (lhs[j][BB])[4][0];
 5362|  47.9M|            (lhs[j][CC])[0][2] =
 5363|  47.9M|                (lhs[j][CC])[0][2] - ((lhs[j][BB])[0][2]) * (lhs[j][CC])[0][0];
 5364|  47.9M|            (lhs[j][CC])[1][2] =
 5365|  47.9M|                (lhs[j][CC])[1][2] - ((lhs[j][BB])[0][2]) * (lhs[j][CC])[1][0];
 5366|  47.9M|            (lhs[j][CC])[2][2] =
 5367|  47.9M|                (lhs[j][CC])[2][2] - ((lhs[j][BB])[0][2]) * (lhs[j][CC])[2][0];
 5368|  47.9M|            (lhs[j][CC])[3][2] =
 5369|  47.9M|                (lhs[j][CC])[3][2] - ((lhs[j][BB])[0][2]) * (lhs[j][CC])[3][0];
 5370|  47.9M|            (lhs[j][CC])[4][2] =
 5371|  47.9M|                (lhs[j][CC])[4][2] - ((lhs[j][BB])[0][2]) * (lhs[j][CC])[4][0];
 5372|  47.9M|            (rhs[k][j][i])[2] =
 5373|  47.9M|                (rhs[k][j][i])[2] - ((lhs[j][BB])[0][2]) * (rhs[k][j][i])[0];
 5374|       |
 5375|  47.9M|            (lhs[j][BB])[1][3] =
 5376|  47.9M|                (lhs[j][BB])[1][3] - ((lhs[j][BB])[0][3]) * (lhs[j][BB])[1][0];
 5377|  47.9M|            (lhs[j][BB])[2][3] =
 5378|  47.9M|                (lhs[j][BB])[2][3] - ((lhs[j][BB])[0][3]) * (lhs[j][BB])[2][0];
 5379|  47.9M|            (lhs[j][BB])[3][3] =
 5380|  47.9M|                (lhs[j][BB])[3][3] - ((lhs[j][BB])[0][3]) * (lhs[j][BB])[3][0];
 5381|  47.9M|            (lhs[j][BB])[4][3] =
 5382|  47.9M|                (lhs[j][BB])[4][3] - ((lhs[j][BB])[0][3]) * (lhs[j][BB])[4][0];
 5383|  47.9M|            (lhs[j][CC])[0][3] =
 5384|  47.9M|                (lhs[j][CC])[0][3] - ((lhs[j][BB])[0][3]) * (lhs[j][CC])[0][0];
 5385|  47.9M|            (lhs[j][CC])[1][3] =
 5386|  47.9M|                (lhs[j][CC])[1][3] - ((lhs[j][BB])[0][3]) * (lhs[j][CC])[1][0];
 5387|  47.9M|            (lhs[j][CC])[2][3] =
 5388|  47.9M|                (lhs[j][CC])[2][3] - ((lhs[j][BB])[0][3]) * (lhs[j][CC])[2][0];
 5389|  47.9M|            (lhs[j][CC])[3][3] =
 5390|  47.9M|                (lhs[j][CC])[3][3] - ((lhs[j][BB])[0][3]) * (lhs[j][CC])[3][0];
 5391|  47.9M|            (lhs[j][CC])[4][3] =
 5392|  47.9M|                (lhs[j][CC])[4][3] - ((lhs[j][BB])[0][3]) * (lhs[j][CC])[4][0];
 5393|  47.9M|            (rhs[k][j][i])[3] =
 5394|  47.9M|                (rhs[k][j][i])[3] - ((lhs[j][BB])[0][3]) * (rhs[k][j][i])[0];
 5395|       |
 5396|  47.9M|            (lhs[j][BB])[1][4] =
 5397|  47.9M|                (lhs[j][BB])[1][4] - ((lhs[j][BB])[0][4]) * (lhs[j][BB])[1][0];
 5398|  47.9M|            (lhs[j][BB])[2][4] =
 5399|  47.9M|                (lhs[j][BB])[2][4] - ((lhs[j][BB])[0][4]) * (lhs[j][BB])[2][0];
 5400|  47.9M|            (lhs[j][BB])[3][4] =
 5401|  47.9M|                (lhs[j][BB])[3][4] - ((lhs[j][BB])[0][4]) * (lhs[j][BB])[3][0];
 5402|  47.9M|            (lhs[j][BB])[4][4] =
 5403|  47.9M|                (lhs[j][BB])[4][4] - ((lhs[j][BB])[0][4]) * (lhs[j][BB])[4][0];
 5404|  47.9M|            (lhs[j][CC])[0][4] =
 5405|  47.9M|                (lhs[j][CC])[0][4] - ((lhs[j][BB])[0][4]) * (lhs[j][CC])[0][0];
 5406|  47.9M|            (lhs[j][CC])[1][4] =
 5407|  47.9M|                (lhs[j][CC])[1][4] - ((lhs[j][BB])[0][4]) * (lhs[j][CC])[1][0];
 5408|  47.9M|            (lhs[j][CC])[2][4] =
 5409|  47.9M|                (lhs[j][CC])[2][4] - ((lhs[j][BB])[0][4]) * (lhs[j][CC])[2][0];
 5410|  47.9M|            (lhs[j][CC])[3][4] =
 5411|  47.9M|                (lhs[j][CC])[3][4] - ((lhs[j][BB])[0][4]) * (lhs[j][CC])[3][0];
 5412|  47.9M|            (lhs[j][CC])[4][4] =
 5413|  47.9M|                (lhs[j][CC])[4][4] - ((lhs[j][BB])[0][4]) * (lhs[j][CC])[4][0];
 5414|  47.9M|            (rhs[k][j][i])[4] =
 5415|  47.9M|                (rhs[k][j][i])[4] - ((lhs[j][BB])[0][4]) * (rhs[k][j][i])[0];
 5416|       |
 5417|  47.9M|            (lhs[j][BB])[2][1] =
 5418|  47.9M|                (lhs[j][BB])[2][1] * (1.00 / (lhs[j][BB])[1][1]);
 5419|  47.9M|            (lhs[j][BB])[3][1] =
 5420|  47.9M|                (lhs[j][BB])[3][1] * (1.00 / (lhs[j][BB])[1][1]);
 5421|  47.9M|            (lhs[j][BB])[4][1] =
 5422|  47.9M|                (lhs[j][BB])[4][1] * (1.00 / (lhs[j][BB])[1][1]);
 5423|  47.9M|            (lhs[j][CC])[0][1] =
 5424|  47.9M|                (lhs[j][CC])[0][1] * (1.00 / (lhs[j][BB])[1][1]);
 5425|  47.9M|            (lhs[j][CC])[1][1] =
 5426|  47.9M|                (lhs[j][CC])[1][1] * (1.00 / (lhs[j][BB])[1][1]);
 5427|  47.9M|            (lhs[j][CC])[2][1] =
 5428|  47.9M|                (lhs[j][CC])[2][1] * (1.00 / (lhs[j][BB])[1][1]);
 5429|  47.9M|            (lhs[j][CC])[3][1] =
 5430|  47.9M|                (lhs[j][CC])[3][1] * (1.00 / (lhs[j][BB])[1][1]);
 5431|  47.9M|            (lhs[j][CC])[4][1] =
 5432|  47.9M|                (lhs[j][CC])[4][1] * (1.00 / (lhs[j][BB])[1][1]);
 5433|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] * (1.00 / (lhs[j][BB])[1][1]);
 5434|       |
 5435|  47.9M|            (lhs[j][BB])[2][0] =
 5436|  47.9M|                (lhs[j][BB])[2][0] - ((lhs[j][BB])[1][0]) * (lhs[j][BB])[2][1];
 5437|  47.9M|            (lhs[j][BB])[3][0] =
 5438|  47.9M|                (lhs[j][BB])[3][0] - ((lhs[j][BB])[1][0]) * (lhs[j][BB])[3][1];
 5439|  47.9M|            (lhs[j][BB])[4][0] =
 5440|  47.9M|                (lhs[j][BB])[4][0] - ((lhs[j][BB])[1][0]) * (lhs[j][BB])[4][1];
 5441|  47.9M|            (lhs[j][CC])[0][0] =
 5442|  47.9M|                (lhs[j][CC])[0][0] - ((lhs[j][BB])[1][0]) * (lhs[j][CC])[0][1];
 5443|  47.9M|            (lhs[j][CC])[1][0] =
 5444|  47.9M|                (lhs[j][CC])[1][0] - ((lhs[j][BB])[1][0]) * (lhs[j][CC])[1][1];
 5445|  47.9M|            (lhs[j][CC])[2][0] =
 5446|  47.9M|                (lhs[j][CC])[2][0] - ((lhs[j][BB])[1][0]) * (lhs[j][CC])[2][1];
 5447|  47.9M|            (lhs[j][CC])[3][0] =
 5448|  47.9M|                (lhs[j][CC])[3][0] - ((lhs[j][BB])[1][0]) * (lhs[j][CC])[3][1];
 5449|  47.9M|            (lhs[j][CC])[4][0] =
 5450|  47.9M|                (lhs[j][CC])[4][0] - ((lhs[j][BB])[1][0]) * (lhs[j][CC])[4][1];
 5451|  47.9M|            (rhs[k][j][i])[0] =
 5452|  47.9M|                (rhs[k][j][i])[0] - ((lhs[j][BB])[1][0]) * (rhs[k][j][i])[1];
 5453|       |
 5454|  47.9M|            (lhs[j][BB])[2][2] =
 5455|  47.9M|                (lhs[j][BB])[2][2] - ((lhs[j][BB])[1][2]) * (lhs[j][BB])[2][1];
 5456|  47.9M|            (lhs[j][BB])[3][2] =
 5457|  47.9M|                (lhs[j][BB])[3][2] - ((lhs[j][BB])[1][2]) * (lhs[j][BB])[3][1];
 5458|  47.9M|            (lhs[j][BB])[4][2] =
 5459|  47.9M|                (lhs[j][BB])[4][2] - ((lhs[j][BB])[1][2]) * (lhs[j][BB])[4][1];
 5460|  47.9M|            (lhs[j][CC])[0][2] =
 5461|  47.9M|                (lhs[j][CC])[0][2] - ((lhs[j][BB])[1][2]) * (lhs[j][CC])[0][1];
 5462|  47.9M|            (lhs[j][CC])[1][2] =
 5463|  47.9M|                (lhs[j][CC])[1][2] - ((lhs[j][BB])[1][2]) * (lhs[j][CC])[1][1];
 5464|  47.9M|            (lhs[j][CC])[2][2] =
 5465|  47.9M|                (lhs[j][CC])[2][2] - ((lhs[j][BB])[1][2]) * (lhs[j][CC])[2][1];
 5466|  47.9M|            (lhs[j][CC])[3][2] =
 5467|  47.9M|                (lhs[j][CC])[3][2] - ((lhs[j][BB])[1][2]) * (lhs[j][CC])[3][1];
 5468|  47.9M|            (lhs[j][CC])[4][2] =
 5469|  47.9M|                (lhs[j][CC])[4][2] - ((lhs[j][BB])[1][2]) * (lhs[j][CC])[4][1];
 5470|  47.9M|            (rhs[k][j][i])[2] =
 5471|  47.9M|                (rhs[k][j][i])[2] - ((lhs[j][BB])[1][2]) * (rhs[k][j][i])[1];
 5472|       |
 5473|  47.9M|            (lhs[j][BB])[2][3] =
 5474|  47.9M|                (lhs[j][BB])[2][3] - ((lhs[j][BB])[1][3]) * (lhs[j][BB])[2][1];
 5475|  47.9M|            (lhs[j][BB])[3][3] =
 5476|  47.9M|                (lhs[j][BB])[3][3] - ((lhs[j][BB])[1][3]) * (lhs[j][BB])[3][1];
 5477|  47.9M|            (lhs[j][BB])[4][3] =
 5478|  47.9M|                (lhs[j][BB])[4][3] - ((lhs[j][BB])[1][3]) * (lhs[j][BB])[4][1];
 5479|  47.9M|            (lhs[j][CC])[0][3] =
 5480|  47.9M|                (lhs[j][CC])[0][3] - ((lhs[j][BB])[1][3]) * (lhs[j][CC])[0][1];
 5481|  47.9M|            (lhs[j][CC])[1][3] =
 5482|  47.9M|                (lhs[j][CC])[1][3] - ((lhs[j][BB])[1][3]) * (lhs[j][CC])[1][1];
 5483|  47.9M|            (lhs[j][CC])[2][3] =
 5484|  47.9M|                (lhs[j][CC])[2][3] - ((lhs[j][BB])[1][3]) * (lhs[j][CC])[2][1];
 5485|  47.9M|            (lhs[j][CC])[3][3] =
 5486|  47.9M|                (lhs[j][CC])[3][3] - ((lhs[j][BB])[1][3]) * (lhs[j][CC])[3][1];
 5487|  47.9M|            (lhs[j][CC])[4][3] =
 5488|  47.9M|                (lhs[j][CC])[4][3] - ((lhs[j][BB])[1][3]) * (lhs[j][CC])[4][1];
 5489|  47.9M|            (rhs[k][j][i])[3] =
 5490|  47.9M|                (rhs[k][j][i])[3] - ((lhs[j][BB])[1][3]) * (rhs[k][j][i])[1];
 5491|       |
 5492|  47.9M|            (lhs[j][BB])[2][4] =
 5493|  47.9M|                (lhs[j][BB])[2][4] - ((lhs[j][BB])[1][4]) * (lhs[j][BB])[2][1];
 5494|  47.9M|            (lhs[j][BB])[3][4] =
 5495|  47.9M|                (lhs[j][BB])[3][4] - ((lhs[j][BB])[1][4]) * (lhs[j][BB])[3][1];
 5496|  47.9M|            (lhs[j][BB])[4][4] =
 5497|  47.9M|                (lhs[j][BB])[4][4] - ((lhs[j][BB])[1][4]) * (lhs[j][BB])[4][1];
 5498|  47.9M|            (lhs[j][CC])[0][4] =
 5499|  47.9M|                (lhs[j][CC])[0][4] - ((lhs[j][BB])[1][4]) * (lhs[j][CC])[0][1];
 5500|  47.9M|            (lhs[j][CC])[1][4] =
 5501|  47.9M|                (lhs[j][CC])[1][4] - ((lhs[j][BB])[1][4]) * (lhs[j][CC])[1][1];
 5502|  47.9M|            (lhs[j][CC])[2][4] =
 5503|  47.9M|                (lhs[j][CC])[2][4] - ((lhs[j][BB])[1][4]) * (lhs[j][CC])[2][1];
 5504|  47.9M|            (lhs[j][CC])[3][4] =
 5505|  47.9M|                (lhs[j][CC])[3][4] - ((lhs[j][BB])[1][4]) * (lhs[j][CC])[3][1];
 5506|  47.9M|            (lhs[j][CC])[4][4] =
 5507|  47.9M|                (lhs[j][CC])[4][4] - ((lhs[j][BB])[1][4]) * (lhs[j][CC])[4][1];
 5508|  47.9M|            (rhs[k][j][i])[4] =
 5509|  47.9M|                (rhs[k][j][i])[4] - ((lhs[j][BB])[1][4]) * (rhs[k][j][i])[1];
 5510|       |
 5511|  47.9M|            (lhs[j][BB])[3][2] =
 5512|  47.9M|                (lhs[j][BB])[3][2] * (1.00 / (lhs[j][BB])[2][2]);
 5513|  47.9M|            (lhs[j][BB])[4][2] =
 5514|  47.9M|                (lhs[j][BB])[4][2] * (1.00 / (lhs[j][BB])[2][2]);
 5515|  47.9M|            (lhs[j][CC])[0][2] =
 5516|  47.9M|                (lhs[j][CC])[0][2] * (1.00 / (lhs[j][BB])[2][2]);
 5517|  47.9M|            (lhs[j][CC])[1][2] =
 5518|  47.9M|                (lhs[j][CC])[1][2] * (1.00 / (lhs[j][BB])[2][2]);
 5519|  47.9M|            (lhs[j][CC])[2][2] =
 5520|  47.9M|                (lhs[j][CC])[2][2] * (1.00 / (lhs[j][BB])[2][2]);
 5521|  47.9M|            (lhs[j][CC])[3][2] =
 5522|  47.9M|                (lhs[j][CC])[3][2] * (1.00 / (lhs[j][BB])[2][2]);
 5523|  47.9M|            (lhs[j][CC])[4][2] =
 5524|  47.9M|                (lhs[j][CC])[4][2] * (1.00 / (lhs[j][BB])[2][2]);
 5525|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] * (1.00 / (lhs[j][BB])[2][2]);
 5526|       |
 5527|  47.9M|            (lhs[j][BB])[3][0] =
 5528|  47.9M|                (lhs[j][BB])[3][0] - ((lhs[j][BB])[2][0]) * (lhs[j][BB])[3][2];
 5529|  47.9M|            (lhs[j][BB])[4][0] =
 5530|  47.9M|                (lhs[j][BB])[4][0] - ((lhs[j][BB])[2][0]) * (lhs[j][BB])[4][2];
 5531|  47.9M|            (lhs[j][CC])[0][0] =
 5532|  47.9M|                (lhs[j][CC])[0][0] - ((lhs[j][BB])[2][0]) * (lhs[j][CC])[0][2];
 5533|  47.9M|            (lhs[j][CC])[1][0] =
 5534|  47.9M|                (lhs[j][CC])[1][0] - ((lhs[j][BB])[2][0]) * (lhs[j][CC])[1][2];
 5535|  47.9M|            (lhs[j][CC])[2][0] =
 5536|  47.9M|                (lhs[j][CC])[2][0] - ((lhs[j][BB])[2][0]) * (lhs[j][CC])[2][2];
 5537|  47.9M|            (lhs[j][CC])[3][0] =
 5538|  47.9M|                (lhs[j][CC])[3][0] - ((lhs[j][BB])[2][0]) * (lhs[j][CC])[3][2];
 5539|  47.9M|            (lhs[j][CC])[4][0] =
 5540|  47.9M|                (lhs[j][CC])[4][0] - ((lhs[j][BB])[2][0]) * (lhs[j][CC])[4][2];
 5541|  47.9M|            (rhs[k][j][i])[0] =
 5542|  47.9M|                (rhs[k][j][i])[0] - ((lhs[j][BB])[2][0]) * (rhs[k][j][i])[2];
 5543|       |
 5544|  47.9M|            (lhs[j][BB])[3][1] =
 5545|  47.9M|                (lhs[j][BB])[3][1] - ((lhs[j][BB])[2][1]) * (lhs[j][BB])[3][2];
 5546|  47.9M|            (lhs[j][BB])[4][1] =
 5547|  47.9M|                (lhs[j][BB])[4][1] - ((lhs[j][BB])[2][1]) * (lhs[j][BB])[4][2];
 5548|  47.9M|            (lhs[j][CC])[0][1] =
 5549|  47.9M|                (lhs[j][CC])[0][1] - ((lhs[j][BB])[2][1]) * (lhs[j][CC])[0][2];
 5550|  47.9M|            (lhs[j][CC])[1][1] =
 5551|  47.9M|                (lhs[j][CC])[1][1] - ((lhs[j][BB])[2][1]) * (lhs[j][CC])[1][2];
 5552|  47.9M|            (lhs[j][CC])[2][1] =
 5553|  47.9M|                (lhs[j][CC])[2][1] - ((lhs[j][BB])[2][1]) * (lhs[j][CC])[2][2];
 5554|  47.9M|            (lhs[j][CC])[3][1] =
 5555|  47.9M|                (lhs[j][CC])[3][1] - ((lhs[j][BB])[2][1]) * (lhs[j][CC])[3][2];
 5556|  47.9M|            (lhs[j][CC])[4][1] =
 5557|  47.9M|                (lhs[j][CC])[4][1] - ((lhs[j][BB])[2][1]) * (lhs[j][CC])[4][2];
 5558|  47.9M|            (rhs[k][j][i])[1] =
 5559|  47.9M|                (rhs[k][j][i])[1] - ((lhs[j][BB])[2][1]) * (rhs[k][j][i])[2];
 5560|       |
 5561|  47.9M|            (lhs[j][BB])[3][3] =
 5562|  47.9M|                (lhs[j][BB])[3][3] - ((lhs[j][BB])[2][3]) * (lhs[j][BB])[3][2];
 5563|  47.9M|            (lhs[j][BB])[4][3] =
 5564|  47.9M|                (lhs[j][BB])[4][3] - ((lhs[j][BB])[2][3]) * (lhs[j][BB])[4][2];
 5565|  47.9M|            (lhs[j][CC])[0][3] =
 5566|  47.9M|                (lhs[j][CC])[0][3] - ((lhs[j][BB])[2][3]) * (lhs[j][CC])[0][2];
 5567|  47.9M|            (lhs[j][CC])[1][3] =
 5568|  47.9M|                (lhs[j][CC])[1][3] - ((lhs[j][BB])[2][3]) * (lhs[j][CC])[1][2];
 5569|  47.9M|            (lhs[j][CC])[2][3] =
 5570|  47.9M|                (lhs[j][CC])[2][3] - ((lhs[j][BB])[2][3]) * (lhs[j][CC])[2][2];
 5571|  47.9M|            (lhs[j][CC])[3][3] =
 5572|  47.9M|                (lhs[j][CC])[3][3] - ((lhs[j][BB])[2][3]) * (lhs[j][CC])[3][2];
 5573|  47.9M|            (lhs[j][CC])[4][3] =
 5574|  47.9M|                (lhs[j][CC])[4][3] - ((lhs[j][BB])[2][3]) * (lhs[j][CC])[4][2];
 5575|  47.9M|            (rhs[k][j][i])[3] =
 5576|  47.9M|                (rhs[k][j][i])[3] - ((lhs[j][BB])[2][3]) * (rhs[k][j][i])[2];
 5577|       |
 5578|  47.9M|            (lhs[j][BB])[3][4] =
 5579|  47.9M|                (lhs[j][BB])[3][4] - ((lhs[j][BB])[2][4]) * (lhs[j][BB])[3][2];
 5580|  47.9M|            (lhs[j][BB])[4][4] =
 5581|  47.9M|                (lhs[j][BB])[4][4] - ((lhs[j][BB])[2][4]) * (lhs[j][BB])[4][2];
 5582|  47.9M|            (lhs[j][CC])[0][4] =
 5583|  47.9M|                (lhs[j][CC])[0][4] - ((lhs[j][BB])[2][4]) * (lhs[j][CC])[0][2];
 5584|  47.9M|            (lhs[j][CC])[1][4] =
 5585|  47.9M|                (lhs[j][CC])[1][4] - ((lhs[j][BB])[2][4]) * (lhs[j][CC])[1][2];
 5586|  47.9M|            (lhs[j][CC])[2][4] =
 5587|  47.9M|                (lhs[j][CC])[2][4] - ((lhs[j][BB])[2][4]) * (lhs[j][CC])[2][2];
 5588|  47.9M|            (lhs[j][CC])[3][4] =
 5589|  47.9M|                (lhs[j][CC])[3][4] - ((lhs[j][BB])[2][4]) * (lhs[j][CC])[3][2];
 5590|  47.9M|            (lhs[j][CC])[4][4] =
 5591|  47.9M|                (lhs[j][CC])[4][4] - ((lhs[j][BB])[2][4]) * (lhs[j][CC])[4][2];
 5592|  47.9M|            (rhs[k][j][i])[4] =
 5593|  47.9M|                (rhs[k][j][i])[4] - ((lhs[j][BB])[2][4]) * (rhs[k][j][i])[2];
 5594|       |
 5595|  47.9M|            (lhs[j][BB])[4][3] =
 5596|  47.9M|                (lhs[j][BB])[4][3] * (1.00 / (lhs[j][BB])[3][3]);
 5597|  47.9M|            (lhs[j][CC])[0][3] =
 5598|  47.9M|                (lhs[j][CC])[0][3] * (1.00 / (lhs[j][BB])[3][3]);
 5599|  47.9M|            (lhs[j][CC])[1][3] =
 5600|  47.9M|                (lhs[j][CC])[1][3] * (1.00 / (lhs[j][BB])[3][3]);
 5601|  47.9M|            (lhs[j][CC])[2][3] =
 5602|  47.9M|                (lhs[j][CC])[2][3] * (1.00 / (lhs[j][BB])[3][3]);
 5603|  47.9M|            (lhs[j][CC])[3][3] =
 5604|  47.9M|                (lhs[j][CC])[3][3] * (1.00 / (lhs[j][BB])[3][3]);
 5605|  47.9M|            (lhs[j][CC])[4][3] =
 5606|  47.9M|                (lhs[j][CC])[4][3] * (1.00 / (lhs[j][BB])[3][3]);
 5607|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] * (1.00 / (lhs[j][BB])[3][3]);
 5608|       |
 5609|  47.9M|            (lhs[j][BB])[4][0] =
 5610|  47.9M|                (lhs[j][BB])[4][0] - ((lhs[j][BB])[3][0]) * (lhs[j][BB])[4][3];
 5611|  47.9M|            (lhs[j][CC])[0][0] =
 5612|  47.9M|                (lhs[j][CC])[0][0] - ((lhs[j][BB])[3][0]) * (lhs[j][CC])[0][3];
 5613|  47.9M|            (lhs[j][CC])[1][0] =
 5614|  47.9M|                (lhs[j][CC])[1][0] - ((lhs[j][BB])[3][0]) * (lhs[j][CC])[1][3];
 5615|  47.9M|            (lhs[j][CC])[2][0] =
 5616|  47.9M|                (lhs[j][CC])[2][0] - ((lhs[j][BB])[3][0]) * (lhs[j][CC])[2][3];
 5617|  47.9M|            (lhs[j][CC])[3][0] =
 5618|  47.9M|                (lhs[j][CC])[3][0] - ((lhs[j][BB])[3][0]) * (lhs[j][CC])[3][3];
 5619|  47.9M|            (lhs[j][CC])[4][0] =
 5620|  47.9M|                (lhs[j][CC])[4][0] - ((lhs[j][BB])[3][0]) * (lhs[j][CC])[4][3];
 5621|  47.9M|            (rhs[k][j][i])[0] =
 5622|  47.9M|                (rhs[k][j][i])[0] - ((lhs[j][BB])[3][0]) * (rhs[k][j][i])[3];
 5623|       |
 5624|  47.9M|            (lhs[j][BB])[4][1] =
 5625|  47.9M|                (lhs[j][BB])[4][1] - ((lhs[j][BB])[3][1]) * (lhs[j][BB])[4][3];
 5626|  47.9M|            (lhs[j][CC])[0][1] =
 5627|  47.9M|                (lhs[j][CC])[0][1] - ((lhs[j][BB])[3][1]) * (lhs[j][CC])[0][3];
 5628|  47.9M|            (lhs[j][CC])[1][1] =
 5629|  47.9M|                (lhs[j][CC])[1][1] - ((lhs[j][BB])[3][1]) * (lhs[j][CC])[1][3];
 5630|  47.9M|            (lhs[j][CC])[2][1] =
 5631|  47.9M|                (lhs[j][CC])[2][1] - ((lhs[j][BB])[3][1]) * (lhs[j][CC])[2][3];
 5632|  47.9M|            (lhs[j][CC])[3][1] =
 5633|  47.9M|                (lhs[j][CC])[3][1] - ((lhs[j][BB])[3][1]) * (lhs[j][CC])[3][3];
 5634|  47.9M|            (lhs[j][CC])[4][1] =
 5635|  47.9M|                (lhs[j][CC])[4][1] - ((lhs[j][BB])[3][1]) * (lhs[j][CC])[4][3];
 5636|  47.9M|            (rhs[k][j][i])[1] =
 5637|  47.9M|                (rhs[k][j][i])[1] - ((lhs[j][BB])[3][1]) * (rhs[k][j][i])[3];
 5638|       |
 5639|  47.9M|            (lhs[j][BB])[4][2] =
 5640|  47.9M|                (lhs[j][BB])[4][2] - ((lhs[j][BB])[3][2]) * (lhs[j][BB])[4][3];
 5641|  47.9M|            (lhs[j][CC])[0][2] =
 5642|  47.9M|                (lhs[j][CC])[0][2] - ((lhs[j][BB])[3][2]) * (lhs[j][CC])[0][3];
 5643|  47.9M|            (lhs[j][CC])[1][2] =
 5644|  47.9M|                (lhs[j][CC])[1][2] - ((lhs[j][BB])[3][2]) * (lhs[j][CC])[1][3];
 5645|  47.9M|            (lhs[j][CC])[2][2] =
 5646|  47.9M|                (lhs[j][CC])[2][2] - ((lhs[j][BB])[3][2]) * (lhs[j][CC])[2][3];
 5647|  47.9M|            (lhs[j][CC])[3][2] =
 5648|  47.9M|                (lhs[j][CC])[3][2] - ((lhs[j][BB])[3][2]) * (lhs[j][CC])[3][3];
 5649|  47.9M|            (lhs[j][CC])[4][2] =
 5650|  47.9M|                (lhs[j][CC])[4][2] - ((lhs[j][BB])[3][2]) * (lhs[j][CC])[4][3];
 5651|  47.9M|            (rhs[k][j][i])[2] =
 5652|  47.9M|                (rhs[k][j][i])[2] - ((lhs[j][BB])[3][2]) * (rhs[k][j][i])[3];
 5653|       |
 5654|  47.9M|            (lhs[j][BB])[4][4] =
 5655|  47.9M|                (lhs[j][BB])[4][4] - ((lhs[j][BB])[3][4]) * (lhs[j][BB])[4][3];
 5656|  47.9M|            (lhs[j][CC])[0][4] =
 5657|  47.9M|                (lhs[j][CC])[0][4] - ((lhs[j][BB])[3][4]) * (lhs[j][CC])[0][3];
 5658|  47.9M|            (lhs[j][CC])[1][4] =
 5659|  47.9M|                (lhs[j][CC])[1][4] - ((lhs[j][BB])[3][4]) * (lhs[j][CC])[1][3];
 5660|  47.9M|            (lhs[j][CC])[2][4] =
 5661|  47.9M|                (lhs[j][CC])[2][4] - ((lhs[j][BB])[3][4]) * (lhs[j][CC])[2][3];
 5662|  47.9M|            (lhs[j][CC])[3][4] =
 5663|  47.9M|                (lhs[j][CC])[3][4] - ((lhs[j][BB])[3][4]) * (lhs[j][CC])[3][3];
 5664|  47.9M|            (lhs[j][CC])[4][4] =
 5665|  47.9M|                (lhs[j][CC])[4][4] - ((lhs[j][BB])[3][4]) * (lhs[j][CC])[4][3];
 5666|  47.9M|            (rhs[k][j][i])[4] =
 5667|  47.9M|                (rhs[k][j][i])[4] - ((lhs[j][BB])[3][4]) * (rhs[k][j][i])[3];
 5668|       |
 5669|  47.9M|            (lhs[j][CC])[0][4] =
 5670|  47.9M|                (lhs[j][CC])[0][4] * (1.00 / (lhs[j][BB])[4][4]);
 5671|  47.9M|            (lhs[j][CC])[1][4] =
 5672|  47.9M|                (lhs[j][CC])[1][4] * (1.00 / (lhs[j][BB])[4][4]);
 5673|  47.9M|            (lhs[j][CC])[2][4] =
 5674|  47.9M|                (lhs[j][CC])[2][4] * (1.00 / (lhs[j][BB])[4][4]);
 5675|  47.9M|            (lhs[j][CC])[3][4] =
 5676|  47.9M|                (lhs[j][CC])[3][4] * (1.00 / (lhs[j][BB])[4][4]);
 5677|  47.9M|            (lhs[j][CC])[4][4] =
 5678|  47.9M|                (lhs[j][CC])[4][4] * (1.00 / (lhs[j][BB])[4][4]);
 5679|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] * (1.00 / (lhs[j][BB])[4][4]);
 5680|       |
 5681|  47.9M|            (lhs[j][CC])[0][0] =
 5682|  47.9M|                (lhs[j][CC])[0][0] - ((lhs[j][BB])[4][0]) * (lhs[j][CC])[0][4];
 5683|  47.9M|            (lhs[j][CC])[1][0] =
 5684|  47.9M|                (lhs[j][CC])[1][0] - ((lhs[j][BB])[4][0]) * (lhs[j][CC])[1][4];
 5685|  47.9M|            (lhs[j][CC])[2][0] =
 5686|  47.9M|                (lhs[j][CC])[2][0] - ((lhs[j][BB])[4][0]) * (lhs[j][CC])[2][4];
 5687|  47.9M|            (lhs[j][CC])[3][0] =
 5688|  47.9M|                (lhs[j][CC])[3][0] - ((lhs[j][BB])[4][0]) * (lhs[j][CC])[3][4];
 5689|  47.9M|            (lhs[j][CC])[4][0] =
 5690|  47.9M|                (lhs[j][CC])[4][0] - ((lhs[j][BB])[4][0]) * (lhs[j][CC])[4][4];
 5691|  47.9M|            (rhs[k][j][i])[0] =
 5692|  47.9M|                (rhs[k][j][i])[0] - ((lhs[j][BB])[4][0]) * (rhs[k][j][i])[4];
 5693|       |
 5694|  47.9M|            (lhs[j][CC])[0][1] =
 5695|  47.9M|                (lhs[j][CC])[0][1] - ((lhs[j][BB])[4][1]) * (lhs[j][CC])[0][4];
 5696|  47.9M|            (lhs[j][CC])[1][1] =
 5697|  47.9M|                (lhs[j][CC])[1][1] - ((lhs[j][BB])[4][1]) * (lhs[j][CC])[1][4];
 5698|  47.9M|            (lhs[j][CC])[2][1] =
 5699|  47.9M|                (lhs[j][CC])[2][1] - ((lhs[j][BB])[4][1]) * (lhs[j][CC])[2][4];
 5700|  47.9M|            (lhs[j][CC])[3][1] =
 5701|  47.9M|                (lhs[j][CC])[3][1] - ((lhs[j][BB])[4][1]) * (lhs[j][CC])[3][4];
 5702|  47.9M|            (lhs[j][CC])[4][1] =
 5703|  47.9M|                (lhs[j][CC])[4][1] - ((lhs[j][BB])[4][1]) * (lhs[j][CC])[4][4];
 5704|  47.9M|            (rhs[k][j][i])[1] =
 5705|  47.9M|                (rhs[k][j][i])[1] - ((lhs[j][BB])[4][1]) * (rhs[k][j][i])[4];
 5706|       |
 5707|  47.9M|            (lhs[j][CC])[0][2] =
 5708|  47.9M|                (lhs[j][CC])[0][2] - ((lhs[j][BB])[4][2]) * (lhs[j][CC])[0][4];
 5709|  47.9M|            (lhs[j][CC])[1][2] =
 5710|  47.9M|                (lhs[j][CC])[1][2] - ((lhs[j][BB])[4][2]) * (lhs[j][CC])[1][4];
 5711|  47.9M|            (lhs[j][CC])[2][2] =
 5712|  47.9M|                (lhs[j][CC])[2][2] - ((lhs[j][BB])[4][2]) * (lhs[j][CC])[2][4];
 5713|  47.9M|            (lhs[j][CC])[3][2] =
 5714|  47.9M|                (lhs[j][CC])[3][2] - ((lhs[j][BB])[4][2]) * (lhs[j][CC])[3][4];
 5715|  47.9M|            (lhs[j][CC])[4][2] =
 5716|  47.9M|                (lhs[j][CC])[4][2] - ((lhs[j][BB])[4][2]) * (lhs[j][CC])[4][4];
 5717|  47.9M|            (rhs[k][j][i])[2] =
 5718|  47.9M|                (rhs[k][j][i])[2] - ((lhs[j][BB])[4][2]) * (rhs[k][j][i])[4];
 5719|       |
 5720|  47.9M|            (lhs[j][CC])[0][3] =
 5721|  47.9M|                (lhs[j][CC])[0][3] - ((lhs[j][BB])[4][3]) * (lhs[j][CC])[0][4];
 5722|  47.9M|            (lhs[j][CC])[1][3] =
 5723|  47.9M|                (lhs[j][CC])[1][3] - ((lhs[j][BB])[4][3]) * (lhs[j][CC])[1][4];
 5724|  47.9M|            (lhs[j][CC])[2][3] =
 5725|  47.9M|                (lhs[j][CC])[2][3] - ((lhs[j][BB])[4][3]) * (lhs[j][CC])[2][4];
 5726|  47.9M|            (lhs[j][CC])[3][3] =
 5727|  47.9M|                (lhs[j][CC])[3][3] - ((lhs[j][BB])[4][3]) * (lhs[j][CC])[3][4];
 5728|  47.9M|            (lhs[j][CC])[4][3] =
 5729|  47.9M|                (lhs[j][CC])[4][3] - ((lhs[j][BB])[4][3]) * (lhs[j][CC])[4][4];
 5730|  47.9M|            (rhs[k][j][i])[3] =
 5731|  47.9M|                (rhs[k][j][i])[3] - ((lhs[j][BB])[4][3]) * (rhs[k][j][i])[4];
 5732|  47.9M|          }
 5733|  47.9M|        }
 5734|       |
 5735|       |        //---------------------------------------------------------------------
 5736|       |        // rhs(jsize) = rhs(jsize) - A*rhs(jsize-1)
 5737|       |        //---------------------------------------------------------------------
 5738|       |        /* matvec_sub(lhs[jsize][AA], rhs[k][jsize - 1][i], rhs[k][jsize][i]) is
 5739|       |         * inlined below */
 5740|       |//#pragma spf assert nomacro
 5741|   772k|        {
 5742|       |
 5743|       |          //---------------------------------------------------------------------
 5744|       |          // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 5745|       |          // $                  - lhs[ia][ablock][0][i]*
 5746|       |          //---------------------------------------------------------------------
 5747|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 5748|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] -
 5749|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 5750|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[0] -
 5751|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 5752|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[1] -
 5753|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 5754|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[2] -
 5755|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 5756|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[3] -
 5757|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 5758|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[4];
 5759|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 5760|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] -
 5761|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 5762|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[0] -
 5763|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 5764|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[1] -
 5765|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 5766|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[2] -
 5767|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 5768|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[3] -
 5769|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 5770|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[4];
 5771|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 5772|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] -
 5773|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 5774|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[0] -
 5775|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 5776|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[1] -
 5777|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 5778|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[2] -
 5779|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 5780|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[3] -
 5781|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 5782|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[4];
 5783|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 5784|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] -
 5785|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 5786|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[0] -
 5787|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 5788|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[1] -
 5789|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 5790|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[2] -
 5791|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 5792|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[3] -
 5793|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 5794|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[4];
 5795|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 5796|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] -
 5797|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 5798|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[0] -
 5799|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 5800|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[1] -
 5801|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 5802|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[2] -
 5803|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 5804|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[3] -
 5805|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 5806|   772k|                  (rhs[k][(grid_points[1] - 1) - 1][i])[4];
 5807|   772k|        }
 5808|       |
 5809|       |        //---------------------------------------------------------------------
 5810|       |        // B(jsize) = B(jsize) - C(jsize-1)*A(jsize)
 5811|       |        // matmul_sub(AA,i,jsize,k,c,
 5812|       |        // $              CC,i,jsize-1,k,c,BB,i,jsize,k)
 5813|       |        //---------------------------------------------------------------------
 5814|       |        /* matmul_sub(lhs[jsize][AA], lhs[jsize - 1][CC], lhs[jsize][BB]) is
 5815|       |         * inlined below */
 5816|       |//#pragma spf assert nomacro
 5817|   772k|        {
 5818|       |
 5819|   772k|          (lhs[(grid_points[1] - 1)][BB])[0][0] =
 5820|   772k|              (lhs[(grid_points[1] - 1)][BB])[0][0] -
 5821|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 5822|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][0] -
 5823|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 5824|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][1] -
 5825|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 5826|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][2] -
 5827|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 5828|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][3] -
 5829|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 5830|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][4];
 5831|   772k|          (lhs[(grid_points[1] - 1)][BB])[0][1] =
 5832|   772k|              (lhs[(grid_points[1] - 1)][BB])[0][1] -
 5833|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 5834|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][0] -
 5835|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 5836|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][1] -
 5837|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 5838|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][2] -
 5839|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 5840|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][3] -
 5841|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 5842|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][4];
 5843|   772k|          (lhs[(grid_points[1] - 1)][BB])[0][2] =
 5844|   772k|              (lhs[(grid_points[1] - 1)][BB])[0][2] -
 5845|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 5846|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][0] -
 5847|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 5848|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][1] -
 5849|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 5850|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][2] -
 5851|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 5852|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][3] -
 5853|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 5854|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][4];
 5855|   772k|          (lhs[(grid_points[1] - 1)][BB])[0][3] =
 5856|   772k|              (lhs[(grid_points[1] - 1)][BB])[0][3] -
 5857|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 5858|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][0] -
 5859|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 5860|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][1] -
 5861|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 5862|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][2] -
 5863|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 5864|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][3] -
 5865|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 5866|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][4];
 5867|   772k|          (lhs[(grid_points[1] - 1)][BB])[0][4] =
 5868|   772k|              (lhs[(grid_points[1] - 1)][BB])[0][4] -
 5869|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 5870|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][0] -
 5871|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 5872|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][1] -
 5873|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 5874|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][2] -
 5875|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 5876|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][3] -
 5877|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 5878|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[0][4];
 5879|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][0] =
 5880|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][0] -
 5881|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 5882|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][0] -
 5883|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 5884|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][1] -
 5885|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 5886|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][2] -
 5887|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 5888|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][3] -
 5889|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 5890|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][4];
 5891|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][1] =
 5892|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][1] -
 5893|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 5894|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][0] -
 5895|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 5896|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][1] -
 5897|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 5898|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][2] -
 5899|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 5900|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][3] -
 5901|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 5902|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][4];
 5903|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][2] =
 5904|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][2] -
 5905|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 5906|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][0] -
 5907|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 5908|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][1] -
 5909|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 5910|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][2] -
 5911|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 5912|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][3] -
 5913|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 5914|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][4];
 5915|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][3] =
 5916|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][3] -
 5917|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 5918|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][0] -
 5919|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 5920|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][1] -
 5921|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 5922|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][2] -
 5923|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 5924|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][3] -
 5925|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 5926|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][4];
 5927|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][4] =
 5928|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][4] -
 5929|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 5930|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][0] -
 5931|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 5932|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][1] -
 5933|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 5934|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][2] -
 5935|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 5936|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][3] -
 5937|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 5938|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[1][4];
 5939|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][0] =
 5940|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][0] -
 5941|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 5942|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][0] -
 5943|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 5944|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][1] -
 5945|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 5946|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][2] -
 5947|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 5948|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][3] -
 5949|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 5950|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][4];
 5951|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][1] =
 5952|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][1] -
 5953|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 5954|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][0] -
 5955|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 5956|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][1] -
 5957|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 5958|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][2] -
 5959|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 5960|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][3] -
 5961|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 5962|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][4];
 5963|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][2] =
 5964|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][2] -
 5965|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 5966|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][0] -
 5967|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 5968|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][1] -
 5969|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 5970|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][2] -
 5971|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 5972|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][3] -
 5973|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 5974|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][4];
 5975|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][3] =
 5976|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][3] -
 5977|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 5978|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][0] -
 5979|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 5980|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][1] -
 5981|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 5982|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][2] -
 5983|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 5984|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][3] -
 5985|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 5986|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][4];
 5987|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][4] =
 5988|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][4] -
 5989|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 5990|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][0] -
 5991|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 5992|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][1] -
 5993|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 5994|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][2] -
 5995|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 5996|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][3] -
 5997|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 5998|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[2][4];
 5999|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][0] =
 6000|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][0] -
 6001|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 6002|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][0] -
 6003|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 6004|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][1] -
 6005|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 6006|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][2] -
 6007|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 6008|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][3] -
 6009|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 6010|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][4];
 6011|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][1] =
 6012|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][1] -
 6013|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 6014|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][0] -
 6015|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 6016|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][1] -
 6017|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 6018|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][2] -
 6019|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 6020|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][3] -
 6021|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 6022|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][4];
 6023|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][2] =
 6024|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][2] -
 6025|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 6026|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][0] -
 6027|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 6028|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][1] -
 6029|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 6030|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][2] -
 6031|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 6032|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][3] -
 6033|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 6034|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][4];
 6035|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][3] =
 6036|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][3] -
 6037|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 6038|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][0] -
 6039|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 6040|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][1] -
 6041|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 6042|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][2] -
 6043|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 6044|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][3] -
 6045|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 6046|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][4];
 6047|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][4] =
 6048|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][4] -
 6049|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 6050|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][0] -
 6051|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 6052|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][1] -
 6053|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 6054|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][2] -
 6055|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 6056|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][3] -
 6057|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 6058|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[3][4];
 6059|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][0] =
 6060|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][0] -
 6061|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][0] *
 6062|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][0] -
 6063|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][0] *
 6064|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][1] -
 6065|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][0] *
 6066|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][2] -
 6067|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][0] *
 6068|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][3] -
 6069|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][0] *
 6070|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][4];
 6071|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][1] =
 6072|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][1] -
 6073|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][1] *
 6074|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][0] -
 6075|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][1] *
 6076|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][1] -
 6077|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][1] *
 6078|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][2] -
 6079|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][1] *
 6080|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][3] -
 6081|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][1] *
 6082|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][4];
 6083|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][2] =
 6084|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][2] -
 6085|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][2] *
 6086|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][0] -
 6087|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][2] *
 6088|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][1] -
 6089|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][2] *
 6090|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][2] -
 6091|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][2] *
 6092|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][3] -
 6093|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][2] *
 6094|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][4];
 6095|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][3] =
 6096|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][3] -
 6097|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][3] *
 6098|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][0] -
 6099|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][3] *
 6100|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][1] -
 6101|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][3] *
 6102|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][2] -
 6103|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][3] *
 6104|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][3] -
 6105|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][3] *
 6106|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][4];
 6107|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][4] =
 6108|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][4] -
 6109|   772k|              (lhs[(grid_points[1] - 1)][AA])[0][4] *
 6110|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][0] -
 6111|   772k|              (lhs[(grid_points[1] - 1)][AA])[1][4] *
 6112|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][1] -
 6113|   772k|              (lhs[(grid_points[1] - 1)][AA])[2][4] *
 6114|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][2] -
 6115|   772k|              (lhs[(grid_points[1] - 1)][AA])[3][4] *
 6116|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][3] -
 6117|   772k|              (lhs[(grid_points[1] - 1)][AA])[4][4] *
 6118|   772k|                  (lhs[(grid_points[1] - 1) - 1][CC])[4][4];
 6119|   772k|        }
 6120|       |
 6121|       |        //---------------------------------------------------------------------
 6122|       |        // multiply rhs(jsize) by b_inverse(jsize) and copy to rhs
 6123|       |        //---------------------------------------------------------------------
 6124|       |        /* binvrhs(lhs[jsize][BB], rhs[k][jsize][i]) is inlined below */
 6125|       |//#pragma spf assert nomacro
 6126|   772k|        {
 6127|       |
 6128|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][0] =
 6129|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][0] *
 6130|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[0][0]);
 6131|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][0] =
 6132|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][0] *
 6133|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[0][0]);
 6134|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][0] =
 6135|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][0] *
 6136|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[0][0]);
 6137|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][0] =
 6138|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][0] *
 6139|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[0][0]);
 6140|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 6141|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] *
 6142|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[0][0]);
 6143|       |
 6144|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][1] =
 6145|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][1] -
 6146|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][1]) *
 6147|   772k|                  (lhs[(grid_points[1] - 1)][BB])[1][0];
 6148|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][1] =
 6149|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][1] -
 6150|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][1]) *
 6151|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][0];
 6152|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][1] =
 6153|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][1] -
 6154|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][1]) *
 6155|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][0];
 6156|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][1] =
 6157|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][1] -
 6158|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][1]) *
 6159|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][0];
 6160|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 6161|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] -
 6162|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][1]) *
 6163|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[0];
 6164|       |
 6165|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][2] =
 6166|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][2] -
 6167|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][2]) *
 6168|   772k|                  (lhs[(grid_points[1] - 1)][BB])[1][0];
 6169|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][2] =
 6170|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][2] -
 6171|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][2]) *
 6172|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][0];
 6173|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][2] =
 6174|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][2] -
 6175|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][2]) *
 6176|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][0];
 6177|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][2] =
 6178|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][2] -
 6179|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][2]) *
 6180|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][0];
 6181|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 6182|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] -
 6183|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][2]) *
 6184|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[0];
 6185|       |
 6186|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][3] =
 6187|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][3] -
 6188|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][3]) *
 6189|   772k|                  (lhs[(grid_points[1] - 1)][BB])[1][0];
 6190|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][3] =
 6191|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][3] -
 6192|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][3]) *
 6193|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][0];
 6194|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][3] =
 6195|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][3] -
 6196|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][3]) *
 6197|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][0];
 6198|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][3] =
 6199|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][3] -
 6200|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][3]) *
 6201|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][0];
 6202|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 6203|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] -
 6204|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][3]) *
 6205|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[0];
 6206|       |
 6207|   772k|          (lhs[(grid_points[1] - 1)][BB])[1][4] =
 6208|   772k|              (lhs[(grid_points[1] - 1)][BB])[1][4] -
 6209|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][4]) *
 6210|   772k|                  (lhs[(grid_points[1] - 1)][BB])[1][0];
 6211|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][4] =
 6212|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][4] -
 6213|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][4]) *
 6214|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][0];
 6215|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][4] =
 6216|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][4] -
 6217|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][4]) *
 6218|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][0];
 6219|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][4] =
 6220|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][4] -
 6221|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][4]) *
 6222|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][0];
 6223|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 6224|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] -
 6225|   772k|              ((lhs[(grid_points[1] - 1)][BB])[0][4]) *
 6226|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[0];
 6227|       |
 6228|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][1] =
 6229|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][1] *
 6230|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[1][1]);
 6231|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][1] =
 6232|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][1] *
 6233|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[1][1]);
 6234|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][1] =
 6235|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][1] *
 6236|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[1][1]);
 6237|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 6238|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] *
 6239|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[1][1]);
 6240|       |
 6241|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][0] =
 6242|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][0] -
 6243|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][0]) *
 6244|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][1];
 6245|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][0] =
 6246|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][0] -
 6247|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][0]) *
 6248|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][1];
 6249|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][0] =
 6250|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][0] -
 6251|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][0]) *
 6252|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][1];
 6253|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 6254|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] -
 6255|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][0]) *
 6256|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[1];
 6257|       |
 6258|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][2] =
 6259|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][2] -
 6260|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][2]) *
 6261|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][1];
 6262|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][2] =
 6263|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][2] -
 6264|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][2]) *
 6265|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][1];
 6266|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][2] =
 6267|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][2] -
 6268|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][2]) *
 6269|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][1];
 6270|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 6271|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] -
 6272|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][2]) *
 6273|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[1];
 6274|       |
 6275|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][3] =
 6276|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][3] -
 6277|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][3]) *
 6278|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][1];
 6279|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][3] =
 6280|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][3] -
 6281|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][3]) *
 6282|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][1];
 6283|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][3] =
 6284|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][3] -
 6285|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][3]) *
 6286|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][1];
 6287|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 6288|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] -
 6289|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][3]) *
 6290|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[1];
 6291|       |
 6292|   772k|          (lhs[(grid_points[1] - 1)][BB])[2][4] =
 6293|   772k|              (lhs[(grid_points[1] - 1)][BB])[2][4] -
 6294|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][4]) *
 6295|   772k|                  (lhs[(grid_points[1] - 1)][BB])[2][1];
 6296|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][4] =
 6297|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][4] -
 6298|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][4]) *
 6299|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][1];
 6300|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][4] =
 6301|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][4] -
 6302|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][4]) *
 6303|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][1];
 6304|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 6305|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] -
 6306|   772k|              ((lhs[(grid_points[1] - 1)][BB])[1][4]) *
 6307|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[1];
 6308|       |
 6309|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][2] =
 6310|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][2] *
 6311|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[2][2]);
 6312|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][2] =
 6313|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][2] *
 6314|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[2][2]);
 6315|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 6316|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] *
 6317|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[2][2]);
 6318|       |
 6319|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][0] =
 6320|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][0] -
 6321|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][0]) *
 6322|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][2];
 6323|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][0] =
 6324|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][0] -
 6325|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][0]) *
 6326|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][2];
 6327|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 6328|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] -
 6329|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][0]) *
 6330|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[2];
 6331|       |
 6332|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][1] =
 6333|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][1] -
 6334|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][1]) *
 6335|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][2];
 6336|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][1] =
 6337|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][1] -
 6338|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][1]) *
 6339|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][2];
 6340|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 6341|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] -
 6342|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][1]) *
 6343|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[2];
 6344|       |
 6345|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][3] =
 6346|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][3] -
 6347|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][3]) *
 6348|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][2];
 6349|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][3] =
 6350|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][3] -
 6351|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][3]) *
 6352|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][2];
 6353|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 6354|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] -
 6355|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][3]) *
 6356|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[2];
 6357|       |
 6358|   772k|          (lhs[(grid_points[1] - 1)][BB])[3][4] =
 6359|   772k|              (lhs[(grid_points[1] - 1)][BB])[3][4] -
 6360|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][4]) *
 6361|   772k|                  (lhs[(grid_points[1] - 1)][BB])[3][2];
 6362|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][4] =
 6363|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][4] -
 6364|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][4]) *
 6365|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][2];
 6366|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 6367|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] -
 6368|   772k|              ((lhs[(grid_points[1] - 1)][BB])[2][4]) *
 6369|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[2];
 6370|       |
 6371|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][3] =
 6372|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][3] *
 6373|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[3][3]);
 6374|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 6375|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] *
 6376|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[3][3]);
 6377|       |
 6378|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][0] =
 6379|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][0] -
 6380|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][0]) *
 6381|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][3];
 6382|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 6383|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] -
 6384|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][0]) *
 6385|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[3];
 6386|       |
 6387|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][1] =
 6388|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][1] -
 6389|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][1]) *
 6390|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][3];
 6391|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 6392|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] -
 6393|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][1]) *
 6394|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[3];
 6395|       |
 6396|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][2] =
 6397|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][2] -
 6398|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][2]) *
 6399|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][3];
 6400|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 6401|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] -
 6402|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][2]) *
 6403|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[3];
 6404|       |
 6405|   772k|          (lhs[(grid_points[1] - 1)][BB])[4][4] =
 6406|   772k|              (lhs[(grid_points[1] - 1)][BB])[4][4] -
 6407|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][4]) *
 6408|   772k|                  (lhs[(grid_points[1] - 1)][BB])[4][3];
 6409|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 6410|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] -
 6411|   772k|              ((lhs[(grid_points[1] - 1)][BB])[3][4]) *
 6412|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[3];
 6413|       |
 6414|   772k|          (rhs[k][(grid_points[1] - 1)][i])[4] =
 6415|   772k|              (rhs[k][(grid_points[1] - 1)][i])[4] *
 6416|   772k|              (1.00 / (lhs[(grid_points[1] - 1)][BB])[4][4]);
 6417|       |
 6418|   772k|          (rhs[k][(grid_points[1] - 1)][i])[0] =
 6419|   772k|              (rhs[k][(grid_points[1] - 1)][i])[0] -
 6420|   772k|              ((lhs[(grid_points[1] - 1)][BB])[4][0]) *
 6421|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[4];
 6422|       |
 6423|   772k|          (rhs[k][(grid_points[1] - 1)][i])[1] =
 6424|   772k|              (rhs[k][(grid_points[1] - 1)][i])[1] -
 6425|   772k|              ((lhs[(grid_points[1] - 1)][BB])[4][1]) *
 6426|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[4];
 6427|       |
 6428|   772k|          (rhs[k][(grid_points[1] - 1)][i])[2] =
 6429|   772k|              (rhs[k][(grid_points[1] - 1)][i])[2] -
 6430|   772k|              ((lhs[(grid_points[1] - 1)][BB])[4][2]) *
 6431|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[4];
 6432|       |
 6433|   772k|          (rhs[k][(grid_points[1] - 1)][i])[3] =
 6434|   772k|              (rhs[k][(grid_points[1] - 1)][i])[3] -
 6435|   772k|              ((lhs[(grid_points[1] - 1)][BB])[4][3]) *
 6436|   772k|                  (rhs[k][(grid_points[1] - 1)][i])[4];
 6437|   772k|        }
 6438|       |
 6439|       |        //---------------------------------------------------------------------
 6440|       |        // back solve: if last cell, then generate U(jsize)=rhs(jsize)
 6441|       |        // else assume U(jsize) is loaded in un pack backsub_info
 6442|       |        // so just use it
 6443|       |        // after u(jstart) will be sent to next cell
 6444|       |        //---------------------------------------------------------------------
 6445|  49.4M|        for (j = (grid_points[1] - 1) - 1; j >= 0; j--) {
 6446|   292M|          for (m = 0; m < BLOCK_SIZE; m++) {
 6447|  1.46G|            for (n = 0; n < BLOCK_SIZE; n++) {
 6448|  1.21G|              rhs[k][j][i][m] =
 6449|  1.21G|                  rhs[k][j][i][m] - lhs[j][CC][n][m] * rhs[k][j + 1][i][n];
 6450|  1.21G|            }
 6451|   243M|          }
 6452|  48.6M|        }
 6453|   772k|      }
 6454|  12.4k|    }
 6455|    201|  }
 6456|    201|}
 6457|    201|  if (timeron)
 6458|      0|    timer_stop(t_ysolve);
 6459|    201|}
 6460|       |
 6461|       |//---------------------------------------------------------------------
 6462|       |// Performs line solves in Z direction by first factoring
 6463|       |// the block-tridiagonal matrix into an upper triangular matrix,
 6464|       |// and then performing back substitution to solve for the unknow
 6465|       |// vectors of each line.
 6466|       |//
 6467|       |// Make sure we treat elements zero to cell_size in the direction
 6468|       |// of the sweep.
 6469|       |//---------------------------------------------------------------------
 6470|    201|void z_solve() {
 6471|    201|  int i, j, k, m, n, ksize;
 6472|       |
 6473|       |  //---------------------------------------------------------------------
 6474|       |  //---------------------------------------------------------------------
 6475|       |
 6476|    201|  if (timeron)
 6477|      0|    timer_start(t_zsolve);
 6478|       |
 6479|       |  //---------------------------------------------------------------------
 6480|       |  //---------------------------------------------------------------------
 6481|       |
 6482|       |  //---------------------------------------------------------------------
 6483|       |  // This function computes the left hand side for the three z-factors
 6484|       |  //---------------------------------------------------------------------
 6485|       |
 6486|    201|  ksize = grid_points[2] - 1;
 6487|       |
 6488|       |//#pragma spf assert nomacro
 6489|    201|  {
 6490|       |    //---------------------------------------------------------------------
 6491|       |    // Compute the indices for storing the block-diagonal matrix;
 6492|       |    // determine c (labeled f) and s jacobians
 6493|       |    //---------------------------------------------------------------------
 6494|    201|#pragma dvm region
 6495|    201|{
 6496|    201|#pragma dvm parallel ([j][i] on rhs[][j][i][]) \
 6497|    201|            private(fjac, k, lhs, m, n, njac, tmp1, tmp2, tmp3)
 6498|  12.6k|    for (j = 1; j <= grid_points[1] - 2; j++) {
 6499|   785k|      for (i = 1; i <= grid_points[0] - 2; i++) {
 6500|  50.2M|        for (k = 0; k <= (grid_points[2] - 1); k++) {
 6501|  49.4M|          tmp1 = 1.0 / u[k][j][i][0];
 6502|  49.4M|          tmp2 = tmp1 * tmp1;
 6503|  49.4M|          tmp3 = tmp1 * tmp2;
 6504|       |
 6505|  49.4M|          fjac[k][0][0] = 0.0;
 6506|  49.4M|          fjac[k][1][0] = 0.0;
 6507|  49.4M|          fjac[k][2][0] = 0.0;
 6508|  49.4M|          fjac[k][3][0] = 1.0;
 6509|  49.4M|          fjac[k][4][0] = 0.0;
 6510|       |
 6511|  49.4M|          fjac[k][0][1] = -(u[k][j][i][1] * u[k][j][i][3]) * tmp2;
 6512|  49.4M|          fjac[k][1][1] = u[k][j][i][3] * tmp1;
 6513|  49.4M|          fjac[k][2][1] = 0.0;
 6514|  49.4M|          fjac[k][3][1] = u[k][j][i][1] * tmp1;
 6515|  49.4M|          fjac[k][4][1] = 0.0;
 6516|       |
 6517|  49.4M|          fjac[k][0][2] = -(u[k][j][i][2] * u[k][j][i][3]) * tmp2;
 6518|  49.4M|          fjac[k][1][2] = 0.0;
 6519|  49.4M|          fjac[k][2][2] = u[k][j][i][3] * tmp1;
 6520|  49.4M|          fjac[k][3][2] = u[k][j][i][2] * tmp1;
 6521|  49.4M|          fjac[k][4][2] = 0.0;
 6522|       |
 6523|  49.4M|          fjac[k][0][3] =
 6524|  49.4M|              -(u[k][j][i][3] * u[k][j][i][3] * tmp2) + c2 * qs[k][j][i];
 6525|  49.4M|          fjac[k][1][3] = -c2 * u[k][j][i][1] * tmp1;
 6526|  49.4M|          fjac[k][2][3] = -c2 * u[k][j][i][2] * tmp1;
 6527|  49.4M|          fjac[k][3][3] = (2.0 - c2) * u[k][j][i][3] * tmp1;
 6528|  49.4M|          fjac[k][4][3] = c2;
 6529|       |
 6530|  49.4M|          fjac[k][0][4] = (c2 * 2.0 * square[k][j][i] - c1 * u[k][j][i][4]) *
 6531|  49.4M|                          u[k][j][i][3] * tmp2;
 6532|  49.4M|          fjac[k][1][4] = -c2 * (u[k][j][i][1] * u[k][j][i][3]) * tmp2;
 6533|  49.4M|          fjac[k][2][4] = -c2 * (u[k][j][i][2] * u[k][j][i][3]) * tmp2;
 6534|  49.4M|          fjac[k][3][4] =
 6535|  49.4M|              c1 * (u[k][j][i][4] * tmp1) -
 6536|  49.4M|              c2 * (qs[k][j][i] + u[k][j][i][3] * u[k][j][i][3] * tmp2);
 6537|  49.4M|          fjac[k][4][4] = c1 * u[k][j][i][3] * tmp1;
 6538|       |
 6539|  49.4M|          njac[k][0][0] = 0.0;
 6540|  49.4M|          njac[k][1][0] = 0.0;
 6541|  49.4M|          njac[k][2][0] = 0.0;
 6542|  49.4M|          njac[k][3][0] = 0.0;
 6543|  49.4M|          njac[k][4][0] = 0.0;
 6544|       |
 6545|  49.4M|          njac[k][0][1] = -c3c4 * tmp2 * u[k][j][i][1];
 6546|  49.4M|          njac[k][1][1] = c3c4 * tmp1;
 6547|  49.4M|          njac[k][2][1] = 0.0;
 6548|  49.4M|          njac[k][3][1] = 0.0;
 6549|  49.4M|          njac[k][4][1] = 0.0;
 6550|       |
 6551|  49.4M|          njac[k][0][2] = -c3c4 * tmp2 * u[k][j][i][2];
 6552|  49.4M|          njac[k][1][2] = 0.0;
 6553|  49.4M|          njac[k][2][2] = c3c4 * tmp1;
 6554|  49.4M|          njac[k][3][2] = 0.0;
 6555|  49.4M|          njac[k][4][2] = 0.0;
 6556|       |
 6557|  49.4M|          njac[k][0][3] = -con43 * c3c4 * tmp2 * u[k][j][i][3];
 6558|  49.4M|          njac[k][1][3] = 0.0;
 6559|  49.4M|          njac[k][2][3] = 0.0;
 6560|  49.4M|          njac[k][3][3] = con43 * c3 * c4 * tmp1;
 6561|  49.4M|          njac[k][4][3] = 0.0;
 6562|       |
 6563|  49.4M|          njac[k][0][4] =
 6564|  49.4M|              -(c3c4 - c1345) * tmp3 * (u[k][j][i][1] * u[k][j][i][1]) -
 6565|  49.4M|              (c3c4 - c1345) * tmp3 * (u[k][j][i][2] * u[k][j][i][2]) -
 6566|  49.4M|              (con43 * c3c4 - c1345) * tmp3 * (u[k][j][i][3] * u[k][j][i][3]) -
 6567|  49.4M|              c1345 * tmp2 * u[k][j][i][4];
 6568|       |
 6569|  49.4M|          njac[k][1][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][1];
 6570|  49.4M|          njac[k][2][4] = (c3c4 - c1345) * tmp2 * u[k][j][i][2];
 6571|  49.4M|          njac[k][3][4] = (con43 * c3c4 - c1345) * tmp2 * u[k][j][i][3];
 6572|  49.4M|          njac[k][4][4] = (c1345)*tmp1;
 6573|  49.4M|        }
 6574|       |
 6575|       |        //---------------------------------------------------------------------
 6576|       |        // now jacobians set, so form left hand side in z direction
 6577|       |        //---------------------------------------------------------------------
 6578|       |        /* lhsinit(lhs, ksize) is inlined below */
 6579|       |//#pragma spf assert nomacro
 6580|   772k|        {
 6581|       |
 6582|   772k|          int size2 = ksize;
 6583|   772k|          int i, m, n;
 6584|       |
 6585|   772k|          i = size2;
 6586|       |          //---------------------------------------------------------------------
 6587|       |          // zero the whole left hand side for starters
 6588|       |          //---------------------------------------------------------------------
 6589|  4.63M|          for (n = 0; n < 5; n++) {
 6590|  23.1M|            for (m = 0; m < 5; m++) {
 6591|  19.3M|              lhs[0][0][n][m] = 0.0;
 6592|  19.3M|              lhs[0][1][n][m] = 0.0;
 6593|  19.3M|              lhs[0][2][n][m] = 0.0;
 6594|  19.3M|              lhs[(grid_points[2] - 1)][0][n][m] = 0.0;
 6595|  19.3M|              lhs[(grid_points[2] - 1)][1][n][m] = 0.0;
 6596|  19.3M|              lhs[(grid_points[2] - 1)][2][n][m] = 0.0;
 6597|  19.3M|            }
 6598|  3.86M|          }
 6599|       |
 6600|       |          //---------------------------------------------------------------------
 6601|       |          // next, set all diagonal values to 1. This is overkill, but
 6602|       |          // convenient
 6603|       |          //---------------------------------------------------------------------
 6604|  4.63M|          for (m = 0; m < 5; m++) {
 6605|  3.86M|            lhs[0][1][m][m] = 1.0;
 6606|  3.86M|            lhs[(grid_points[2] - 1)][1][m][m] = 1.0;
 6607|  3.86M|          }
 6608|   772k|        }
 6609|       |
 6610|  48.6M|        for (k = 1; k <= (grid_points[2] - 1) - 1; k++) {
 6611|  47.9M|          tmp1 = dt * tz1;
 6612|  47.9M|          tmp2 = dt * tz2;
 6613|       |
 6614|  47.9M|          lhs[k][AA][0][0] =
 6615|  47.9M|              -tmp2 * fjac[k - 1][0][0] - tmp1 * njac[k - 1][0][0] - tmp1 * dz1;
 6616|  47.9M|          lhs[k][AA][1][0] =
 6617|  47.9M|              -tmp2 * fjac[k - 1][1][0] - tmp1 * njac[k - 1][1][0];
 6618|  47.9M|          lhs[k][AA][2][0] =
 6619|  47.9M|              -tmp2 * fjac[k - 1][2][0] - tmp1 * njac[k - 1][2][0];
 6620|  47.9M|          lhs[k][AA][3][0] =
 6621|  47.9M|              -tmp2 * fjac[k - 1][3][0] - tmp1 * njac[k - 1][3][0];
 6622|  47.9M|          lhs[k][AA][4][0] =
 6623|  47.9M|              -tmp2 * fjac[k - 1][4][0] - tmp1 * njac[k - 1][4][0];
 6624|       |
 6625|  47.9M|          lhs[k][AA][0][1] =
 6626|  47.9M|              -tmp2 * fjac[k - 1][0][1] - tmp1 * njac[k - 1][0][1];
 6627|  47.9M|          lhs[k][AA][1][1] =
 6628|  47.9M|              -tmp2 * fjac[k - 1][1][1] - tmp1 * njac[k - 1][1][1] - tmp1 * dz2;
 6629|  47.9M|          lhs[k][AA][2][1] =
 6630|  47.9M|              -tmp2 * fjac[k - 1][2][1] - tmp1 * njac[k - 1][2][1];
 6631|  47.9M|          lhs[k][AA][3][1] =
 6632|  47.9M|              -tmp2 * fjac[k - 1][3][1] - tmp1 * njac[k - 1][3][1];
 6633|  47.9M|          lhs[k][AA][4][1] =
 6634|  47.9M|              -tmp2 * fjac[k - 1][4][1] - tmp1 * njac[k - 1][4][1];
 6635|       |
 6636|  47.9M|          lhs[k][AA][0][2] =
 6637|  47.9M|              -tmp2 * fjac[k - 1][0][2] - tmp1 * njac[k - 1][0][2];
 6638|  47.9M|          lhs[k][AA][1][2] =
 6639|  47.9M|              -tmp2 * fjac[k - 1][1][2] - tmp1 * njac[k - 1][1][2];
 6640|  47.9M|          lhs[k][AA][2][2] =
 6641|  47.9M|              -tmp2 * fjac[k - 1][2][2] - tmp1 * njac[k - 1][2][2] - tmp1 * dz3;
 6642|  47.9M|          lhs[k][AA][3][2] =
 6643|  47.9M|              -tmp2 * fjac[k - 1][3][2] - tmp1 * njac[k - 1][3][2];
 6644|  47.9M|          lhs[k][AA][4][2] =
 6645|  47.9M|              -tmp2 * fjac[k - 1][4][2] - tmp1 * njac[k - 1][4][2];
 6646|       |
 6647|  47.9M|          lhs[k][AA][0][3] =
 6648|  47.9M|              -tmp2 * fjac[k - 1][0][3] - tmp1 * njac[k - 1][0][3];
 6649|  47.9M|          lhs[k][AA][1][3] =
 6650|  47.9M|              -tmp2 * fjac[k - 1][1][3] - tmp1 * njac[k - 1][1][3];
 6651|  47.9M|          lhs[k][AA][2][3] =
 6652|  47.9M|              -tmp2 * fjac[k - 1][2][3] - tmp1 * njac[k - 1][2][3];
 6653|  47.9M|          lhs[k][AA][3][3] =
 6654|  47.9M|              -tmp2 * fjac[k - 1][3][3] - tmp1 * njac[k - 1][3][3] - tmp1 * dz4;
 6655|  47.9M|          lhs[k][AA][4][3] =
 6656|  47.9M|              -tmp2 * fjac[k - 1][4][3] - tmp1 * njac[k - 1][4][3];
 6657|       |
 6658|  47.9M|          lhs[k][AA][0][4] =
 6659|  47.9M|              -tmp2 * fjac[k - 1][0][4] - tmp1 * njac[k - 1][0][4];
 6660|  47.9M|          lhs[k][AA][1][4] =
 6661|  47.9M|              -tmp2 * fjac[k - 1][1][4] - tmp1 * njac[k - 1][1][4];
 6662|  47.9M|          lhs[k][AA][2][4] =
 6663|  47.9M|              -tmp2 * fjac[k - 1][2][4] - tmp1 * njac[k - 1][2][4];
 6664|  47.9M|          lhs[k][AA][3][4] =
 6665|  47.9M|              -tmp2 * fjac[k - 1][3][4] - tmp1 * njac[k - 1][3][4];
 6666|  47.9M|          lhs[k][AA][4][4] =
 6667|  47.9M|              -tmp2 * fjac[k - 1][4][4] - tmp1 * njac[k - 1][4][4] - tmp1 * dz5;
 6668|       |
 6669|  47.9M|          lhs[k][BB][0][0] =
 6670|  47.9M|              1.0 + tmp1 * 2.0 * njac[k][0][0] + tmp1 * 2.0 * dz1;
 6671|  47.9M|          lhs[k][BB][1][0] = tmp1 * 2.0 * njac[k][1][0];
 6672|  47.9M|          lhs[k][BB][2][0] = tmp1 * 2.0 * njac[k][2][0];
 6673|  47.9M|          lhs[k][BB][3][0] = tmp1 * 2.0 * njac[k][3][0];
 6674|  47.9M|          lhs[k][BB][4][0] = tmp1 * 2.0 * njac[k][4][0];
 6675|       |
 6676|  47.9M|          lhs[k][BB][0][1] = tmp1 * 2.0 * njac[k][0][1];
 6677|  47.9M|          lhs[k][BB][1][1] =
 6678|  47.9M|              1.0 + tmp1 * 2.0 * njac[k][1][1] + tmp1 * 2.0 * dz2;
 6679|  47.9M|          lhs[k][BB][2][1] = tmp1 * 2.0 * njac[k][2][1];
 6680|  47.9M|          lhs[k][BB][3][1] = tmp1 * 2.0 * njac[k][3][1];
 6681|  47.9M|          lhs[k][BB][4][1] = tmp1 * 2.0 * njac[k][4][1];
 6682|       |
 6683|  47.9M|          lhs[k][BB][0][2] = tmp1 * 2.0 * njac[k][0][2];
 6684|  47.9M|          lhs[k][BB][1][2] = tmp1 * 2.0 * njac[k][1][2];
 6685|  47.9M|          lhs[k][BB][2][2] =
 6686|  47.9M|              1.0 + tmp1 * 2.0 * njac[k][2][2] + tmp1 * 2.0 * dz3;
 6687|  47.9M|          lhs[k][BB][3][2] = tmp1 * 2.0 * njac[k][3][2];
 6688|  47.9M|          lhs[k][BB][4][2] = tmp1 * 2.0 * njac[k][4][2];
 6689|       |
 6690|  47.9M|          lhs[k][BB][0][3] = tmp1 * 2.0 * njac[k][0][3];
 6691|  47.9M|          lhs[k][BB][1][3] = tmp1 * 2.0 * njac[k][1][3];
 6692|  47.9M|          lhs[k][BB][2][3] = tmp1 * 2.0 * njac[k][2][3];
 6693|  47.9M|          lhs[k][BB][3][3] =
 6694|  47.9M|              1.0 + tmp1 * 2.0 * njac[k][3][3] + tmp1 * 2.0 * dz4;
 6695|  47.9M|          lhs[k][BB][4][3] = tmp1 * 2.0 * njac[k][4][3];
 6696|       |
 6697|  47.9M|          lhs[k][BB][0][4] = tmp1 * 2.0 * njac[k][0][4];
 6698|  47.9M|          lhs[k][BB][1][4] = tmp1 * 2.0 * njac[k][1][4];
 6699|  47.9M|          lhs[k][BB][2][4] = tmp1 * 2.0 * njac[k][2][4];
 6700|  47.9M|          lhs[k][BB][3][4] = tmp1 * 2.0 * njac[k][3][4];
 6701|  47.9M|          lhs[k][BB][4][4] =
 6702|  47.9M|              1.0 + tmp1 * 2.0 * njac[k][4][4] + tmp1 * 2.0 * dz5;
 6703|       |
 6704|  47.9M|          lhs[k][CC][0][0] =
 6705|  47.9M|              tmp2 * fjac[k + 1][0][0] - tmp1 * njac[k + 1][0][0] - tmp1 * dz1;
 6706|  47.9M|          lhs[k][CC][1][0] =
 6707|  47.9M|              tmp2 * fjac[k + 1][1][0] - tmp1 * njac[k + 1][1][0];
 6708|  47.9M|          lhs[k][CC][2][0] =
 6709|  47.9M|              tmp2 * fjac[k + 1][2][0] - tmp1 * njac[k + 1][2][0];
 6710|  47.9M|          lhs[k][CC][3][0] =
 6711|  47.9M|              tmp2 * fjac[k + 1][3][0] - tmp1 * njac[k + 1][3][0];
 6712|  47.9M|          lhs[k][CC][4][0] =
 6713|  47.9M|              tmp2 * fjac[k + 1][4][0] - tmp1 * njac[k + 1][4][0];
 6714|       |
 6715|  47.9M|          lhs[k][CC][0][1] =
 6716|  47.9M|              tmp2 * fjac[k + 1][0][1] - tmp1 * njac[k + 1][0][1];
 6717|  47.9M|          lhs[k][CC][1][1] =
 6718|  47.9M|              tmp2 * fjac[k + 1][1][1] - tmp1 * njac[k + 1][1][1] - tmp1 * dz2;
 6719|  47.9M|          lhs[k][CC][2][1] =
 6720|  47.9M|              tmp2 * fjac[k + 1][2][1] - tmp1 * njac[k + 1][2][1];
 6721|  47.9M|          lhs[k][CC][3][1] =
 6722|  47.9M|              tmp2 * fjac[k + 1][3][1] - tmp1 * njac[k + 1][3][1];
 6723|  47.9M|          lhs[k][CC][4][1] =
 6724|  47.9M|              tmp2 * fjac[k + 1][4][1] - tmp1 * njac[k + 1][4][1];
 6725|       |
 6726|  47.9M|          lhs[k][CC][0][2] =
 6727|  47.9M|              tmp2 * fjac[k + 1][0][2] - tmp1 * njac[k + 1][0][2];
 6728|  47.9M|          lhs[k][CC][1][2] =
 6729|  47.9M|              tmp2 * fjac[k + 1][1][2] - tmp1 * njac[k + 1][1][2];
 6730|  47.9M|          lhs[k][CC][2][2] =
 6731|  47.9M|              tmp2 * fjac[k + 1][2][2] - tmp1 * njac[k + 1][2][2] - tmp1 * dz3;
 6732|  47.9M|          lhs[k][CC][3][2] =
 6733|  47.9M|              tmp2 * fjac[k + 1][3][2] - tmp1 * njac[k + 1][3][2];
 6734|  47.9M|          lhs[k][CC][4][2] =
 6735|  47.9M|              tmp2 * fjac[k + 1][4][2] - tmp1 * njac[k + 1][4][2];
 6736|       |
 6737|  47.9M|          lhs[k][CC][0][3] =
 6738|  47.9M|              tmp2 * fjac[k + 1][0][3] - tmp1 * njac[k + 1][0][3];
 6739|  47.9M|          lhs[k][CC][1][3] =
 6740|  47.9M|              tmp2 * fjac[k + 1][1][3] - tmp1 * njac[k + 1][1][3];
 6741|  47.9M|          lhs[k][CC][2][3] =
 6742|  47.9M|              tmp2 * fjac[k + 1][2][3] - tmp1 * njac[k + 1][2][3];
 6743|  47.9M|          lhs[k][CC][3][3] =
 6744|  47.9M|              tmp2 * fjac[k + 1][3][3] - tmp1 * njac[k + 1][3][3] - tmp1 * dz4;
 6745|  47.9M|          lhs[k][CC][4][3] =
 6746|  47.9M|              tmp2 * fjac[k + 1][4][3] - tmp1 * njac[k + 1][4][3];
 6747|       |
 6748|  47.9M|          lhs[k][CC][0][4] =
 6749|  47.9M|              tmp2 * fjac[k + 1][0][4] - tmp1 * njac[k + 1][0][4];
 6750|  47.9M|          lhs[k][CC][1][4] =
 6751|  47.9M|              tmp2 * fjac[k + 1][1][4] - tmp1 * njac[k + 1][1][4];
 6752|  47.9M|          lhs[k][CC][2][4] =
 6753|  47.9M|              tmp2 * fjac[k + 1][2][4] - tmp1 * njac[k + 1][2][4];
 6754|  47.9M|          lhs[k][CC][3][4] =
 6755|  47.9M|              tmp2 * fjac[k + 1][3][4] - tmp1 * njac[k + 1][3][4];
 6756|  47.9M|          lhs[k][CC][4][4] =
 6757|  47.9M|              tmp2 * fjac[k + 1][4][4] - tmp1 * njac[k + 1][4][4] - tmp1 * dz5;
 6758|  47.9M|        }
 6759|       |
 6760|       |        //---------------------------------------------------------------------
 6761|       |        //---------------------------------------------------------------------
 6762|       |
 6763|       |        //---------------------------------------------------------------------
 6764|       |        // performs guaussian elimination on this cell.
 6765|       |        //
 6766|       |        // assumes that unpacking routines for non-first cells
 6767|       |        // preload C' and rhs' from previous cell.
 6768|       |        //
 6769|       |        // assumed send happens outside this routine, but that
 6770|       |        // c'(KMAX) and rhs'(KMAX) will be sent to next cell.
 6771|       |        //---------------------------------------------------------------------
 6772|       |
 6773|       |        //---------------------------------------------------------------------
 6774|       |        // outer most do loops - sweeping in i direction
 6775|       |        //---------------------------------------------------------------------
 6776|       |
 6777|       |        //---------------------------------------------------------------------
 6778|       |        // multiply c[0][j][i] by b_inverse and copy back to c
 6779|       |        // multiply rhs(0) by b_inverse(0) and copy to rhs
 6780|       |        //---------------------------------------------------------------------
 6781|       |        /* binvcrhs(lhs[0][BB], lhs[0][CC], rhs[0][j][i]) is inlined below */
 6782|       |//#pragma spf assert nomacro
 6783|   772k|        {
 6784|       |
 6785|   772k|          lhs[0][1][1][0] = lhs[0][1][1][0] * (1.00 / lhs[0][1][0][0]);
 6786|   772k|          lhs[0][1][2][0] = lhs[0][1][2][0] * (1.00 / lhs[0][1][0][0]);
 6787|   772k|          lhs[0][1][3][0] = lhs[0][1][3][0] * (1.00 / lhs[0][1][0][0]);
 6788|   772k|          lhs[0][1][4][0] = lhs[0][1][4][0] * (1.00 / lhs[0][1][0][0]);
 6789|   772k|          lhs[0][2][0][0] = lhs[0][2][0][0] * (1.00 / lhs[0][1][0][0]);
 6790|   772k|          lhs[0][2][1][0] = lhs[0][2][1][0] * (1.00 / lhs[0][1][0][0]);
 6791|   772k|          lhs[0][2][2][0] = lhs[0][2][2][0] * (1.00 / lhs[0][1][0][0]);
 6792|   772k|          lhs[0][2][3][0] = lhs[0][2][3][0] * (1.00 / lhs[0][1][0][0]);
 6793|   772k|          lhs[0][2][4][0] = lhs[0][2][4][0] * (1.00 / lhs[0][1][0][0]);
 6794|   772k|          (rhs[0][j][i])[0] = (rhs[0][j][i])[0] * (1.00 / lhs[0][1][0][0]);
 6795|       |
 6796|   772k|          lhs[0][1][1][1] =
 6797|   772k|              lhs[0][1][1][1] - (lhs[0][1][0][1]) * lhs[0][1][1][0];
 6798|   772k|          lhs[0][1][2][1] =
 6799|   772k|              lhs[0][1][2][1] - (lhs[0][1][0][1]) * lhs[0][1][2][0];
 6800|   772k|          lhs[0][1][3][1] =
 6801|   772k|              lhs[0][1][3][1] - (lhs[0][1][0][1]) * lhs[0][1][3][0];
 6802|   772k|          lhs[0][1][4][1] =
 6803|   772k|              lhs[0][1][4][1] - (lhs[0][1][0][1]) * lhs[0][1][4][0];
 6804|   772k|          lhs[0][2][0][1] =
 6805|   772k|              lhs[0][2][0][1] - (lhs[0][1][0][1]) * lhs[0][2][0][0];
 6806|   772k|          lhs[0][2][1][1] =
 6807|   772k|              lhs[0][2][1][1] - (lhs[0][1][0][1]) * lhs[0][2][1][0];
 6808|   772k|          lhs[0][2][2][1] =
 6809|   772k|              lhs[0][2][2][1] - (lhs[0][1][0][1]) * lhs[0][2][2][0];
 6810|   772k|          lhs[0][2][3][1] =
 6811|   772k|              lhs[0][2][3][1] - (lhs[0][1][0][1]) * lhs[0][2][3][0];
 6812|   772k|          lhs[0][2][4][1] =
 6813|   772k|              lhs[0][2][4][1] - (lhs[0][1][0][1]) * lhs[0][2][4][0];
 6814|   772k|          (rhs[0][j][i])[1] =
 6815|   772k|              (rhs[0][j][i])[1] - (lhs[0][1][0][1]) * (rhs[0][j][i])[0];
 6816|       |
 6817|   772k|          lhs[0][1][1][2] =
 6818|   772k|              lhs[0][1][1][2] - (lhs[0][1][0][2]) * lhs[0][1][1][0];
 6819|   772k|          lhs[0][1][2][2] =
 6820|   772k|              lhs[0][1][2][2] - (lhs[0][1][0][2]) * lhs[0][1][2][0];
 6821|   772k|          lhs[0][1][3][2] =
 6822|   772k|              lhs[0][1][3][2] - (lhs[0][1][0][2]) * lhs[0][1][3][0];
 6823|   772k|          lhs[0][1][4][2] =
 6824|   772k|              lhs[0][1][4][2] - (lhs[0][1][0][2]) * lhs[0][1][4][0];
 6825|   772k|          lhs[0][2][0][2] =
 6826|   772k|              lhs[0][2][0][2] - (lhs[0][1][0][2]) * lhs[0][2][0][0];
 6827|   772k|          lhs[0][2][1][2] =
 6828|   772k|              lhs[0][2][1][2] - (lhs[0][1][0][2]) * lhs[0][2][1][0];
 6829|   772k|          lhs[0][2][2][2] =
 6830|   772k|              lhs[0][2][2][2] - (lhs[0][1][0][2]) * lhs[0][2][2][0];
 6831|   772k|          lhs[0][2][3][2] =
 6832|   772k|              lhs[0][2][3][2] - (lhs[0][1][0][2]) * lhs[0][2][3][0];
 6833|   772k|          lhs[0][2][4][2] =
 6834|   772k|              lhs[0][2][4][2] - (lhs[0][1][0][2]) * lhs[0][2][4][0];
 6835|   772k|          (rhs[0][j][i])[2] =
 6836|   772k|              (rhs[0][j][i])[2] - (lhs[0][1][0][2]) * (rhs[0][j][i])[0];
 6837|       |
 6838|   772k|          lhs[0][1][1][3] =
 6839|   772k|              lhs[0][1][1][3] - (lhs[0][1][0][3]) * lhs[0][1][1][0];
 6840|   772k|          lhs[0][1][2][3] =
 6841|   772k|              lhs[0][1][2][3] - (lhs[0][1][0][3]) * lhs[0][1][2][0];
 6842|   772k|          lhs[0][1][3][3] =
 6843|   772k|              lhs[0][1][3][3] - (lhs[0][1][0][3]) * lhs[0][1][3][0];
 6844|   772k|          lhs[0][1][4][3] =
 6845|   772k|              lhs[0][1][4][3] - (lhs[0][1][0][3]) * lhs[0][1][4][0];
 6846|   772k|          lhs[0][2][0][3] =
 6847|   772k|              lhs[0][2][0][3] - (lhs[0][1][0][3]) * lhs[0][2][0][0];
 6848|   772k|          lhs[0][2][1][3] =
 6849|   772k|              lhs[0][2][1][3] - (lhs[0][1][0][3]) * lhs[0][2][1][0];
 6850|   772k|          lhs[0][2][2][3] =
 6851|   772k|              lhs[0][2][2][3] - (lhs[0][1][0][3]) * lhs[0][2][2][0];
 6852|   772k|          lhs[0][2][3][3] =
 6853|   772k|              lhs[0][2][3][3] - (lhs[0][1][0][3]) * lhs[0][2][3][0];
 6854|   772k|          lhs[0][2][4][3] =
 6855|   772k|              lhs[0][2][4][3] - (lhs[0][1][0][3]) * lhs[0][2][4][0];
 6856|   772k|          (rhs[0][j][i])[3] =
 6857|   772k|              (rhs[0][j][i])[3] - (lhs[0][1][0][3]) * (rhs[0][j][i])[0];
 6858|       |
 6859|   772k|          lhs[0][1][1][4] =
 6860|   772k|              lhs[0][1][1][4] - (lhs[0][1][0][4]) * lhs[0][1][1][0];
 6861|   772k|          lhs[0][1][2][4] =
 6862|   772k|              lhs[0][1][2][4] - (lhs[0][1][0][4]) * lhs[0][1][2][0];
 6863|   772k|          lhs[0][1][3][4] =
 6864|   772k|              lhs[0][1][3][4] - (lhs[0][1][0][4]) * lhs[0][1][3][0];
 6865|   772k|          lhs[0][1][4][4] =
 6866|   772k|              lhs[0][1][4][4] - (lhs[0][1][0][4]) * lhs[0][1][4][0];
 6867|   772k|          lhs[0][2][0][4] =
 6868|   772k|              lhs[0][2][0][4] - (lhs[0][1][0][4]) * lhs[0][2][0][0];
 6869|   772k|          lhs[0][2][1][4] =
 6870|   772k|              lhs[0][2][1][4] - (lhs[0][1][0][4]) * lhs[0][2][1][0];
 6871|   772k|          lhs[0][2][2][4] =
 6872|   772k|              lhs[0][2][2][4] - (lhs[0][1][0][4]) * lhs[0][2][2][0];
 6873|   772k|          lhs[0][2][3][4] =
 6874|   772k|              lhs[0][2][3][4] - (lhs[0][1][0][4]) * lhs[0][2][3][0];
 6875|   772k|          lhs[0][2][4][4] =
 6876|   772k|              lhs[0][2][4][4] - (lhs[0][1][0][4]) * lhs[0][2][4][0];
 6877|   772k|          (rhs[0][j][i])[4] =
 6878|   772k|              (rhs[0][j][i])[4] - (lhs[0][1][0][4]) * (rhs[0][j][i])[0];
 6879|       |
 6880|   772k|          lhs[0][1][2][1] = lhs[0][1][2][1] * (1.00 / lhs[0][1][1][1]);
 6881|   772k|          lhs[0][1][3][1] = lhs[0][1][3][1] * (1.00 / lhs[0][1][1][1]);
 6882|   772k|          lhs[0][1][4][1] = lhs[0][1][4][1] * (1.00 / lhs[0][1][1][1]);
 6883|   772k|          lhs[0][2][0][1] = lhs[0][2][0][1] * (1.00 / lhs[0][1][1][1]);
 6884|   772k|          lhs[0][2][1][1] = lhs[0][2][1][1] * (1.00 / lhs[0][1][1][1]);
 6885|   772k|          lhs[0][2][2][1] = lhs[0][2][2][1] * (1.00 / lhs[0][1][1][1]);
 6886|   772k|          lhs[0][2][3][1] = lhs[0][2][3][1] * (1.00 / lhs[0][1][1][1]);
 6887|   772k|          lhs[0][2][4][1] = lhs[0][2][4][1] * (1.00 / lhs[0][1][1][1]);
 6888|   772k|          (rhs[0][j][i])[1] = (rhs[0][j][i])[1] * (1.00 / lhs[0][1][1][1]);
 6889|       |
 6890|   772k|          lhs[0][1][2][0] =
 6891|   772k|              lhs[0][1][2][0] - (lhs[0][1][1][0]) * lhs[0][1][2][1];
 6892|   772k|          lhs[0][1][3][0] =
 6893|   772k|              lhs[0][1][3][0] - (lhs[0][1][1][0]) * lhs[0][1][3][1];
 6894|   772k|          lhs[0][1][4][0] =
 6895|   772k|              lhs[0][1][4][0] - (lhs[0][1][1][0]) * lhs[0][1][4][1];
 6896|   772k|          lhs[0][2][0][0] =
 6897|   772k|              lhs[0][2][0][0] - (lhs[0][1][1][0]) * lhs[0][2][0][1];
 6898|   772k|          lhs[0][2][1][0] =
 6899|   772k|              lhs[0][2][1][0] - (lhs[0][1][1][0]) * lhs[0][2][1][1];
 6900|   772k|          lhs[0][2][2][0] =
 6901|   772k|              lhs[0][2][2][0] - (lhs[0][1][1][0]) * lhs[0][2][2][1];
 6902|   772k|          lhs[0][2][3][0] =
 6903|   772k|              lhs[0][2][3][0] - (lhs[0][1][1][0]) * lhs[0][2][3][1];
 6904|   772k|          lhs[0][2][4][0] =
 6905|   772k|              lhs[0][2][4][0] - (lhs[0][1][1][0]) * lhs[0][2][4][1];
 6906|   772k|          (rhs[0][j][i])[0] =
 6907|   772k|              (rhs[0][j][i])[0] - (lhs[0][1][1][0]) * (rhs[0][j][i])[1];
 6908|       |
 6909|   772k|          lhs[0][1][2][2] =
 6910|   772k|              lhs[0][1][2][2] - (lhs[0][1][1][2]) * lhs[0][1][2][1];
 6911|   772k|          lhs[0][1][3][2] =
 6912|   772k|              lhs[0][1][3][2] - (lhs[0][1][1][2]) * lhs[0][1][3][1];
 6913|   772k|          lhs[0][1][4][2] =
 6914|   772k|              lhs[0][1][4][2] - (lhs[0][1][1][2]) * lhs[0][1][4][1];
 6915|   772k|          lhs[0][2][0][2] =
 6916|   772k|              lhs[0][2][0][2] - (lhs[0][1][1][2]) * lhs[0][2][0][1];
 6917|   772k|          lhs[0][2][1][2] =
 6918|   772k|              lhs[0][2][1][2] - (lhs[0][1][1][2]) * lhs[0][2][1][1];
 6919|   772k|          lhs[0][2][2][2] =
 6920|   772k|              lhs[0][2][2][2] - (lhs[0][1][1][2]) * lhs[0][2][2][1];
 6921|   772k|          lhs[0][2][3][2] =
 6922|   772k|              lhs[0][2][3][2] - (lhs[0][1][1][2]) * lhs[0][2][3][1];
 6923|   772k|          lhs[0][2][4][2] =
 6924|   772k|              lhs[0][2][4][2] - (lhs[0][1][1][2]) * lhs[0][2][4][1];
 6925|   772k|          (rhs[0][j][i])[2] =
 6926|   772k|              (rhs[0][j][i])[2] - (lhs[0][1][1][2]) * (rhs[0][j][i])[1];
 6927|       |
 6928|   772k|          lhs[0][1][2][3] =
 6929|   772k|              lhs[0][1][2][3] - (lhs[0][1][1][3]) * lhs[0][1][2][1];
 6930|   772k|          lhs[0][1][3][3] =
 6931|   772k|              lhs[0][1][3][3] - (lhs[0][1][1][3]) * lhs[0][1][3][1];
 6932|   772k|          lhs[0][1][4][3] =
 6933|   772k|              lhs[0][1][4][3] - (lhs[0][1][1][3]) * lhs[0][1][4][1];
 6934|   772k|          lhs[0][2][0][3] =
 6935|   772k|              lhs[0][2][0][3] - (lhs[0][1][1][3]) * lhs[0][2][0][1];
 6936|   772k|          lhs[0][2][1][3] =
 6937|   772k|              lhs[0][2][1][3] - (lhs[0][1][1][3]) * lhs[0][2][1][1];
 6938|   772k|          lhs[0][2][2][3] =
 6939|   772k|              lhs[0][2][2][3] - (lhs[0][1][1][3]) * lhs[0][2][2][1];
 6940|   772k|          lhs[0][2][3][3] =
 6941|   772k|              lhs[0][2][3][3] - (lhs[0][1][1][3]) * lhs[0][2][3][1];
 6942|   772k|          lhs[0][2][4][3] =
 6943|   772k|              lhs[0][2][4][3] - (lhs[0][1][1][3]) * lhs[0][2][4][1];
 6944|   772k|          (rhs[0][j][i])[3] =
 6945|   772k|              (rhs[0][j][i])[3] - (lhs[0][1][1][3]) * (rhs[0][j][i])[1];
 6946|       |
 6947|   772k|          lhs[0][1][2][4] =
 6948|   772k|              lhs[0][1][2][4] - (lhs[0][1][1][4]) * lhs[0][1][2][1];
 6949|   772k|          lhs[0][1][3][4] =
 6950|   772k|              lhs[0][1][3][4] - (lhs[0][1][1][4]) * lhs[0][1][3][1];
 6951|   772k|          lhs[0][1][4][4] =
 6952|   772k|              lhs[0][1][4][4] - (lhs[0][1][1][4]) * lhs[0][1][4][1];
 6953|   772k|          lhs[0][2][0][4] =
 6954|   772k|              lhs[0][2][0][4] - (lhs[0][1][1][4]) * lhs[0][2][0][1];
 6955|   772k|          lhs[0][2][1][4] =
 6956|   772k|              lhs[0][2][1][4] - (lhs[0][1][1][4]) * lhs[0][2][1][1];
 6957|   772k|          lhs[0][2][2][4] =
 6958|   772k|              lhs[0][2][2][4] - (lhs[0][1][1][4]) * lhs[0][2][2][1];
 6959|   772k|          lhs[0][2][3][4] =
 6960|   772k|              lhs[0][2][3][4] - (lhs[0][1][1][4]) * lhs[0][2][3][1];
 6961|   772k|          lhs[0][2][4][4] =
 6962|   772k|              lhs[0][2][4][4] - (lhs[0][1][1][4]) * lhs[0][2][4][1];
 6963|   772k|          (rhs[0][j][i])[4] =
 6964|   772k|              (rhs[0][j][i])[4] - (lhs[0][1][1][4]) * (rhs[0][j][i])[1];
 6965|       |
 6966|   772k|          lhs[0][1][3][2] = lhs[0][1][3][2] * (1.00 / lhs[0][1][2][2]);
 6967|   772k|          lhs[0][1][4][2] = lhs[0][1][4][2] * (1.00 / lhs[0][1][2][2]);
 6968|   772k|          lhs[0][2][0][2] = lhs[0][2][0][2] * (1.00 / lhs[0][1][2][2]);
 6969|   772k|          lhs[0][2][1][2] = lhs[0][2][1][2] * (1.00 / lhs[0][1][2][2]);
 6970|   772k|          lhs[0][2][2][2] = lhs[0][2][2][2] * (1.00 / lhs[0][1][2][2]);
 6971|   772k|          lhs[0][2][3][2] = lhs[0][2][3][2] * (1.00 / lhs[0][1][2][2]);
 6972|   772k|          lhs[0][2][4][2] = lhs[0][2][4][2] * (1.00 / lhs[0][1][2][2]);
 6973|   772k|          (rhs[0][j][i])[2] = (rhs[0][j][i])[2] * (1.00 / lhs[0][1][2][2]);
 6974|       |
 6975|   772k|          lhs[0][1][3][0] =
 6976|   772k|              lhs[0][1][3][0] - (lhs[0][1][2][0]) * lhs[0][1][3][2];
 6977|   772k|          lhs[0][1][4][0] =
 6978|   772k|              lhs[0][1][4][0] - (lhs[0][1][2][0]) * lhs[0][1][4][2];
 6979|   772k|          lhs[0][2][0][0] =
 6980|   772k|              lhs[0][2][0][0] - (lhs[0][1][2][0]) * lhs[0][2][0][2];
 6981|   772k|          lhs[0][2][1][0] =
 6982|   772k|              lhs[0][2][1][0] - (lhs[0][1][2][0]) * lhs[0][2][1][2];
 6983|   772k|          lhs[0][2][2][0] =
 6984|   772k|              lhs[0][2][2][0] - (lhs[0][1][2][0]) * lhs[0][2][2][2];
 6985|   772k|          lhs[0][2][3][0] =
 6986|   772k|              lhs[0][2][3][0] - (lhs[0][1][2][0]) * lhs[0][2][3][2];
 6987|   772k|          lhs[0][2][4][0] =
 6988|   772k|              lhs[0][2][4][0] - (lhs[0][1][2][0]) * lhs[0][2][4][2];
 6989|   772k|          (rhs[0][j][i])[0] =
 6990|   772k|              (rhs[0][j][i])[0] - (lhs[0][1][2][0]) * (rhs[0][j][i])[2];
 6991|       |
 6992|   772k|          lhs[0][1][3][1] =
 6993|   772k|              lhs[0][1][3][1] - (lhs[0][1][2][1]) * lhs[0][1][3][2];
 6994|   772k|          lhs[0][1][4][1] =
 6995|   772k|              lhs[0][1][4][1] - (lhs[0][1][2][1]) * lhs[0][1][4][2];
 6996|   772k|          lhs[0][2][0][1] =
 6997|   772k|              lhs[0][2][0][1] - (lhs[0][1][2][1]) * lhs[0][2][0][2];
 6998|   772k|          lhs[0][2][1][1] =
 6999|   772k|              lhs[0][2][1][1] - (lhs[0][1][2][1]) * lhs[0][2][1][2];
 7000|   772k|          lhs[0][2][2][1] =
 7001|   772k|              lhs[0][2][2][1] - (lhs[0][1][2][1]) * lhs[0][2][2][2];
 7002|   772k|          lhs[0][2][3][1] =
 7003|   772k|              lhs[0][2][3][1] - (lhs[0][1][2][1]) * lhs[0][2][3][2];
 7004|   772k|          lhs[0][2][4][1] =
 7005|   772k|              lhs[0][2][4][1] - (lhs[0][1][2][1]) * lhs[0][2][4][2];
 7006|   772k|          (rhs[0][j][i])[1] =
 7007|   772k|              (rhs[0][j][i])[1] - (lhs[0][1][2][1]) * (rhs[0][j][i])[2];
 7008|       |
 7009|   772k|          lhs[0][1][3][3] =
 7010|   772k|              lhs[0][1][3][3] - (lhs[0][1][2][3]) * lhs[0][1][3][2];
 7011|   772k|          lhs[0][1][4][3] =
 7012|   772k|              lhs[0][1][4][3] - (lhs[0][1][2][3]) * lhs[0][1][4][2];
 7013|   772k|          lhs[0][2][0][3] =
 7014|   772k|              lhs[0][2][0][3] - (lhs[0][1][2][3]) * lhs[0][2][0][2];
 7015|   772k|          lhs[0][2][1][3] =
 7016|   772k|              lhs[0][2][1][3] - (lhs[0][1][2][3]) * lhs[0][2][1][2];
 7017|   772k|          lhs[0][2][2][3] =
 7018|   772k|              lhs[0][2][2][3] - (lhs[0][1][2][3]) * lhs[0][2][2][2];
 7019|   772k|          lhs[0][2][3][3] =
 7020|   772k|              lhs[0][2][3][3] - (lhs[0][1][2][3]) * lhs[0][2][3][2];
 7021|   772k|          lhs[0][2][4][3] =
 7022|   772k|              lhs[0][2][4][3] - (lhs[0][1][2][3]) * lhs[0][2][4][2];
 7023|   772k|          (rhs[0][j][i])[3] =
 7024|   772k|              (rhs[0][j][i])[3] - (lhs[0][1][2][3]) * (rhs[0][j][i])[2];
 7025|       |
 7026|   772k|          lhs[0][1][3][4] =
 7027|   772k|              lhs[0][1][3][4] - (lhs[0][1][2][4]) * lhs[0][1][3][2];
 7028|   772k|          lhs[0][1][4][4] =
 7029|   772k|              lhs[0][1][4][4] - (lhs[0][1][2][4]) * lhs[0][1][4][2];
 7030|   772k|          lhs[0][2][0][4] =
 7031|   772k|              lhs[0][2][0][4] - (lhs[0][1][2][4]) * lhs[0][2][0][2];
 7032|   772k|          lhs[0][2][1][4] =
 7033|   772k|              lhs[0][2][1][4] - (lhs[0][1][2][4]) * lhs[0][2][1][2];
 7034|   772k|          lhs[0][2][2][4] =
 7035|   772k|              lhs[0][2][2][4] - (lhs[0][1][2][4]) * lhs[0][2][2][2];
 7036|   772k|          lhs[0][2][3][4] =
 7037|   772k|              lhs[0][2][3][4] - (lhs[0][1][2][4]) * lhs[0][2][3][2];
 7038|   772k|          lhs[0][2][4][4] =
 7039|   772k|              lhs[0][2][4][4] - (lhs[0][1][2][4]) * lhs[0][2][4][2];
 7040|   772k|          (rhs[0][j][i])[4] =
 7041|   772k|              (rhs[0][j][i])[4] - (lhs[0][1][2][4]) * (rhs[0][j][i])[2];
 7042|       |
 7043|   772k|          lhs[0][1][4][3] = lhs[0][1][4][3] * (1.00 / lhs[0][1][3][3]);
 7044|   772k|          lhs[0][2][0][3] = lhs[0][2][0][3] * (1.00 / lhs[0][1][3][3]);
 7045|   772k|          lhs[0][2][1][3] = lhs[0][2][1][3] * (1.00 / lhs[0][1][3][3]);
 7046|   772k|          lhs[0][2][2][3] = lhs[0][2][2][3] * (1.00 / lhs[0][1][3][3]);
 7047|   772k|          lhs[0][2][3][3] = lhs[0][2][3][3] * (1.00 / lhs[0][1][3][3]);
 7048|   772k|          lhs[0][2][4][3] = lhs[0][2][4][3] * (1.00 / lhs[0][1][3][3]);
 7049|   772k|          (rhs[0][j][i])[3] = (rhs[0][j][i])[3] * (1.00 / lhs[0][1][3][3]);
 7050|       |
 7051|   772k|          lhs[0][1][4][0] =
 7052|   772k|              lhs[0][1][4][0] - (lhs[0][1][3][0]) * lhs[0][1][4][3];
 7053|   772k|          lhs[0][2][0][0] =
 7054|   772k|              lhs[0][2][0][0] - (lhs[0][1][3][0]) * lhs[0][2][0][3];
 7055|   772k|          lhs[0][2][1][0] =
 7056|   772k|              lhs[0][2][1][0] - (lhs[0][1][3][0]) * lhs[0][2][1][3];
 7057|   772k|          lhs[0][2][2][0] =
 7058|   772k|              lhs[0][2][2][0] - (lhs[0][1][3][0]) * lhs[0][2][2][3];
 7059|   772k|          lhs[0][2][3][0] =
 7060|   772k|              lhs[0][2][3][0] - (lhs[0][1][3][0]) * lhs[0][2][3][3];
 7061|   772k|          lhs[0][2][4][0] =
 7062|   772k|              lhs[0][2][4][0] - (lhs[0][1][3][0]) * lhs[0][2][4][3];
 7063|   772k|          (rhs[0][j][i])[0] =
 7064|   772k|              (rhs[0][j][i])[0] - (lhs[0][1][3][0]) * (rhs[0][j][i])[3];
 7065|       |
 7066|   772k|          lhs[0][1][4][1] =
 7067|   772k|              lhs[0][1][4][1] - (lhs[0][1][3][1]) * lhs[0][1][4][3];
 7068|   772k|          lhs[0][2][0][1] =
 7069|   772k|              lhs[0][2][0][1] - (lhs[0][1][3][1]) * lhs[0][2][0][3];
 7070|   772k|          lhs[0][2][1][1] =
 7071|   772k|              lhs[0][2][1][1] - (lhs[0][1][3][1]) * lhs[0][2][1][3];
 7072|   772k|          lhs[0][2][2][1] =
 7073|   772k|              lhs[0][2][2][1] - (lhs[0][1][3][1]) * lhs[0][2][2][3];
 7074|   772k|          lhs[0][2][3][1] =
 7075|   772k|              lhs[0][2][3][1] - (lhs[0][1][3][1]) * lhs[0][2][3][3];
 7076|   772k|          lhs[0][2][4][1] =
 7077|   772k|              lhs[0][2][4][1] - (lhs[0][1][3][1]) * lhs[0][2][4][3];
 7078|   772k|          (rhs[0][j][i])[1] =
 7079|   772k|              (rhs[0][j][i])[1] - (lhs[0][1][3][1]) * (rhs[0][j][i])[3];
 7080|       |
 7081|   772k|          lhs[0][1][4][2] =
 7082|   772k|              lhs[0][1][4][2] - (lhs[0][1][3][2]) * lhs[0][1][4][3];
 7083|   772k|          lhs[0][2][0][2] =
 7084|   772k|              lhs[0][2][0][2] - (lhs[0][1][3][2]) * lhs[0][2][0][3];
 7085|   772k|          lhs[0][2][1][2] =
 7086|   772k|              lhs[0][2][1][2] - (lhs[0][1][3][2]) * lhs[0][2][1][3];
 7087|   772k|          lhs[0][2][2][2] =
 7088|   772k|              lhs[0][2][2][2] - (lhs[0][1][3][2]) * lhs[0][2][2][3];
 7089|   772k|          lhs[0][2][3][2] =
 7090|   772k|              lhs[0][2][3][2] - (lhs[0][1][3][2]) * lhs[0][2][3][3];
 7091|   772k|          lhs[0][2][4][2] =
 7092|   772k|              lhs[0][2][4][2] - (lhs[0][1][3][2]) * lhs[0][2][4][3];
 7093|   772k|          (rhs[0][j][i])[2] =
 7094|   772k|              (rhs[0][j][i])[2] - (lhs[0][1][3][2]) * (rhs[0][j][i])[3];
 7095|       |
 7096|   772k|          lhs[0][1][4][4] =
 7097|   772k|              lhs[0][1][4][4] - (lhs[0][1][3][4]) * lhs[0][1][4][3];
 7098|   772k|          lhs[0][2][0][4] =
 7099|   772k|              lhs[0][2][0][4] - (lhs[0][1][3][4]) * lhs[0][2][0][3];
 7100|   772k|          lhs[0][2][1][4] =
 7101|   772k|              lhs[0][2][1][4] - (lhs[0][1][3][4]) * lhs[0][2][1][3];
 7102|   772k|          lhs[0][2][2][4] =
 7103|   772k|              lhs[0][2][2][4] - (lhs[0][1][3][4]) * lhs[0][2][2][3];
 7104|   772k|          lhs[0][2][3][4] =
 7105|   772k|              lhs[0][2][3][4] - (lhs[0][1][3][4]) * lhs[0][2][3][3];
 7106|   772k|          lhs[0][2][4][4] =
 7107|   772k|              lhs[0][2][4][4] - (lhs[0][1][3][4]) * lhs[0][2][4][3];
 7108|   772k|          (rhs[0][j][i])[4] =
 7109|   772k|              (rhs[0][j][i])[4] - (lhs[0][1][3][4]) * (rhs[0][j][i])[3];
 7110|       |
 7111|   772k|          lhs[0][2][0][4] = lhs[0][2][0][4] * (1.00 / lhs[0][1][4][4]);
 7112|   772k|          lhs[0][2][1][4] = lhs[0][2][1][4] * (1.00 / lhs[0][1][4][4]);
 7113|   772k|          lhs[0][2][2][4] = lhs[0][2][2][4] * (1.00 / lhs[0][1][4][4]);
 7114|   772k|          lhs[0][2][3][4] = lhs[0][2][3][4] * (1.00 / lhs[0][1][4][4]);
 7115|   772k|          lhs[0][2][4][4] = lhs[0][2][4][4] * (1.00 / lhs[0][1][4][4]);
 7116|   772k|          (rhs[0][j][i])[4] = (rhs[0][j][i])[4] * (1.00 / lhs[0][1][4][4]);
 7117|       |
 7118|   772k|          lhs[0][2][0][0] =
 7119|   772k|              lhs[0][2][0][0] - (lhs[0][1][4][0]) * lhs[0][2][0][4];
 7120|   772k|          lhs[0][2][1][0] =
 7121|   772k|              lhs[0][2][1][0] - (lhs[0][1][4][0]) * lhs[0][2][1][4];
 7122|   772k|          lhs[0][2][2][0] =
 7123|   772k|              lhs[0][2][2][0] - (lhs[0][1][4][0]) * lhs[0][2][2][4];
 7124|   772k|          lhs[0][2][3][0] =
 7125|   772k|              lhs[0][2][3][0] - (lhs[0][1][4][0]) * lhs[0][2][3][4];
 7126|   772k|          lhs[0][2][4][0] =
 7127|   772k|              lhs[0][2][4][0] - (lhs[0][1][4][0]) * lhs[0][2][4][4];
 7128|   772k|          (rhs[0][j][i])[0] =
 7129|   772k|              (rhs[0][j][i])[0] - (lhs[0][1][4][0]) * (rhs[0][j][i])[4];
 7130|       |
 7131|   772k|          lhs[0][2][0][1] =
 7132|   772k|              lhs[0][2][0][1] - (lhs[0][1][4][1]) * lhs[0][2][0][4];
 7133|   772k|          lhs[0][2][1][1] =
 7134|   772k|              lhs[0][2][1][1] - (lhs[0][1][4][1]) * lhs[0][2][1][4];
 7135|   772k|          lhs[0][2][2][1] =
 7136|   772k|              lhs[0][2][2][1] - (lhs[0][1][4][1]) * lhs[0][2][2][4];
 7137|   772k|          lhs[0][2][3][1] =
 7138|   772k|              lhs[0][2][3][1] - (lhs[0][1][4][1]) * lhs[0][2][3][4];
 7139|   772k|          lhs[0][2][4][1] =
 7140|   772k|              lhs[0][2][4][1] - (lhs[0][1][4][1]) * lhs[0][2][4][4];
 7141|   772k|          (rhs[0][j][i])[1] =
 7142|   772k|              (rhs[0][j][i])[1] - (lhs[0][1][4][1]) * (rhs[0][j][i])[4];
 7143|       |
 7144|   772k|          lhs[0][2][0][2] =
 7145|   772k|              lhs[0][2][0][2] - (lhs[0][1][4][2]) * lhs[0][2][0][4];
 7146|   772k|          lhs[0][2][1][2] =
 7147|   772k|              lhs[0][2][1][2] - (lhs[0][1][4][2]) * lhs[0][2][1][4];
 7148|   772k|          lhs[0][2][2][2] =
 7149|   772k|              lhs[0][2][2][2] - (lhs[0][1][4][2]) * lhs[0][2][2][4];
 7150|   772k|          lhs[0][2][3][2] =
 7151|   772k|              lhs[0][2][3][2] - (lhs[0][1][4][2]) * lhs[0][2][3][4];
 7152|   772k|          lhs[0][2][4][2] =
 7153|   772k|              lhs[0][2][4][2] - (lhs[0][1][4][2]) * lhs[0][2][4][4];
 7154|   772k|          (rhs[0][j][i])[2] =
 7155|   772k|              (rhs[0][j][i])[2] - (lhs[0][1][4][2]) * (rhs[0][j][i])[4];
 7156|       |
 7157|   772k|          lhs[0][2][0][3] =
 7158|   772k|              lhs[0][2][0][3] - (lhs[0][1][4][3]) * lhs[0][2][0][4];
 7159|   772k|          lhs[0][2][1][3] =
 7160|   772k|              lhs[0][2][1][3] - (lhs[0][1][4][3]) * lhs[0][2][1][4];
 7161|   772k|          lhs[0][2][2][3] =
 7162|   772k|              lhs[0][2][2][3] - (lhs[0][1][4][3]) * lhs[0][2][2][4];
 7163|   772k|          lhs[0][2][3][3] =
 7164|   772k|              lhs[0][2][3][3] - (lhs[0][1][4][3]) * lhs[0][2][3][4];
 7165|   772k|          lhs[0][2][4][3] =
 7166|   772k|              lhs[0][2][4][3] - (lhs[0][1][4][3]) * lhs[0][2][4][4];
 7167|   772k|          (rhs[0][j][i])[3] =
 7168|   772k|              (rhs[0][j][i])[3] - (lhs[0][1][4][3]) * (rhs[0][j][i])[4];
 7169|   772k|        }
 7170|       |
 7171|       |        //---------------------------------------------------------------------
 7172|       |        // begin inner most do loop
 7173|       |        // do all the elements of the cell unless last
 7174|       |        //---------------------------------------------------------------------
 7175|  48.6M|        for (k = 1; k <= (grid_points[2] - 1) - 1; k++) {
 7176|       |          //-------------------------------------------------------------------
 7177|       |          // subtract A*lhs_vector(k-1) from lhs_vector(k)
 7178|       |          //
 7179|       |          // rhs(k) = rhs(k) - A*rhs(k-1)
 7180|       |          //-------------------------------------------------------------------
 7181|       |          /* matvec_sub(lhs[k][AA], rhs[k - 1][j][i], rhs[k][j][i]) is inlined
 7182|       |           * below */
 7183|       |//#pragma spf assert nomacro
 7184|  47.9M|          {
 7185|       |
 7186|       |            //---------------------------------------------------------------------
 7187|       |            // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 7188|       |            // $                  - lhs[ia][ablock][0][i]*
 7189|       |            //---------------------------------------------------------------------
 7190|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] -
 7191|  47.9M|                                (lhs[k][AA])[0][0] * (rhs[k - 1][j][i])[0] -
 7192|  47.9M|                                (lhs[k][AA])[1][0] * (rhs[k - 1][j][i])[1] -
 7193|  47.9M|                                (lhs[k][AA])[2][0] * (rhs[k - 1][j][i])[2] -
 7194|  47.9M|                                (lhs[k][AA])[3][0] * (rhs[k - 1][j][i])[3] -
 7195|  47.9M|                                (lhs[k][AA])[4][0] * (rhs[k - 1][j][i])[4];
 7196|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] -
 7197|  47.9M|                                (lhs[k][AA])[0][1] * (rhs[k - 1][j][i])[0] -
 7198|  47.9M|                                (lhs[k][AA])[1][1] * (rhs[k - 1][j][i])[1] -
 7199|  47.9M|                                (lhs[k][AA])[2][1] * (rhs[k - 1][j][i])[2] -
 7200|  47.9M|                                (lhs[k][AA])[3][1] * (rhs[k - 1][j][i])[3] -
 7201|  47.9M|                                (lhs[k][AA])[4][1] * (rhs[k - 1][j][i])[4];
 7202|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] -
 7203|  47.9M|                                (lhs[k][AA])[0][2] * (rhs[k - 1][j][i])[0] -
 7204|  47.9M|                                (lhs[k][AA])[1][2] * (rhs[k - 1][j][i])[1] -
 7205|  47.9M|                                (lhs[k][AA])[2][2] * (rhs[k - 1][j][i])[2] -
 7206|  47.9M|                                (lhs[k][AA])[3][2] * (rhs[k - 1][j][i])[3] -
 7207|  47.9M|                                (lhs[k][AA])[4][2] * (rhs[k - 1][j][i])[4];
 7208|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] -
 7209|  47.9M|                                (lhs[k][AA])[0][3] * (rhs[k - 1][j][i])[0] -
 7210|  47.9M|                                (lhs[k][AA])[1][3] * (rhs[k - 1][j][i])[1] -
 7211|  47.9M|                                (lhs[k][AA])[2][3] * (rhs[k - 1][j][i])[2] -
 7212|  47.9M|                                (lhs[k][AA])[3][3] * (rhs[k - 1][j][i])[3] -
 7213|  47.9M|                                (lhs[k][AA])[4][3] * (rhs[k - 1][j][i])[4];
 7214|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] -
 7215|  47.9M|                                (lhs[k][AA])[0][4] * (rhs[k - 1][j][i])[0] -
 7216|  47.9M|                                (lhs[k][AA])[1][4] * (rhs[k - 1][j][i])[1] -
 7217|  47.9M|                                (lhs[k][AA])[2][4] * (rhs[k - 1][j][i])[2] -
 7218|  47.9M|                                (lhs[k][AA])[3][4] * (rhs[k - 1][j][i])[3] -
 7219|  47.9M|                                (lhs[k][AA])[4][4] * (rhs[k - 1][j][i])[4];
 7220|  47.9M|          }
 7221|       |
 7222|       |          //-------------------------------------------------------------------
 7223|       |          // B(k) = B(k) - C(k-1)*A(k)
 7224|       |          // matmul_sub(AA,i,j,k,c,CC,i,j,k-1,c,BB,i,j,k)
 7225|       |          //-------------------------------------------------------------------
 7226|       |          /* matmul_sub(lhs[k][AA], lhs[k - 1][CC], lhs[k][BB]) is inlined below
 7227|       |           */
 7228|       |//#pragma spf assert nomacro
 7229|  47.9M|          {
 7230|       |
 7231|  47.9M|            (lhs[k][BB])[0][0] = (lhs[k][BB])[0][0] -
 7232|  47.9M|                                 (lhs[k][AA])[0][0] * (lhs[k - 1][CC])[0][0] -
 7233|  47.9M|                                 (lhs[k][AA])[1][0] * (lhs[k - 1][CC])[0][1] -
 7234|  47.9M|                                 (lhs[k][AA])[2][0] * (lhs[k - 1][CC])[0][2] -
 7235|  47.9M|                                 (lhs[k][AA])[3][0] * (lhs[k - 1][CC])[0][3] -
 7236|  47.9M|                                 (lhs[k][AA])[4][0] * (lhs[k - 1][CC])[0][4];
 7237|  47.9M|            (lhs[k][BB])[0][1] = (lhs[k][BB])[0][1] -
 7238|  47.9M|                                 (lhs[k][AA])[0][1] * (lhs[k - 1][CC])[0][0] -
 7239|  47.9M|                                 (lhs[k][AA])[1][1] * (lhs[k - 1][CC])[0][1] -
 7240|  47.9M|                                 (lhs[k][AA])[2][1] * (lhs[k - 1][CC])[0][2] -
 7241|  47.9M|                                 (lhs[k][AA])[3][1] * (lhs[k - 1][CC])[0][3] -
 7242|  47.9M|                                 (lhs[k][AA])[4][1] * (lhs[k - 1][CC])[0][4];
 7243|  47.9M|            (lhs[k][BB])[0][2] = (lhs[k][BB])[0][2] -
 7244|  47.9M|                                 (lhs[k][AA])[0][2] * (lhs[k - 1][CC])[0][0] -
 7245|  47.9M|                                 (lhs[k][AA])[1][2] * (lhs[k - 1][CC])[0][1] -
 7246|  47.9M|                                 (lhs[k][AA])[2][2] * (lhs[k - 1][CC])[0][2] -
 7247|  47.9M|                                 (lhs[k][AA])[3][2] * (lhs[k - 1][CC])[0][3] -
 7248|  47.9M|                                 (lhs[k][AA])[4][2] * (lhs[k - 1][CC])[0][4];
 7249|  47.9M|            (lhs[k][BB])[0][3] = (lhs[k][BB])[0][3] -
 7250|  47.9M|                                 (lhs[k][AA])[0][3] * (lhs[k - 1][CC])[0][0] -
 7251|  47.9M|                                 (lhs[k][AA])[1][3] * (lhs[k - 1][CC])[0][1] -
 7252|  47.9M|                                 (lhs[k][AA])[2][3] * (lhs[k - 1][CC])[0][2] -
 7253|  47.9M|                                 (lhs[k][AA])[3][3] * (lhs[k - 1][CC])[0][3] -
 7254|  47.9M|                                 (lhs[k][AA])[4][3] * (lhs[k - 1][CC])[0][4];
 7255|  47.9M|            (lhs[k][BB])[0][4] = (lhs[k][BB])[0][4] -
 7256|  47.9M|                                 (lhs[k][AA])[0][4] * (lhs[k - 1][CC])[0][0] -
 7257|  47.9M|                                 (lhs[k][AA])[1][4] * (lhs[k - 1][CC])[0][1] -
 7258|  47.9M|                                 (lhs[k][AA])[2][4] * (lhs[k - 1][CC])[0][2] -
 7259|  47.9M|                                 (lhs[k][AA])[3][4] * (lhs[k - 1][CC])[0][3] -
 7260|  47.9M|                                 (lhs[k][AA])[4][4] * (lhs[k - 1][CC])[0][4];
 7261|  47.9M|            (lhs[k][BB])[1][0] = (lhs[k][BB])[1][0] -
 7262|  47.9M|                                 (lhs[k][AA])[0][0] * (lhs[k - 1][CC])[1][0] -
 7263|  47.9M|                                 (lhs[k][AA])[1][0] * (lhs[k - 1][CC])[1][1] -
 7264|  47.9M|                                 (lhs[k][AA])[2][0] * (lhs[k - 1][CC])[1][2] -
 7265|  47.9M|                                 (lhs[k][AA])[3][0] * (lhs[k - 1][CC])[1][3] -
 7266|  47.9M|                                 (lhs[k][AA])[4][0] * (lhs[k - 1][CC])[1][4];
 7267|  47.9M|            (lhs[k][BB])[1][1] = (lhs[k][BB])[1][1] -
 7268|  47.9M|                                 (lhs[k][AA])[0][1] * (lhs[k - 1][CC])[1][0] -
 7269|  47.9M|                                 (lhs[k][AA])[1][1] * (lhs[k - 1][CC])[1][1] -
 7270|  47.9M|                                 (lhs[k][AA])[2][1] * (lhs[k - 1][CC])[1][2] -
 7271|  47.9M|                                 (lhs[k][AA])[3][1] * (lhs[k - 1][CC])[1][3] -
 7272|  47.9M|                                 (lhs[k][AA])[4][1] * (lhs[k - 1][CC])[1][4];
 7273|  47.9M|            (lhs[k][BB])[1][2] = (lhs[k][BB])[1][2] -
 7274|  47.9M|                                 (lhs[k][AA])[0][2] * (lhs[k - 1][CC])[1][0] -
 7275|  47.9M|                                 (lhs[k][AA])[1][2] * (lhs[k - 1][CC])[1][1] -
 7276|  47.9M|                                 (lhs[k][AA])[2][2] * (lhs[k - 1][CC])[1][2] -
 7277|  47.9M|                                 (lhs[k][AA])[3][2] * (lhs[k - 1][CC])[1][3] -
 7278|  47.9M|                                 (lhs[k][AA])[4][2] * (lhs[k - 1][CC])[1][4];
 7279|  47.9M|            (lhs[k][BB])[1][3] = (lhs[k][BB])[1][3] -
 7280|  47.9M|                                 (lhs[k][AA])[0][3] * (lhs[k - 1][CC])[1][0] -
 7281|  47.9M|                                 (lhs[k][AA])[1][3] * (lhs[k - 1][CC])[1][1] -
 7282|  47.9M|                                 (lhs[k][AA])[2][3] * (lhs[k - 1][CC])[1][2] -
 7283|  47.9M|                                 (lhs[k][AA])[3][3] * (lhs[k - 1][CC])[1][3] -
 7284|  47.9M|                                 (lhs[k][AA])[4][3] * (lhs[k - 1][CC])[1][4];
 7285|  47.9M|            (lhs[k][BB])[1][4] = (lhs[k][BB])[1][4] -
 7286|  47.9M|                                 (lhs[k][AA])[0][4] * (lhs[k - 1][CC])[1][0] -
 7287|  47.9M|                                 (lhs[k][AA])[1][4] * (lhs[k - 1][CC])[1][1] -
 7288|  47.9M|                                 (lhs[k][AA])[2][4] * (lhs[k - 1][CC])[1][2] -
 7289|  47.9M|                                 (lhs[k][AA])[3][4] * (lhs[k - 1][CC])[1][3] -
 7290|  47.9M|                                 (lhs[k][AA])[4][4] * (lhs[k - 1][CC])[1][4];
 7291|  47.9M|            (lhs[k][BB])[2][0] = (lhs[k][BB])[2][0] -
 7292|  47.9M|                                 (lhs[k][AA])[0][0] * (lhs[k - 1][CC])[2][0] -
 7293|  47.9M|                                 (lhs[k][AA])[1][0] * (lhs[k - 1][CC])[2][1] -
 7294|  47.9M|                                 (lhs[k][AA])[2][0] * (lhs[k - 1][CC])[2][2] -
 7295|  47.9M|                                 (lhs[k][AA])[3][0] * (lhs[k - 1][CC])[2][3] -
 7296|  47.9M|                                 (lhs[k][AA])[4][0] * (lhs[k - 1][CC])[2][4];
 7297|  47.9M|            (lhs[k][BB])[2][1] = (lhs[k][BB])[2][1] -
 7298|  47.9M|                                 (lhs[k][AA])[0][1] * (lhs[k - 1][CC])[2][0] -
 7299|  47.9M|                                 (lhs[k][AA])[1][1] * (lhs[k - 1][CC])[2][1] -
 7300|  47.9M|                                 (lhs[k][AA])[2][1] * (lhs[k - 1][CC])[2][2] -
 7301|  47.9M|                                 (lhs[k][AA])[3][1] * (lhs[k - 1][CC])[2][3] -
 7302|  47.9M|                                 (lhs[k][AA])[4][1] * (lhs[k - 1][CC])[2][4];
 7303|  47.9M|            (lhs[k][BB])[2][2] = (lhs[k][BB])[2][2] -
 7304|  47.9M|                                 (lhs[k][AA])[0][2] * (lhs[k - 1][CC])[2][0] -
 7305|  47.9M|                                 (lhs[k][AA])[1][2] * (lhs[k - 1][CC])[2][1] -
 7306|  47.9M|                                 (lhs[k][AA])[2][2] * (lhs[k - 1][CC])[2][2] -
 7307|  47.9M|                                 (lhs[k][AA])[3][2] * (lhs[k - 1][CC])[2][3] -
 7308|  47.9M|                                 (lhs[k][AA])[4][2] * (lhs[k - 1][CC])[2][4];
 7309|  47.9M|            (lhs[k][BB])[2][3] = (lhs[k][BB])[2][3] -
 7310|  47.9M|                                 (lhs[k][AA])[0][3] * (lhs[k - 1][CC])[2][0] -
 7311|  47.9M|                                 (lhs[k][AA])[1][3] * (lhs[k - 1][CC])[2][1] -
 7312|  47.9M|                                 (lhs[k][AA])[2][3] * (lhs[k - 1][CC])[2][2] -
 7313|  47.9M|                                 (lhs[k][AA])[3][3] * (lhs[k - 1][CC])[2][3] -
 7314|  47.9M|                                 (lhs[k][AA])[4][3] * (lhs[k - 1][CC])[2][4];
 7315|  47.9M|            (lhs[k][BB])[2][4] = (lhs[k][BB])[2][4] -
 7316|  47.9M|                                 (lhs[k][AA])[0][4] * (lhs[k - 1][CC])[2][0] -
 7317|  47.9M|                                 (lhs[k][AA])[1][4] * (lhs[k - 1][CC])[2][1] -
 7318|  47.9M|                                 (lhs[k][AA])[2][4] * (lhs[k - 1][CC])[2][2] -
 7319|  47.9M|                                 (lhs[k][AA])[3][4] * (lhs[k - 1][CC])[2][3] -
 7320|  47.9M|                                 (lhs[k][AA])[4][4] * (lhs[k - 1][CC])[2][4];
 7321|  47.9M|            (lhs[k][BB])[3][0] = (lhs[k][BB])[3][0] -
 7322|  47.9M|                                 (lhs[k][AA])[0][0] * (lhs[k - 1][CC])[3][0] -
 7323|  47.9M|                                 (lhs[k][AA])[1][0] * (lhs[k - 1][CC])[3][1] -
 7324|  47.9M|                                 (lhs[k][AA])[2][0] * (lhs[k - 1][CC])[3][2] -
 7325|  47.9M|                                 (lhs[k][AA])[3][0] * (lhs[k - 1][CC])[3][3] -
 7326|  47.9M|                                 (lhs[k][AA])[4][0] * (lhs[k - 1][CC])[3][4];
 7327|  47.9M|            (lhs[k][BB])[3][1] = (lhs[k][BB])[3][1] -
 7328|  47.9M|                                 (lhs[k][AA])[0][1] * (lhs[k - 1][CC])[3][0] -
 7329|  47.9M|                                 (lhs[k][AA])[1][1] * (lhs[k - 1][CC])[3][1] -
 7330|  47.9M|                                 (lhs[k][AA])[2][1] * (lhs[k - 1][CC])[3][2] -
 7331|  47.9M|                                 (lhs[k][AA])[3][1] * (lhs[k - 1][CC])[3][3] -
 7332|  47.9M|                                 (lhs[k][AA])[4][1] * (lhs[k - 1][CC])[3][4];
 7333|  47.9M|            (lhs[k][BB])[3][2] = (lhs[k][BB])[3][2] -
 7334|  47.9M|                                 (lhs[k][AA])[0][2] * (lhs[k - 1][CC])[3][0] -
 7335|  47.9M|                                 (lhs[k][AA])[1][2] * (lhs[k - 1][CC])[3][1] -
 7336|  47.9M|                                 (lhs[k][AA])[2][2] * (lhs[k - 1][CC])[3][2] -
 7337|  47.9M|                                 (lhs[k][AA])[3][2] * (lhs[k - 1][CC])[3][3] -
 7338|  47.9M|                                 (lhs[k][AA])[4][2] * (lhs[k - 1][CC])[3][4];
 7339|  47.9M|            (lhs[k][BB])[3][3] = (lhs[k][BB])[3][3] -
 7340|  47.9M|                                 (lhs[k][AA])[0][3] * (lhs[k - 1][CC])[3][0] -
 7341|  47.9M|                                 (lhs[k][AA])[1][3] * (lhs[k - 1][CC])[3][1] -
 7342|  47.9M|                                 (lhs[k][AA])[2][3] * (lhs[k - 1][CC])[3][2] -
 7343|  47.9M|                                 (lhs[k][AA])[3][3] * (lhs[k - 1][CC])[3][3] -
 7344|  47.9M|                                 (lhs[k][AA])[4][3] * (lhs[k - 1][CC])[3][4];
 7345|  47.9M|            (lhs[k][BB])[3][4] = (lhs[k][BB])[3][4] -
 7346|  47.9M|                                 (lhs[k][AA])[0][4] * (lhs[k - 1][CC])[3][0] -
 7347|  47.9M|                                 (lhs[k][AA])[1][4] * (lhs[k - 1][CC])[3][1] -
 7348|  47.9M|                                 (lhs[k][AA])[2][4] * (lhs[k - 1][CC])[3][2] -
 7349|  47.9M|                                 (lhs[k][AA])[3][4] * (lhs[k - 1][CC])[3][3] -
 7350|  47.9M|                                 (lhs[k][AA])[4][4] * (lhs[k - 1][CC])[3][4];
 7351|  47.9M|            (lhs[k][BB])[4][0] = (lhs[k][BB])[4][0] -
 7352|  47.9M|                                 (lhs[k][AA])[0][0] * (lhs[k - 1][CC])[4][0] -
 7353|  47.9M|                                 (lhs[k][AA])[1][0] * (lhs[k - 1][CC])[4][1] -
 7354|  47.9M|                                 (lhs[k][AA])[2][0] * (lhs[k - 1][CC])[4][2] -
 7355|  47.9M|                                 (lhs[k][AA])[3][0] * (lhs[k - 1][CC])[4][3] -
 7356|  47.9M|                                 (lhs[k][AA])[4][0] * (lhs[k - 1][CC])[4][4];
 7357|  47.9M|            (lhs[k][BB])[4][1] = (lhs[k][BB])[4][1] -
 7358|  47.9M|                                 (lhs[k][AA])[0][1] * (lhs[k - 1][CC])[4][0] -
 7359|  47.9M|                                 (lhs[k][AA])[1][1] * (lhs[k - 1][CC])[4][1] -
 7360|  47.9M|                                 (lhs[k][AA])[2][1] * (lhs[k - 1][CC])[4][2] -
 7361|  47.9M|                                 (lhs[k][AA])[3][1] * (lhs[k - 1][CC])[4][3] -
 7362|  47.9M|                                 (lhs[k][AA])[4][1] * (lhs[k - 1][CC])[4][4];
 7363|  47.9M|            (lhs[k][BB])[4][2] = (lhs[k][BB])[4][2] -
 7364|  47.9M|                                 (lhs[k][AA])[0][2] * (lhs[k - 1][CC])[4][0] -
 7365|  47.9M|                                 (lhs[k][AA])[1][2] * (lhs[k - 1][CC])[4][1] -
 7366|  47.9M|                                 (lhs[k][AA])[2][2] * (lhs[k - 1][CC])[4][2] -
 7367|  47.9M|                                 (lhs[k][AA])[3][2] * (lhs[k - 1][CC])[4][3] -
 7368|  47.9M|                                 (lhs[k][AA])[4][2] * (lhs[k - 1][CC])[4][4];
 7369|  47.9M|            (lhs[k][BB])[4][3] = (lhs[k][BB])[4][3] -
 7370|  47.9M|                                 (lhs[k][AA])[0][3] * (lhs[k - 1][CC])[4][0] -
 7371|  47.9M|                                 (lhs[k][AA])[1][3] * (lhs[k - 1][CC])[4][1] -
 7372|  47.9M|                                 (lhs[k][AA])[2][3] * (lhs[k - 1][CC])[4][2] -
 7373|  47.9M|                                 (lhs[k][AA])[3][3] * (lhs[k - 1][CC])[4][3] -
 7374|  47.9M|                                 (lhs[k][AA])[4][3] * (lhs[k - 1][CC])[4][4];
 7375|  47.9M|            (lhs[k][BB])[4][4] = (lhs[k][BB])[4][4] -
 7376|  47.9M|                                 (lhs[k][AA])[0][4] * (lhs[k - 1][CC])[4][0] -
 7377|  47.9M|                                 (lhs[k][AA])[1][4] * (lhs[k - 1][CC])[4][1] -
 7378|  47.9M|                                 (lhs[k][AA])[2][4] * (lhs[k - 1][CC])[4][2] -
 7379|  47.9M|                                 (lhs[k][AA])[3][4] * (lhs[k - 1][CC])[4][3] -
 7380|  47.9M|                                 (lhs[k][AA])[4][4] * (lhs[k - 1][CC])[4][4];
 7381|  47.9M|          }
 7382|       |
 7383|       |          //-------------------------------------------------------------------
 7384|       |          // multiply c[k][j][i] by b_inverse and copy back to c
 7385|       |          // multiply rhs[0][j][i] by b_inverse[0][j][i] and copy to rhs
 7386|       |          //-------------------------------------------------------------------
 7387|       |          /* binvcrhs(lhs[k][BB], lhs[k][CC], rhs[k][j][i]) is inlined below */
 7388|       |//#pragma spf assert nomacro
 7389|  47.9M|          {
 7390|       |
 7391|  47.9M|            (lhs[k][BB])[1][0] =
 7392|  47.9M|                (lhs[k][BB])[1][0] * (1.00 / (lhs[k][BB])[0][0]);
 7393|  47.9M|            (lhs[k][BB])[2][0] =
 7394|  47.9M|                (lhs[k][BB])[2][0] * (1.00 / (lhs[k][BB])[0][0]);
 7395|  47.9M|            (lhs[k][BB])[3][0] =
 7396|  47.9M|                (lhs[k][BB])[3][0] * (1.00 / (lhs[k][BB])[0][0]);
 7397|  47.9M|            (lhs[k][BB])[4][0] =
 7398|  47.9M|                (lhs[k][BB])[4][0] * (1.00 / (lhs[k][BB])[0][0]);
 7399|  47.9M|            (lhs[k][CC])[0][0] =
 7400|  47.9M|                (lhs[k][CC])[0][0] * (1.00 / (lhs[k][BB])[0][0]);
 7401|  47.9M|            (lhs[k][CC])[1][0] =
 7402|  47.9M|                (lhs[k][CC])[1][0] * (1.00 / (lhs[k][BB])[0][0]);
 7403|  47.9M|            (lhs[k][CC])[2][0] =
 7404|  47.9M|                (lhs[k][CC])[2][0] * (1.00 / (lhs[k][BB])[0][0]);
 7405|  47.9M|            (lhs[k][CC])[3][0] =
 7406|  47.9M|                (lhs[k][CC])[3][0] * (1.00 / (lhs[k][BB])[0][0]);
 7407|  47.9M|            (lhs[k][CC])[4][0] =
 7408|  47.9M|                (lhs[k][CC])[4][0] * (1.00 / (lhs[k][BB])[0][0]);
 7409|  47.9M|            (rhs[k][j][i])[0] = (rhs[k][j][i])[0] * (1.00 / (lhs[k][BB])[0][0]);
 7410|       |
 7411|  47.9M|            (lhs[k][BB])[1][1] =
 7412|  47.9M|                (lhs[k][BB])[1][1] - ((lhs[k][BB])[0][1]) * (lhs[k][BB])[1][0];
 7413|  47.9M|            (lhs[k][BB])[2][1] =
 7414|  47.9M|                (lhs[k][BB])[2][1] - ((lhs[k][BB])[0][1]) * (lhs[k][BB])[2][0];
 7415|  47.9M|            (lhs[k][BB])[3][1] =
 7416|  47.9M|                (lhs[k][BB])[3][1] - ((lhs[k][BB])[0][1]) * (lhs[k][BB])[3][0];
 7417|  47.9M|            (lhs[k][BB])[4][1] =
 7418|  47.9M|                (lhs[k][BB])[4][1] - ((lhs[k][BB])[0][1]) * (lhs[k][BB])[4][0];
 7419|  47.9M|            (lhs[k][CC])[0][1] =
 7420|  47.9M|                (lhs[k][CC])[0][1] - ((lhs[k][BB])[0][1]) * (lhs[k][CC])[0][0];
 7421|  47.9M|            (lhs[k][CC])[1][1] =
 7422|  47.9M|                (lhs[k][CC])[1][1] - ((lhs[k][BB])[0][1]) * (lhs[k][CC])[1][0];
 7423|  47.9M|            (lhs[k][CC])[2][1] =
 7424|  47.9M|                (lhs[k][CC])[2][1] - ((lhs[k][BB])[0][1]) * (lhs[k][CC])[2][0];
 7425|  47.9M|            (lhs[k][CC])[3][1] =
 7426|  47.9M|                (lhs[k][CC])[3][1] - ((lhs[k][BB])[0][1]) * (lhs[k][CC])[3][0];
 7427|  47.9M|            (lhs[k][CC])[4][1] =
 7428|  47.9M|                (lhs[k][CC])[4][1] - ((lhs[k][BB])[0][1]) * (lhs[k][CC])[4][0];
 7429|  47.9M|            (rhs[k][j][i])[1] =
 7430|  47.9M|                (rhs[k][j][i])[1] - ((lhs[k][BB])[0][1]) * (rhs[k][j][i])[0];
 7431|       |
 7432|  47.9M|            (lhs[k][BB])[1][2] =
 7433|  47.9M|                (lhs[k][BB])[1][2] - ((lhs[k][BB])[0][2]) * (lhs[k][BB])[1][0];
 7434|  47.9M|            (lhs[k][BB])[2][2] =
 7435|  47.9M|                (lhs[k][BB])[2][2] - ((lhs[k][BB])[0][2]) * (lhs[k][BB])[2][0];
 7436|  47.9M|            (lhs[k][BB])[3][2] =
 7437|  47.9M|                (lhs[k][BB])[3][2] - ((lhs[k][BB])[0][2]) * (lhs[k][BB])[3][0];
 7438|  47.9M|            (lhs[k][BB])[4][2] =
 7439|  47.9M|                (lhs[k][BB])[4][2] - ((lhs[k][BB])[0][2]) * (lhs[k][BB])[4][0];
 7440|  47.9M|            (lhs[k][CC])[0][2] =
 7441|  47.9M|                (lhs[k][CC])[0][2] - ((lhs[k][BB])[0][2]) * (lhs[k][CC])[0][0];
 7442|  47.9M|            (lhs[k][CC])[1][2] =
 7443|  47.9M|                (lhs[k][CC])[1][2] - ((lhs[k][BB])[0][2]) * (lhs[k][CC])[1][0];
 7444|  47.9M|            (lhs[k][CC])[2][2] =
 7445|  47.9M|                (lhs[k][CC])[2][2] - ((lhs[k][BB])[0][2]) * (lhs[k][CC])[2][0];
 7446|  47.9M|            (lhs[k][CC])[3][2] =
 7447|  47.9M|                (lhs[k][CC])[3][2] - ((lhs[k][BB])[0][2]) * (lhs[k][CC])[3][0];
 7448|  47.9M|            (lhs[k][CC])[4][2] =
 7449|  47.9M|                (lhs[k][CC])[4][2] - ((lhs[k][BB])[0][2]) * (lhs[k][CC])[4][0];
 7450|  47.9M|            (rhs[k][j][i])[2] =
 7451|  47.9M|                (rhs[k][j][i])[2] - ((lhs[k][BB])[0][2]) * (rhs[k][j][i])[0];
 7452|       |
 7453|  47.9M|            (lhs[k][BB])[1][3] =
 7454|  47.9M|                (lhs[k][BB])[1][3] - ((lhs[k][BB])[0][3]) * (lhs[k][BB])[1][0];
 7455|  47.9M|            (lhs[k][BB])[2][3] =
 7456|  47.9M|                (lhs[k][BB])[2][3] - ((lhs[k][BB])[0][3]) * (lhs[k][BB])[2][0];
 7457|  47.9M|            (lhs[k][BB])[3][3] =
 7458|  47.9M|                (lhs[k][BB])[3][3] - ((lhs[k][BB])[0][3]) * (lhs[k][BB])[3][0];
 7459|  47.9M|            (lhs[k][BB])[4][3] =
 7460|  47.9M|                (lhs[k][BB])[4][3] - ((lhs[k][BB])[0][3]) * (lhs[k][BB])[4][0];
 7461|  47.9M|            (lhs[k][CC])[0][3] =
 7462|  47.9M|                (lhs[k][CC])[0][3] - ((lhs[k][BB])[0][3]) * (lhs[k][CC])[0][0];
 7463|  47.9M|            (lhs[k][CC])[1][3] =
 7464|  47.9M|                (lhs[k][CC])[1][3] - ((lhs[k][BB])[0][3]) * (lhs[k][CC])[1][0];
 7465|  47.9M|            (lhs[k][CC])[2][3] =
 7466|  47.9M|                (lhs[k][CC])[2][3] - ((lhs[k][BB])[0][3]) * (lhs[k][CC])[2][0];
 7467|  47.9M|            (lhs[k][CC])[3][3] =
 7468|  47.9M|                (lhs[k][CC])[3][3] - ((lhs[k][BB])[0][3]) * (lhs[k][CC])[3][0];
 7469|  47.9M|            (lhs[k][CC])[4][3] =
 7470|  47.9M|                (lhs[k][CC])[4][3] - ((lhs[k][BB])[0][3]) * (lhs[k][CC])[4][0];
 7471|  47.9M|            (rhs[k][j][i])[3] =
 7472|  47.9M|                (rhs[k][j][i])[3] - ((lhs[k][BB])[0][3]) * (rhs[k][j][i])[0];
 7473|       |
 7474|  47.9M|            (lhs[k][BB])[1][4] =
 7475|  47.9M|                (lhs[k][BB])[1][4] - ((lhs[k][BB])[0][4]) * (lhs[k][BB])[1][0];
 7476|  47.9M|            (lhs[k][BB])[2][4] =
 7477|  47.9M|                (lhs[k][BB])[2][4] - ((lhs[k][BB])[0][4]) * (lhs[k][BB])[2][0];
 7478|  47.9M|            (lhs[k][BB])[3][4] =
 7479|  47.9M|                (lhs[k][BB])[3][4] - ((lhs[k][BB])[0][4]) * (lhs[k][BB])[3][0];
 7480|  47.9M|            (lhs[k][BB])[4][4] =
 7481|  47.9M|                (lhs[k][BB])[4][4] - ((lhs[k][BB])[0][4]) * (lhs[k][BB])[4][0];
 7482|  47.9M|            (lhs[k][CC])[0][4] =
 7483|  47.9M|                (lhs[k][CC])[0][4] - ((lhs[k][BB])[0][4]) * (lhs[k][CC])[0][0];
 7484|  47.9M|            (lhs[k][CC])[1][4] =
 7485|  47.9M|                (lhs[k][CC])[1][4] - ((lhs[k][BB])[0][4]) * (lhs[k][CC])[1][0];
 7486|  47.9M|            (lhs[k][CC])[2][4] =
 7487|  47.9M|                (lhs[k][CC])[2][4] - ((lhs[k][BB])[0][4]) * (lhs[k][CC])[2][0];
 7488|  47.9M|            (lhs[k][CC])[3][4] =
 7489|  47.9M|                (lhs[k][CC])[3][4] - ((lhs[k][BB])[0][4]) * (lhs[k][CC])[3][0];
 7490|  47.9M|            (lhs[k][CC])[4][4] =
 7491|  47.9M|                (lhs[k][CC])[4][4] - ((lhs[k][BB])[0][4]) * (lhs[k][CC])[4][0];
 7492|  47.9M|            (rhs[k][j][i])[4] =
 7493|  47.9M|                (rhs[k][j][i])[4] - ((lhs[k][BB])[0][4]) * (rhs[k][j][i])[0];
 7494|       |
 7495|  47.9M|            (lhs[k][BB])[2][1] =
 7496|  47.9M|                (lhs[k][BB])[2][1] * (1.00 / (lhs[k][BB])[1][1]);
 7497|  47.9M|            (lhs[k][BB])[3][1] =
 7498|  47.9M|                (lhs[k][BB])[3][1] * (1.00 / (lhs[k][BB])[1][1]);
 7499|  47.9M|            (lhs[k][BB])[4][1] =
 7500|  47.9M|                (lhs[k][BB])[4][1] * (1.00 / (lhs[k][BB])[1][1]);
 7501|  47.9M|            (lhs[k][CC])[0][1] =
 7502|  47.9M|                (lhs[k][CC])[0][1] * (1.00 / (lhs[k][BB])[1][1]);
 7503|  47.9M|            (lhs[k][CC])[1][1] =
 7504|  47.9M|                (lhs[k][CC])[1][1] * (1.00 / (lhs[k][BB])[1][1]);
 7505|  47.9M|            (lhs[k][CC])[2][1] =
 7506|  47.9M|                (lhs[k][CC])[2][1] * (1.00 / (lhs[k][BB])[1][1]);
 7507|  47.9M|            (lhs[k][CC])[3][1] =
 7508|  47.9M|                (lhs[k][CC])[3][1] * (1.00 / (lhs[k][BB])[1][1]);
 7509|  47.9M|            (lhs[k][CC])[4][1] =
 7510|  47.9M|                (lhs[k][CC])[4][1] * (1.00 / (lhs[k][BB])[1][1]);
 7511|  47.9M|            (rhs[k][j][i])[1] = (rhs[k][j][i])[1] * (1.00 / (lhs[k][BB])[1][1]);
 7512|       |
 7513|  47.9M|            (lhs[k][BB])[2][0] =
 7514|  47.9M|                (lhs[k][BB])[2][0] - ((lhs[k][BB])[1][0]) * (lhs[k][BB])[2][1];
 7515|  47.9M|            (lhs[k][BB])[3][0] =
 7516|  47.9M|                (lhs[k][BB])[3][0] - ((lhs[k][BB])[1][0]) * (lhs[k][BB])[3][1];
 7517|  47.9M|            (lhs[k][BB])[4][0] =
 7518|  47.9M|                (lhs[k][BB])[4][0] - ((lhs[k][BB])[1][0]) * (lhs[k][BB])[4][1];
 7519|  47.9M|            (lhs[k][CC])[0][0] =
 7520|  47.9M|                (lhs[k][CC])[0][0] - ((lhs[k][BB])[1][0]) * (lhs[k][CC])[0][1];
 7521|  47.9M|            (lhs[k][CC])[1][0] =
 7522|  47.9M|                (lhs[k][CC])[1][0] - ((lhs[k][BB])[1][0]) * (lhs[k][CC])[1][1];
 7523|  47.9M|            (lhs[k][CC])[2][0] =
 7524|  47.9M|                (lhs[k][CC])[2][0] - ((lhs[k][BB])[1][0]) * (lhs[k][CC])[2][1];
 7525|  47.9M|            (lhs[k][CC])[3][0] =
 7526|  47.9M|                (lhs[k][CC])[3][0] - ((lhs[k][BB])[1][0]) * (lhs[k][CC])[3][1];
 7527|  47.9M|            (lhs[k][CC])[4][0] =
 7528|  47.9M|                (lhs[k][CC])[4][0] - ((lhs[k][BB])[1][0]) * (lhs[k][CC])[4][1];
 7529|  47.9M|            (rhs[k][j][i])[0] =
 7530|  47.9M|                (rhs[k][j][i])[0] - ((lhs[k][BB])[1][0]) * (rhs[k][j][i])[1];
 7531|       |
 7532|  47.9M|            (lhs[k][BB])[2][2] =
 7533|  47.9M|                (lhs[k][BB])[2][2] - ((lhs[k][BB])[1][2]) * (lhs[k][BB])[2][1];
 7534|  47.9M|            (lhs[k][BB])[3][2] =
 7535|  47.9M|                (lhs[k][BB])[3][2] - ((lhs[k][BB])[1][2]) * (lhs[k][BB])[3][1];
 7536|  47.9M|            (lhs[k][BB])[4][2] =
 7537|  47.9M|                (lhs[k][BB])[4][2] - ((lhs[k][BB])[1][2]) * (lhs[k][BB])[4][1];
 7538|  47.9M|            (lhs[k][CC])[0][2] =
 7539|  47.9M|                (lhs[k][CC])[0][2] - ((lhs[k][BB])[1][2]) * (lhs[k][CC])[0][1];
 7540|  47.9M|            (lhs[k][CC])[1][2] =
 7541|  47.9M|                (lhs[k][CC])[1][2] - ((lhs[k][BB])[1][2]) * (lhs[k][CC])[1][1];
 7542|  47.9M|            (lhs[k][CC])[2][2] =
 7543|  47.9M|                (lhs[k][CC])[2][2] - ((lhs[k][BB])[1][2]) * (lhs[k][CC])[2][1];
 7544|  47.9M|            (lhs[k][CC])[3][2] =
 7545|  47.9M|                (lhs[k][CC])[3][2] - ((lhs[k][BB])[1][2]) * (lhs[k][CC])[3][1];
 7546|  47.9M|            (lhs[k][CC])[4][2] =
 7547|  47.9M|                (lhs[k][CC])[4][2] - ((lhs[k][BB])[1][2]) * (lhs[k][CC])[4][1];
 7548|  47.9M|            (rhs[k][j][i])[2] =
 7549|  47.9M|                (rhs[k][j][i])[2] - ((lhs[k][BB])[1][2]) * (rhs[k][j][i])[1];
 7550|       |
 7551|  47.9M|            (lhs[k][BB])[2][3] =
 7552|  47.9M|                (lhs[k][BB])[2][3] - ((lhs[k][BB])[1][3]) * (lhs[k][BB])[2][1];
 7553|  47.9M|            (lhs[k][BB])[3][3] =
 7554|  47.9M|                (lhs[k][BB])[3][3] - ((lhs[k][BB])[1][3]) * (lhs[k][BB])[3][1];
 7555|  47.9M|            (lhs[k][BB])[4][3] =
 7556|  47.9M|                (lhs[k][BB])[4][3] - ((lhs[k][BB])[1][3]) * (lhs[k][BB])[4][1];
 7557|  47.9M|            (lhs[k][CC])[0][3] =
 7558|  47.9M|                (lhs[k][CC])[0][3] - ((lhs[k][BB])[1][3]) * (lhs[k][CC])[0][1];
 7559|  47.9M|            (lhs[k][CC])[1][3] =
 7560|  47.9M|                (lhs[k][CC])[1][3] - ((lhs[k][BB])[1][3]) * (lhs[k][CC])[1][1];
 7561|  47.9M|            (lhs[k][CC])[2][3] =
 7562|  47.9M|                (lhs[k][CC])[2][3] - ((lhs[k][BB])[1][3]) * (lhs[k][CC])[2][1];
 7563|  47.9M|            (lhs[k][CC])[3][3] =
 7564|  47.9M|                (lhs[k][CC])[3][3] - ((lhs[k][BB])[1][3]) * (lhs[k][CC])[3][1];
 7565|  47.9M|            (lhs[k][CC])[4][3] =
 7566|  47.9M|                (lhs[k][CC])[4][3] - ((lhs[k][BB])[1][3]) * (lhs[k][CC])[4][1];
 7567|  47.9M|            (rhs[k][j][i])[3] =
 7568|  47.9M|                (rhs[k][j][i])[3] - ((lhs[k][BB])[1][3]) * (rhs[k][j][i])[1];
 7569|       |
 7570|  47.9M|            (lhs[k][BB])[2][4] =
 7571|  47.9M|                (lhs[k][BB])[2][4] - ((lhs[k][BB])[1][4]) * (lhs[k][BB])[2][1];
 7572|  47.9M|            (lhs[k][BB])[3][4] =
 7573|  47.9M|                (lhs[k][BB])[3][4] - ((lhs[k][BB])[1][4]) * (lhs[k][BB])[3][1];
 7574|  47.9M|            (lhs[k][BB])[4][4] =
 7575|  47.9M|                (lhs[k][BB])[4][4] - ((lhs[k][BB])[1][4]) * (lhs[k][BB])[4][1];
 7576|  47.9M|            (lhs[k][CC])[0][4] =
 7577|  47.9M|                (lhs[k][CC])[0][4] - ((lhs[k][BB])[1][4]) * (lhs[k][CC])[0][1];
 7578|  47.9M|            (lhs[k][CC])[1][4] =
 7579|  47.9M|                (lhs[k][CC])[1][4] - ((lhs[k][BB])[1][4]) * (lhs[k][CC])[1][1];
 7580|  47.9M|            (lhs[k][CC])[2][4] =
 7581|  47.9M|                (lhs[k][CC])[2][4] - ((lhs[k][BB])[1][4]) * (lhs[k][CC])[2][1];
 7582|  47.9M|            (lhs[k][CC])[3][4] =
 7583|  47.9M|                (lhs[k][CC])[3][4] - ((lhs[k][BB])[1][4]) * (lhs[k][CC])[3][1];
 7584|  47.9M|            (lhs[k][CC])[4][4] =
 7585|  47.9M|                (lhs[k][CC])[4][4] - ((lhs[k][BB])[1][4]) * (lhs[k][CC])[4][1];
 7586|  47.9M|            (rhs[k][j][i])[4] =
 7587|  47.9M|                (rhs[k][j][i])[4] - ((lhs[k][BB])[1][4]) * (rhs[k][j][i])[1];
 7588|       |
 7589|  47.9M|            (lhs[k][BB])[3][2] =
 7590|  47.9M|                (lhs[k][BB])[3][2] * (1.00 / (lhs[k][BB])[2][2]);
 7591|  47.9M|            (lhs[k][BB])[4][2] =
 7592|  47.9M|                (lhs[k][BB])[4][2] * (1.00 / (lhs[k][BB])[2][2]);
 7593|  47.9M|            (lhs[k][CC])[0][2] =
 7594|  47.9M|                (lhs[k][CC])[0][2] * (1.00 / (lhs[k][BB])[2][2]);
 7595|  47.9M|            (lhs[k][CC])[1][2] =
 7596|  47.9M|                (lhs[k][CC])[1][2] * (1.00 / (lhs[k][BB])[2][2]);
 7597|  47.9M|            (lhs[k][CC])[2][2] =
 7598|  47.9M|                (lhs[k][CC])[2][2] * (1.00 / (lhs[k][BB])[2][2]);
 7599|  47.9M|            (lhs[k][CC])[3][2] =
 7600|  47.9M|                (lhs[k][CC])[3][2] * (1.00 / (lhs[k][BB])[2][2]);
 7601|  47.9M|            (lhs[k][CC])[4][2] =
 7602|  47.9M|                (lhs[k][CC])[4][2] * (1.00 / (lhs[k][BB])[2][2]);
 7603|  47.9M|            (rhs[k][j][i])[2] = (rhs[k][j][i])[2] * (1.00 / (lhs[k][BB])[2][2]);
 7604|       |
 7605|  47.9M|            (lhs[k][BB])[3][0] =
 7606|  47.9M|                (lhs[k][BB])[3][0] - ((lhs[k][BB])[2][0]) * (lhs[k][BB])[3][2];
 7607|  47.9M|            (lhs[k][BB])[4][0] =
 7608|  47.9M|                (lhs[k][BB])[4][0] - ((lhs[k][BB])[2][0]) * (lhs[k][BB])[4][2];
 7609|  47.9M|            (lhs[k][CC])[0][0] =
 7610|  47.9M|                (lhs[k][CC])[0][0] - ((lhs[k][BB])[2][0]) * (lhs[k][CC])[0][2];
 7611|  47.9M|            (lhs[k][CC])[1][0] =
 7612|  47.9M|                (lhs[k][CC])[1][0] - ((lhs[k][BB])[2][0]) * (lhs[k][CC])[1][2];
 7613|  47.9M|            (lhs[k][CC])[2][0] =
 7614|  47.9M|                (lhs[k][CC])[2][0] - ((lhs[k][BB])[2][0]) * (lhs[k][CC])[2][2];
 7615|  47.9M|            (lhs[k][CC])[3][0] =
 7616|  47.9M|                (lhs[k][CC])[3][0] - ((lhs[k][BB])[2][0]) * (lhs[k][CC])[3][2];
 7617|  47.9M|            (lhs[k][CC])[4][0] =
 7618|  47.9M|                (lhs[k][CC])[4][0] - ((lhs[k][BB])[2][0]) * (lhs[k][CC])[4][2];
 7619|  47.9M|            (rhs[k][j][i])[0] =
 7620|  47.9M|                (rhs[k][j][i])[0] - ((lhs[k][BB])[2][0]) * (rhs[k][j][i])[2];
 7621|       |
 7622|  47.9M|            (lhs[k][BB])[3][1] =
 7623|  47.9M|                (lhs[k][BB])[3][1] - ((lhs[k][BB])[2][1]) * (lhs[k][BB])[3][2];
 7624|  47.9M|            (lhs[k][BB])[4][1] =
 7625|  47.9M|                (lhs[k][BB])[4][1] - ((lhs[k][BB])[2][1]) * (lhs[k][BB])[4][2];
 7626|  47.9M|            (lhs[k][CC])[0][1] =
 7627|  47.9M|                (lhs[k][CC])[0][1] - ((lhs[k][BB])[2][1]) * (lhs[k][CC])[0][2];
 7628|  47.9M|            (lhs[k][CC])[1][1] =
 7629|  47.9M|                (lhs[k][CC])[1][1] - ((lhs[k][BB])[2][1]) * (lhs[k][CC])[1][2];
 7630|  47.9M|            (lhs[k][CC])[2][1] =
 7631|  47.9M|                (lhs[k][CC])[2][1] - ((lhs[k][BB])[2][1]) * (lhs[k][CC])[2][2];
 7632|  47.9M|            (lhs[k][CC])[3][1] =
 7633|  47.9M|                (lhs[k][CC])[3][1] - ((lhs[k][BB])[2][1]) * (lhs[k][CC])[3][2];
 7634|  47.9M|            (lhs[k][CC])[4][1] =
 7635|  47.9M|                (lhs[k][CC])[4][1] - ((lhs[k][BB])[2][1]) * (lhs[k][CC])[4][2];
 7636|  47.9M|            (rhs[k][j][i])[1] =
 7637|  47.9M|                (rhs[k][j][i])[1] - ((lhs[k][BB])[2][1]) * (rhs[k][j][i])[2];
 7638|       |
 7639|  47.9M|            (lhs[k][BB])[3][3] =
 7640|  47.9M|                (lhs[k][BB])[3][3] - ((lhs[k][BB])[2][3]) * (lhs[k][BB])[3][2];
 7641|  47.9M|            (lhs[k][BB])[4][3] =
 7642|  47.9M|                (lhs[k][BB])[4][3] - ((lhs[k][BB])[2][3]) * (lhs[k][BB])[4][2];
 7643|  47.9M|            (lhs[k][CC])[0][3] =
 7644|  47.9M|                (lhs[k][CC])[0][3] - ((lhs[k][BB])[2][3]) * (lhs[k][CC])[0][2];
 7645|  47.9M|            (lhs[k][CC])[1][3] =
 7646|  47.9M|                (lhs[k][CC])[1][3] - ((lhs[k][BB])[2][3]) * (lhs[k][CC])[1][2];
 7647|  47.9M|            (lhs[k][CC])[2][3] =
 7648|  47.9M|                (lhs[k][CC])[2][3] - ((lhs[k][BB])[2][3]) * (lhs[k][CC])[2][2];
 7649|  47.9M|            (lhs[k][CC])[3][3] =
 7650|  47.9M|                (lhs[k][CC])[3][3] - ((lhs[k][BB])[2][3]) * (lhs[k][CC])[3][2];
 7651|  47.9M|            (lhs[k][CC])[4][3] =
 7652|  47.9M|                (lhs[k][CC])[4][3] - ((lhs[k][BB])[2][3]) * (lhs[k][CC])[4][2];
 7653|  47.9M|            (rhs[k][j][i])[3] =
 7654|  47.9M|                (rhs[k][j][i])[3] - ((lhs[k][BB])[2][3]) * (rhs[k][j][i])[2];
 7655|       |
 7656|  47.9M|            (lhs[k][BB])[3][4] =
 7657|  47.9M|                (lhs[k][BB])[3][4] - ((lhs[k][BB])[2][4]) * (lhs[k][BB])[3][2];
 7658|  47.9M|            (lhs[k][BB])[4][4] =
 7659|  47.9M|                (lhs[k][BB])[4][4] - ((lhs[k][BB])[2][4]) * (lhs[k][BB])[4][2];
 7660|  47.9M|            (lhs[k][CC])[0][4] =
 7661|  47.9M|                (lhs[k][CC])[0][4] - ((lhs[k][BB])[2][4]) * (lhs[k][CC])[0][2];
 7662|  47.9M|            (lhs[k][CC])[1][4] =
 7663|  47.9M|                (lhs[k][CC])[1][4] - ((lhs[k][BB])[2][4]) * (lhs[k][CC])[1][2];
 7664|  47.9M|            (lhs[k][CC])[2][4] =
 7665|  47.9M|                (lhs[k][CC])[2][4] - ((lhs[k][BB])[2][4]) * (lhs[k][CC])[2][2];
 7666|  47.9M|            (lhs[k][CC])[3][4] =
 7667|  47.9M|                (lhs[k][CC])[3][4] - ((lhs[k][BB])[2][4]) * (lhs[k][CC])[3][2];
 7668|  47.9M|            (lhs[k][CC])[4][4] =
 7669|  47.9M|                (lhs[k][CC])[4][4] - ((lhs[k][BB])[2][4]) * (lhs[k][CC])[4][2];
 7670|  47.9M|            (rhs[k][j][i])[4] =
 7671|  47.9M|                (rhs[k][j][i])[4] - ((lhs[k][BB])[2][4]) * (rhs[k][j][i])[2];
 7672|       |
 7673|  47.9M|            (lhs[k][BB])[4][3] =
 7674|  47.9M|                (lhs[k][BB])[4][3] * (1.00 / (lhs[k][BB])[3][3]);
 7675|  47.9M|            (lhs[k][CC])[0][3] =
 7676|  47.9M|                (lhs[k][CC])[0][3] * (1.00 / (lhs[k][BB])[3][3]);
 7677|  47.9M|            (lhs[k][CC])[1][3] =
 7678|  47.9M|                (lhs[k][CC])[1][3] * (1.00 / (lhs[k][BB])[3][3]);
 7679|  47.9M|            (lhs[k][CC])[2][3] =
 7680|  47.9M|                (lhs[k][CC])[2][3] * (1.00 / (lhs[k][BB])[3][3]);
 7681|  47.9M|            (lhs[k][CC])[3][3] =
 7682|  47.9M|                (lhs[k][CC])[3][3] * (1.00 / (lhs[k][BB])[3][3]);
 7683|  47.9M|            (lhs[k][CC])[4][3] =
 7684|  47.9M|                (lhs[k][CC])[4][3] * (1.00 / (lhs[k][BB])[3][3]);
 7685|  47.9M|            (rhs[k][j][i])[3] = (rhs[k][j][i])[3] * (1.00 / (lhs[k][BB])[3][3]);
 7686|       |
 7687|  47.9M|            (lhs[k][BB])[4][0] =
 7688|  47.9M|                (lhs[k][BB])[4][0] - ((lhs[k][BB])[3][0]) * (lhs[k][BB])[4][3];
 7689|  47.9M|            (lhs[k][CC])[0][0] =
 7690|  47.9M|                (lhs[k][CC])[0][0] - ((lhs[k][BB])[3][0]) * (lhs[k][CC])[0][3];
 7691|  47.9M|            (lhs[k][CC])[1][0] =
 7692|  47.9M|                (lhs[k][CC])[1][0] - ((lhs[k][BB])[3][0]) * (lhs[k][CC])[1][3];
 7693|  47.9M|            (lhs[k][CC])[2][0] =
 7694|  47.9M|                (lhs[k][CC])[2][0] - ((lhs[k][BB])[3][0]) * (lhs[k][CC])[2][3];
 7695|  47.9M|            (lhs[k][CC])[3][0] =
 7696|  47.9M|                (lhs[k][CC])[3][0] - ((lhs[k][BB])[3][0]) * (lhs[k][CC])[3][3];
 7697|  47.9M|            (lhs[k][CC])[4][0] =
 7698|  47.9M|                (lhs[k][CC])[4][0] - ((lhs[k][BB])[3][0]) * (lhs[k][CC])[4][3];
 7699|  47.9M|            (rhs[k][j][i])[0] =
 7700|  47.9M|                (rhs[k][j][i])[0] - ((lhs[k][BB])[3][0]) * (rhs[k][j][i])[3];
 7701|       |
 7702|  47.9M|            (lhs[k][BB])[4][1] =
 7703|  47.9M|                (lhs[k][BB])[4][1] - ((lhs[k][BB])[3][1]) * (lhs[k][BB])[4][3];
 7704|  47.9M|            (lhs[k][CC])[0][1] =
 7705|  47.9M|                (lhs[k][CC])[0][1] - ((lhs[k][BB])[3][1]) * (lhs[k][CC])[0][3];
 7706|  47.9M|            (lhs[k][CC])[1][1] =
 7707|  47.9M|                (lhs[k][CC])[1][1] - ((lhs[k][BB])[3][1]) * (lhs[k][CC])[1][3];
 7708|  47.9M|            (lhs[k][CC])[2][1] =
 7709|  47.9M|                (lhs[k][CC])[2][1] - ((lhs[k][BB])[3][1]) * (lhs[k][CC])[2][3];
 7710|  47.9M|            (lhs[k][CC])[3][1] =
 7711|  47.9M|                (lhs[k][CC])[3][1] - ((lhs[k][BB])[3][1]) * (lhs[k][CC])[3][3];
 7712|  47.9M|            (lhs[k][CC])[4][1] =
 7713|  47.9M|                (lhs[k][CC])[4][1] - ((lhs[k][BB])[3][1]) * (lhs[k][CC])[4][3];
 7714|  47.9M|            (rhs[k][j][i])[1] =
 7715|  47.9M|                (rhs[k][j][i])[1] - ((lhs[k][BB])[3][1]) * (rhs[k][j][i])[3];
 7716|       |
 7717|  47.9M|            (lhs[k][BB])[4][2] =
 7718|  47.9M|                (lhs[k][BB])[4][2] - ((lhs[k][BB])[3][2]) * (lhs[k][BB])[4][3];
 7719|  47.9M|            (lhs[k][CC])[0][2] =
 7720|  47.9M|                (lhs[k][CC])[0][2] - ((lhs[k][BB])[3][2]) * (lhs[k][CC])[0][3];
 7721|  47.9M|            (lhs[k][CC])[1][2] =
 7722|  47.9M|                (lhs[k][CC])[1][2] - ((lhs[k][BB])[3][2]) * (lhs[k][CC])[1][3];
 7723|  47.9M|            (lhs[k][CC])[2][2] =
 7724|  47.9M|                (lhs[k][CC])[2][2] - ((lhs[k][BB])[3][2]) * (lhs[k][CC])[2][3];
 7725|  47.9M|            (lhs[k][CC])[3][2] =
 7726|  47.9M|                (lhs[k][CC])[3][2] - ((lhs[k][BB])[3][2]) * (lhs[k][CC])[3][3];
 7727|  47.9M|            (lhs[k][CC])[4][2] =
 7728|  47.9M|                (lhs[k][CC])[4][2] - ((lhs[k][BB])[3][2]) * (lhs[k][CC])[4][3];
 7729|  47.9M|            (rhs[k][j][i])[2] =
 7730|  47.9M|                (rhs[k][j][i])[2] - ((lhs[k][BB])[3][2]) * (rhs[k][j][i])[3];
 7731|       |
 7732|  47.9M|            (lhs[k][BB])[4][4] =
 7733|  47.9M|                (lhs[k][BB])[4][4] - ((lhs[k][BB])[3][4]) * (lhs[k][BB])[4][3];
 7734|  47.9M|            (lhs[k][CC])[0][4] =
 7735|  47.9M|                (lhs[k][CC])[0][4] - ((lhs[k][BB])[3][4]) * (lhs[k][CC])[0][3];
 7736|  47.9M|            (lhs[k][CC])[1][4] =
 7737|  47.9M|                (lhs[k][CC])[1][4] - ((lhs[k][BB])[3][4]) * (lhs[k][CC])[1][3];
 7738|  47.9M|            (lhs[k][CC])[2][4] =
 7739|  47.9M|                (lhs[k][CC])[2][4] - ((lhs[k][BB])[3][4]) * (lhs[k][CC])[2][3];
 7740|  47.9M|            (lhs[k][CC])[3][4] =
 7741|  47.9M|                (lhs[k][CC])[3][4] - ((lhs[k][BB])[3][4]) * (lhs[k][CC])[3][3];
 7742|  47.9M|            (lhs[k][CC])[4][4] =
 7743|  47.9M|                (lhs[k][CC])[4][4] - ((lhs[k][BB])[3][4]) * (lhs[k][CC])[4][3];
 7744|  47.9M|            (rhs[k][j][i])[4] =
 7745|  47.9M|                (rhs[k][j][i])[4] - ((lhs[k][BB])[3][4]) * (rhs[k][j][i])[3];
 7746|       |
 7747|  47.9M|            (lhs[k][CC])[0][4] =
 7748|  47.9M|                (lhs[k][CC])[0][4] * (1.00 / (lhs[k][BB])[4][4]);
 7749|  47.9M|            (lhs[k][CC])[1][4] =
 7750|  47.9M|                (lhs[k][CC])[1][4] * (1.00 / (lhs[k][BB])[4][4]);
 7751|  47.9M|            (lhs[k][CC])[2][4] =
 7752|  47.9M|                (lhs[k][CC])[2][4] * (1.00 / (lhs[k][BB])[4][4]);
 7753|  47.9M|            (lhs[k][CC])[3][4] =
 7754|  47.9M|                (lhs[k][CC])[3][4] * (1.00 / (lhs[k][BB])[4][4]);
 7755|  47.9M|            (lhs[k][CC])[4][4] =
 7756|  47.9M|                (lhs[k][CC])[4][4] * (1.00 / (lhs[k][BB])[4][4]);
 7757|  47.9M|            (rhs[k][j][i])[4] = (rhs[k][j][i])[4] * (1.00 / (lhs[k][BB])[4][4]);
 7758|       |
 7759|  47.9M|            (lhs[k][CC])[0][0] =
 7760|  47.9M|                (lhs[k][CC])[0][0] - ((lhs[k][BB])[4][0]) * (lhs[k][CC])[0][4];
 7761|  47.9M|            (lhs[k][CC])[1][0] =
 7762|  47.9M|                (lhs[k][CC])[1][0] - ((lhs[k][BB])[4][0]) * (lhs[k][CC])[1][4];
 7763|  47.9M|            (lhs[k][CC])[2][0] =
 7764|  47.9M|                (lhs[k][CC])[2][0] - ((lhs[k][BB])[4][0]) * (lhs[k][CC])[2][4];
 7765|  47.9M|            (lhs[k][CC])[3][0] =
 7766|  47.9M|                (lhs[k][CC])[3][0] - ((lhs[k][BB])[4][0]) * (lhs[k][CC])[3][4];
 7767|  47.9M|            (lhs[k][CC])[4][0] =
 7768|  47.9M|                (lhs[k][CC])[4][0] - ((lhs[k][BB])[4][0]) * (lhs[k][CC])[4][4];
 7769|  47.9M|            (rhs[k][j][i])[0] =
 7770|  47.9M|                (rhs[k][j][i])[0] - ((lhs[k][BB])[4][0]) * (rhs[k][j][i])[4];
 7771|       |
 7772|  47.9M|            (lhs[k][CC])[0][1] =
 7773|  47.9M|                (lhs[k][CC])[0][1] - ((lhs[k][BB])[4][1]) * (lhs[k][CC])[0][4];
 7774|  47.9M|            (lhs[k][CC])[1][1] =
 7775|  47.9M|                (lhs[k][CC])[1][1] - ((lhs[k][BB])[4][1]) * (lhs[k][CC])[1][4];
 7776|  47.9M|            (lhs[k][CC])[2][1] =
 7777|  47.9M|                (lhs[k][CC])[2][1] - ((lhs[k][BB])[4][1]) * (lhs[k][CC])[2][4];
 7778|  47.9M|            (lhs[k][CC])[3][1] =
 7779|  47.9M|                (lhs[k][CC])[3][1] - ((lhs[k][BB])[4][1]) * (lhs[k][CC])[3][4];
 7780|  47.9M|            (lhs[k][CC])[4][1] =
 7781|  47.9M|                (lhs[k][CC])[4][1] - ((lhs[k][BB])[4][1]) * (lhs[k][CC])[4][4];
 7782|  47.9M|            (rhs[k][j][i])[1] =
 7783|  47.9M|                (rhs[k][j][i])[1] - ((lhs[k][BB])[4][1]) * (rhs[k][j][i])[4];
 7784|       |
 7785|  47.9M|            (lhs[k][CC])[0][2] =
 7786|  47.9M|                (lhs[k][CC])[0][2] - ((lhs[k][BB])[4][2]) * (lhs[k][CC])[0][4];
 7787|  47.9M|            (lhs[k][CC])[1][2] =
 7788|  47.9M|                (lhs[k][CC])[1][2] - ((lhs[k][BB])[4][2]) * (lhs[k][CC])[1][4];
 7789|  47.9M|            (lhs[k][CC])[2][2] =
 7790|  47.9M|                (lhs[k][CC])[2][2] - ((lhs[k][BB])[4][2]) * (lhs[k][CC])[2][4];
 7791|  47.9M|            (lhs[k][CC])[3][2] =
 7792|  47.9M|                (lhs[k][CC])[3][2] - ((lhs[k][BB])[4][2]) * (lhs[k][CC])[3][4];
 7793|  47.9M|            (lhs[k][CC])[4][2] =
 7794|  47.9M|                (lhs[k][CC])[4][2] - ((lhs[k][BB])[4][2]) * (lhs[k][CC])[4][4];
 7795|  47.9M|            (rhs[k][j][i])[2] =
 7796|  47.9M|                (rhs[k][j][i])[2] - ((lhs[k][BB])[4][2]) * (rhs[k][j][i])[4];
 7797|       |
 7798|  47.9M|            (lhs[k][CC])[0][3] =
 7799|  47.9M|                (lhs[k][CC])[0][3] - ((lhs[k][BB])[4][3]) * (lhs[k][CC])[0][4];
 7800|  47.9M|            (lhs[k][CC])[1][3] =
 7801|  47.9M|                (lhs[k][CC])[1][3] - ((lhs[k][BB])[4][3]) * (lhs[k][CC])[1][4];
 7802|  47.9M|            (lhs[k][CC])[2][3] =
 7803|  47.9M|                (lhs[k][CC])[2][3] - ((lhs[k][BB])[4][3]) * (lhs[k][CC])[2][4];
 7804|  47.9M|            (lhs[k][CC])[3][3] =
 7805|  47.9M|                (lhs[k][CC])[3][3] - ((lhs[k][BB])[4][3]) * (lhs[k][CC])[3][4];
 7806|  47.9M|            (lhs[k][CC])[4][3] =
 7807|  47.9M|                (lhs[k][CC])[4][3] - ((lhs[k][BB])[4][3]) * (lhs[k][CC])[4][4];
 7808|  47.9M|            (rhs[k][j][i])[3] =
 7809|  47.9M|                (rhs[k][j][i])[3] - ((lhs[k][BB])[4][3]) * (rhs[k][j][i])[4];
 7810|  47.9M|          }
 7811|  47.9M|        }
 7812|       |
 7813|       |        //---------------------------------------------------------------------
 7814|       |        // Now finish up special cases for last cell
 7815|       |        //---------------------------------------------------------------------
 7816|       |
 7817|       |        //---------------------------------------------------------------------
 7818|       |        // rhs(ksize) = rhs(ksize) - A*rhs(ksize-1)
 7819|       |        //---------------------------------------------------------------------
 7820|       |        /* matvec_sub(lhs[ksize][AA], rhs[ksize - 1][j][i], rhs[ksize][j][i]) is
 7821|       |         * inlined below */
 7822|       |//#pragma spf assert nomacro
 7823|   772k|        {
 7824|       |
 7825|       |          //---------------------------------------------------------------------
 7826|       |          // rhs[kc][jc][ic][i] = rhs[kc][jc][ic][i]
 7827|       |          // $                  - lhs[ia][ablock][0][i]*
 7828|       |          //---------------------------------------------------------------------
 7829|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 7830|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] -
 7831|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 7832|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[0] -
 7833|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 7834|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[1] -
 7835|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 7836|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[2] -
 7837|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 7838|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[3] -
 7839|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 7840|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[4];
 7841|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 7842|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] -
 7843|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 7844|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[0] -
 7845|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 7846|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[1] -
 7847|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 7848|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[2] -
 7849|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 7850|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[3] -
 7851|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 7852|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[4];
 7853|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 7854|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] -
 7855|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 7856|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[0] -
 7857|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 7858|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[1] -
 7859|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 7860|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[2] -
 7861|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 7862|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[3] -
 7863|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 7864|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[4];
 7865|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 7866|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] -
 7867|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 7868|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[0] -
 7869|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 7870|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[1] -
 7871|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 7872|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[2] -
 7873|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 7874|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[3] -
 7875|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 7876|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[4];
 7877|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 7878|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] -
 7879|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 7880|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[0] -
 7881|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 7882|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[1] -
 7883|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 7884|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[2] -
 7885|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 7886|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[3] -
 7887|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 7888|   772k|                  (rhs[(grid_points[2] - 1) - 1][j][i])[4];
 7889|   772k|        }
 7890|       |
 7891|       |        //---------------------------------------------------------------------
 7892|       |        // B(ksize) = B(ksize) - C(ksize-1)*A(ksize)
 7893|       |        // matmul_sub(AA,i,j,ksize,c,
 7894|       |        // $              CC,i,j,ksize-1,c,BB,i,j,ksize)
 7895|       |        //---------------------------------------------------------------------
 7896|       |        /* matmul_sub(lhs[ksize][AA], lhs[ksize - 1][CC], lhs[ksize][BB]) is
 7897|       |         * inlined below */
 7898|       |//#pragma spf assert nomacro
 7899|   772k|        {
 7900|       |
 7901|   772k|          (lhs[(grid_points[2] - 1)][BB])[0][0] =
 7902|   772k|              (lhs[(grid_points[2] - 1)][BB])[0][0] -
 7903|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 7904|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][0] -
 7905|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 7906|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][1] -
 7907|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 7908|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][2] -
 7909|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 7910|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][3] -
 7911|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 7912|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][4];
 7913|   772k|          (lhs[(grid_points[2] - 1)][BB])[0][1] =
 7914|   772k|              (lhs[(grid_points[2] - 1)][BB])[0][1] -
 7915|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 7916|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][0] -
 7917|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 7918|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][1] -
 7919|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 7920|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][2] -
 7921|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 7922|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][3] -
 7923|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 7924|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][4];
 7925|   772k|          (lhs[(grid_points[2] - 1)][BB])[0][2] =
 7926|   772k|              (lhs[(grid_points[2] - 1)][BB])[0][2] -
 7927|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 7928|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][0] -
 7929|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 7930|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][1] -
 7931|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 7932|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][2] -
 7933|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 7934|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][3] -
 7935|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 7936|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][4];
 7937|   772k|          (lhs[(grid_points[2] - 1)][BB])[0][3] =
 7938|   772k|              (lhs[(grid_points[2] - 1)][BB])[0][3] -
 7939|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 7940|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][0] -
 7941|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 7942|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][1] -
 7943|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 7944|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][2] -
 7945|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 7946|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][3] -
 7947|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 7948|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][4];
 7949|   772k|          (lhs[(grid_points[2] - 1)][BB])[0][4] =
 7950|   772k|              (lhs[(grid_points[2] - 1)][BB])[0][4] -
 7951|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 7952|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][0] -
 7953|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 7954|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][1] -
 7955|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 7956|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][2] -
 7957|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 7958|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][3] -
 7959|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 7960|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[0][4];
 7961|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][0] =
 7962|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][0] -
 7963|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 7964|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][0] -
 7965|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 7966|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][1] -
 7967|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 7968|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][2] -
 7969|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 7970|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][3] -
 7971|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 7972|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][4];
 7973|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][1] =
 7974|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][1] -
 7975|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 7976|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][0] -
 7977|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 7978|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][1] -
 7979|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 7980|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][2] -
 7981|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 7982|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][3] -
 7983|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 7984|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][4];
 7985|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][2] =
 7986|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][2] -
 7987|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 7988|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][0] -
 7989|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 7990|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][1] -
 7991|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 7992|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][2] -
 7993|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 7994|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][3] -
 7995|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 7996|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][4];
 7997|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][3] =
 7998|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][3] -
 7999|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 8000|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][0] -
 8001|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 8002|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][1] -
 8003|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 8004|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][2] -
 8005|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 8006|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][3] -
 8007|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 8008|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][4];
 8009|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][4] =
 8010|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][4] -
 8011|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 8012|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][0] -
 8013|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 8014|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][1] -
 8015|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 8016|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][2] -
 8017|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 8018|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][3] -
 8019|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 8020|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[1][4];
 8021|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][0] =
 8022|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][0] -
 8023|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 8024|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][0] -
 8025|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 8026|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][1] -
 8027|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 8028|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][2] -
 8029|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 8030|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][3] -
 8031|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 8032|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][4];
 8033|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][1] =
 8034|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][1] -
 8035|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 8036|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][0] -
 8037|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 8038|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][1] -
 8039|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 8040|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][2] -
 8041|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 8042|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][3] -
 8043|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 8044|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][4];
 8045|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][2] =
 8046|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][2] -
 8047|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 8048|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][0] -
 8049|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 8050|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][1] -
 8051|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 8052|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][2] -
 8053|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 8054|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][3] -
 8055|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 8056|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][4];
 8057|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][3] =
 8058|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][3] -
 8059|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 8060|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][0] -
 8061|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 8062|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][1] -
 8063|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 8064|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][2] -
 8065|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 8066|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][3] -
 8067|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 8068|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][4];
 8069|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][4] =
 8070|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][4] -
 8071|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 8072|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][0] -
 8073|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 8074|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][1] -
 8075|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 8076|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][2] -
 8077|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 8078|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][3] -
 8079|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 8080|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[2][4];
 8081|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][0] =
 8082|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][0] -
 8083|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 8084|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][0] -
 8085|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 8086|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][1] -
 8087|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 8088|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][2] -
 8089|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 8090|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][3] -
 8091|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 8092|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][4];
 8093|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][1] =
 8094|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][1] -
 8095|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 8096|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][0] -
 8097|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 8098|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][1] -
 8099|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 8100|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][2] -
 8101|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 8102|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][3] -
 8103|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 8104|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][4];
 8105|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][2] =
 8106|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][2] -
 8107|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 8108|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][0] -
 8109|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 8110|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][1] -
 8111|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 8112|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][2] -
 8113|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 8114|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][3] -
 8115|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 8116|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][4];
 8117|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][3] =
 8118|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][3] -
 8119|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 8120|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][0] -
 8121|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 8122|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][1] -
 8123|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 8124|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][2] -
 8125|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 8126|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][3] -
 8127|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 8128|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][4];
 8129|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][4] =
 8130|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][4] -
 8131|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 8132|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][0] -
 8133|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 8134|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][1] -
 8135|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 8136|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][2] -
 8137|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 8138|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][3] -
 8139|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 8140|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[3][4];
 8141|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][0] =
 8142|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][0] -
 8143|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][0] *
 8144|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][0] -
 8145|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][0] *
 8146|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][1] -
 8147|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][0] *
 8148|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][2] -
 8149|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][0] *
 8150|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][3] -
 8151|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][0] *
 8152|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][4];
 8153|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][1] =
 8154|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][1] -
 8155|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][1] *
 8156|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][0] -
 8157|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][1] *
 8158|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][1] -
 8159|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][1] *
 8160|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][2] -
 8161|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][1] *
 8162|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][3] -
 8163|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][1] *
 8164|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][4];
 8165|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][2] =
 8166|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][2] -
 8167|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][2] *
 8168|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][0] -
 8169|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][2] *
 8170|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][1] -
 8171|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][2] *
 8172|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][2] -
 8173|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][2] *
 8174|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][3] -
 8175|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][2] *
 8176|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][4];
 8177|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][3] =
 8178|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][3] -
 8179|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][3] *
 8180|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][0] -
 8181|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][3] *
 8182|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][1] -
 8183|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][3] *
 8184|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][2] -
 8185|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][3] *
 8186|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][3] -
 8187|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][3] *
 8188|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][4];
 8189|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][4] =
 8190|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][4] -
 8191|   772k|              (lhs[(grid_points[2] - 1)][AA])[0][4] *
 8192|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][0] -
 8193|   772k|              (lhs[(grid_points[2] - 1)][AA])[1][4] *
 8194|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][1] -
 8195|   772k|              (lhs[(grid_points[2] - 1)][AA])[2][4] *
 8196|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][2] -
 8197|   772k|              (lhs[(grid_points[2] - 1)][AA])[3][4] *
 8198|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][3] -
 8199|   772k|              (lhs[(grid_points[2] - 1)][AA])[4][4] *
 8200|   772k|                  (lhs[(grid_points[2] - 1) - 1][CC])[4][4];
 8201|   772k|        }
 8202|       |
 8203|       |        //---------------------------------------------------------------------
 8204|       |        // multiply rhs(ksize) by b_inverse(ksize) and copy to rhs
 8205|       |        //---------------------------------------------------------------------
 8206|       |        /* binvrhs(lhs[ksize][BB], rhs[ksize][j][i]) is inlined below */
 8207|       |//#pragma spf assert nomacro
 8208|   772k|        {
 8209|       |
 8210|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][0] =
 8211|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][0] *
 8212|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[0][0]);
 8213|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][0] =
 8214|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][0] *
 8215|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[0][0]);
 8216|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][0] =
 8217|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][0] *
 8218|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[0][0]);
 8219|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][0] =
 8220|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][0] *
 8221|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[0][0]);
 8222|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 8223|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] *
 8224|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[0][0]);
 8225|       |
 8226|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][1] =
 8227|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][1] -
 8228|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][1]) *
 8229|   772k|                  (lhs[(grid_points[2] - 1)][BB])[1][0];
 8230|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][1] =
 8231|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][1] -
 8232|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][1]) *
 8233|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][0];
 8234|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][1] =
 8235|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][1] -
 8236|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][1]) *
 8237|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][0];
 8238|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][1] =
 8239|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][1] -
 8240|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][1]) *
 8241|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][0];
 8242|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 8243|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] -
 8244|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][1]) *
 8245|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[0];
 8246|       |
 8247|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][2] =
 8248|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][2] -
 8249|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][2]) *
 8250|   772k|                  (lhs[(grid_points[2] - 1)][BB])[1][0];
 8251|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][2] =
 8252|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][2] -
 8253|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][2]) *
 8254|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][0];
 8255|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][2] =
 8256|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][2] -
 8257|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][2]) *
 8258|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][0];
 8259|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][2] =
 8260|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][2] -
 8261|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][2]) *
 8262|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][0];
 8263|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 8264|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] -
 8265|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][2]) *
 8266|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[0];
 8267|       |
 8268|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][3] =
 8269|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][3] -
 8270|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][3]) *
 8271|   772k|                  (lhs[(grid_points[2] - 1)][BB])[1][0];
 8272|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][3] =
 8273|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][3] -
 8274|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][3]) *
 8275|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][0];
 8276|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][3] =
 8277|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][3] -
 8278|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][3]) *
 8279|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][0];
 8280|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][3] =
 8281|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][3] -
 8282|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][3]) *
 8283|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][0];
 8284|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 8285|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] -
 8286|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][3]) *
 8287|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[0];
 8288|       |
 8289|   772k|          (lhs[(grid_points[2] - 1)][BB])[1][4] =
 8290|   772k|              (lhs[(grid_points[2] - 1)][BB])[1][4] -
 8291|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][4]) *
 8292|   772k|                  (lhs[(grid_points[2] - 1)][BB])[1][0];
 8293|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][4] =
 8294|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][4] -
 8295|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][4]) *
 8296|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][0];
 8297|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][4] =
 8298|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][4] -
 8299|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][4]) *
 8300|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][0];
 8301|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][4] =
 8302|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][4] -
 8303|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][4]) *
 8304|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][0];
 8305|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 8306|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] -
 8307|   772k|              ((lhs[(grid_points[2] - 1)][BB])[0][4]) *
 8308|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[0];
 8309|       |
 8310|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][1] =
 8311|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][1] *
 8312|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[1][1]);
 8313|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][1] =
 8314|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][1] *
 8315|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[1][1]);
 8316|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][1] =
 8317|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][1] *
 8318|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[1][1]);
 8319|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 8320|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] *
 8321|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[1][1]);
 8322|       |
 8323|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][0] =
 8324|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][0] -
 8325|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][0]) *
 8326|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][1];
 8327|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][0] =
 8328|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][0] -
 8329|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][0]) *
 8330|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][1];
 8331|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][0] =
 8332|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][0] -
 8333|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][0]) *
 8334|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][1];
 8335|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 8336|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] -
 8337|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][0]) *
 8338|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[1];
 8339|       |
 8340|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][2] =
 8341|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][2] -
 8342|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][2]) *
 8343|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][1];
 8344|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][2] =
 8345|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][2] -
 8346|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][2]) *
 8347|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][1];
 8348|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][2] =
 8349|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][2] -
 8350|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][2]) *
 8351|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][1];
 8352|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 8353|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] -
 8354|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][2]) *
 8355|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[1];
 8356|       |
 8357|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][3] =
 8358|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][3] -
 8359|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][3]) *
 8360|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][1];
 8361|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][3] =
 8362|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][3] -
 8363|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][3]) *
 8364|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][1];
 8365|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][3] =
 8366|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][3] -
 8367|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][3]) *
 8368|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][1];
 8369|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 8370|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] -
 8371|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][3]) *
 8372|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[1];
 8373|       |
 8374|   772k|          (lhs[(grid_points[2] - 1)][BB])[2][4] =
 8375|   772k|              (lhs[(grid_points[2] - 1)][BB])[2][4] -
 8376|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][4]) *
 8377|   772k|                  (lhs[(grid_points[2] - 1)][BB])[2][1];
 8378|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][4] =
 8379|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][4] -
 8380|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][4]) *
 8381|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][1];
 8382|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][4] =
 8383|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][4] -
 8384|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][4]) *
 8385|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][1];
 8386|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 8387|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] -
 8388|   772k|              ((lhs[(grid_points[2] - 1)][BB])[1][4]) *
 8389|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[1];
 8390|       |
 8391|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][2] =
 8392|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][2] *
 8393|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[2][2]);
 8394|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][2] =
 8395|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][2] *
 8396|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[2][2]);
 8397|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 8398|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] *
 8399|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[2][2]);
 8400|       |
 8401|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][0] =
 8402|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][0] -
 8403|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][0]) *
 8404|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][2];
 8405|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][0] =
 8406|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][0] -
 8407|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][0]) *
 8408|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][2];
 8409|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 8410|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] -
 8411|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][0]) *
 8412|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[2];
 8413|       |
 8414|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][1] =
 8415|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][1] -
 8416|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][1]) *
 8417|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][2];
 8418|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][1] =
 8419|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][1] -
 8420|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][1]) *
 8421|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][2];
 8422|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 8423|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] -
 8424|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][1]) *
 8425|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[2];
 8426|       |
 8427|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][3] =
 8428|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][3] -
 8429|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][3]) *
 8430|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][2];
 8431|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][3] =
 8432|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][3] -
 8433|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][3]) *
 8434|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][2];
 8435|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 8436|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] -
 8437|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][3]) *
 8438|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[2];
 8439|       |
 8440|   772k|          (lhs[(grid_points[2] - 1)][BB])[3][4] =
 8441|   772k|              (lhs[(grid_points[2] - 1)][BB])[3][4] -
 8442|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][4]) *
 8443|   772k|                  (lhs[(grid_points[2] - 1)][BB])[3][2];
 8444|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][4] =
 8445|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][4] -
 8446|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][4]) *
 8447|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][2];
 8448|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 8449|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] -
 8450|   772k|              ((lhs[(grid_points[2] - 1)][BB])[2][4]) *
 8451|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[2];
 8452|       |
 8453|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][3] =
 8454|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][3] *
 8455|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[3][3]);
 8456|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 8457|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] *
 8458|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[3][3]);
 8459|       |
 8460|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][0] =
 8461|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][0] -
 8462|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][0]) *
 8463|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][3];
 8464|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 8465|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] -
 8466|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][0]) *
 8467|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[3];
 8468|       |
 8469|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][1] =
 8470|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][1] -
 8471|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][1]) *
 8472|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][3];
 8473|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 8474|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] -
 8475|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][1]) *
 8476|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[3];
 8477|       |
 8478|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][2] =
 8479|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][2] -
 8480|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][2]) *
 8481|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][3];
 8482|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 8483|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] -
 8484|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][2]) *
 8485|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[3];
 8486|       |
 8487|   772k|          (lhs[(grid_points[2] - 1)][BB])[4][4] =
 8488|   772k|              (lhs[(grid_points[2] - 1)][BB])[4][4] -
 8489|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][4]) *
 8490|   772k|                  (lhs[(grid_points[2] - 1)][BB])[4][3];
 8491|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 8492|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] -
 8493|   772k|              ((lhs[(grid_points[2] - 1)][BB])[3][4]) *
 8494|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[3];
 8495|       |
 8496|   772k|          (rhs[(grid_points[2] - 1)][j][i])[4] =
 8497|   772k|              (rhs[(grid_points[2] - 1)][j][i])[4] *
 8498|   772k|              (1.00 / (lhs[(grid_points[2] - 1)][BB])[4][4]);
 8499|       |
 8500|   772k|          (rhs[(grid_points[2] - 1)][j][i])[0] =
 8501|   772k|              (rhs[(grid_points[2] - 1)][j][i])[0] -
 8502|   772k|              ((lhs[(grid_points[2] - 1)][BB])[4][0]) *
 8503|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[4];
 8504|       |
 8505|   772k|          (rhs[(grid_points[2] - 1)][j][i])[1] =
 8506|   772k|              (rhs[(grid_points[2] - 1)][j][i])[1] -
 8507|   772k|              ((lhs[(grid_points[2] - 1)][BB])[4][1]) *
 8508|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[4];
 8509|       |
 8510|   772k|          (rhs[(grid_points[2] - 1)][j][i])[2] =
 8511|   772k|              (rhs[(grid_points[2] - 1)][j][i])[2] -
 8512|   772k|              ((lhs[(grid_points[2] - 1)][BB])[4][2]) *
 8513|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[4];
 8514|       |
 8515|   772k|          (rhs[(grid_points[2] - 1)][j][i])[3] =
 8516|   772k|              (rhs[(grid_points[2] - 1)][j][i])[3] -
 8517|   772k|              ((lhs[(grid_points[2] - 1)][BB])[4][3]) *
 8518|   772k|                  (rhs[(grid_points[2] - 1)][j][i])[4];
 8519|   772k|        }
 8520|       |
 8521|       |        //---------------------------------------------------------------------
 8522|       |        //---------------------------------------------------------------------
 8523|       |
 8524|       |        //---------------------------------------------------------------------
 8525|       |        // back solve: if last cell, then generate U(ksize)=rhs(ksize)
 8526|       |        // else assume U(ksize) is loaded in un pack backsub_info
 8527|       |        // so just use it
 8528|       |        // after u(kstart) will be sent to next cell
 8529|       |        //---------------------------------------------------------------------
 8530|       |
 8531|  49.4M|        for (k = (grid_points[2] - 1) - 1; k >= 0; k--) {
 8532|   292M|          for (m = 0; m < BLOCK_SIZE; m++) {
 8533|  1.46G|            for (n = 0; n < BLOCK_SIZE; n++) {
 8534|  1.21G|              rhs[k][j][i][m] =
 8535|  1.21G|                  rhs[k][j][i][m] - lhs[k][CC][n][m] * rhs[k + 1][j][i][n];
 8536|  1.21G|            }
 8537|   243M|          }
 8538|  48.6M|        }
 8539|   772k|      }
 8540|  12.4k|    }
 8541|    201|  }
 8542|    201|}
 8543|    201|  if (timeron)
 8544|      0|    timer_stop(t_zsolve);
 8545|    201|}
 8546|       |
 8547|       |void print_results(char *name, char class, int n1, int n2, int n3, int niter,
 8548|       |                   double t, double mops, char *optype, logical verified,
 8549|       |                   char *npbversion, char *compiletime, char *cs1, char *cs2,
 8550|      1|                   char *cs3, char *cs4, char *cs5, char *cs6, char *cs7) {
 8551|      1|  char size[16];
 8552|      1|  int j;
 8553|       |
 8554|      1|  printf("\n\n %s Benchmark Completed.\n", name);
 8555|      1|  printf(" Class           =             %12c\n", class);
 8556|       |
 8557|       |  // If this is not a grid-based problem (EP, FT, CG), then
 8558|       |  // we only print n1, which contains some measure of the
 8559|       |  // problem size. In that case, n2 and n3 are both zero.
 8560|       |  // Otherwise, we print the grid size n1xn2xn3
 8561|       |
 8562|      1|  if ((n2 == 0) && (n3 == 0)) {
 8563|      0|    if ((name[0] == 'E') && (name[1] == 'P')) {
 8564|      0|      sprintf(size, "%15.0lf", pow(2.0, n1));
 8565|      0|      j = 14;
 8566|      0|      if (size[j] == '.') {
 8567|      0|        size[j] = ' ';
 8568|      0|        j--;
 8569|      0|      }
 8570|      0|      size[j + 1] = '\0';
 8571|      0|      printf(" Size            =          %15s\n", size);
 8572|      0|    } else {
 8573|      0|      printf(" Size            =             %12d\n", n1);
 8574|      0|    }
 8575|      1|  } else {
 8576|      1|    printf(" Size            =           %4dx%4dx%4d\n", n1, n2, n3);
 8577|      1|  }
 8578|       |
 8579|      1|  printf(" Iterations      =             %12d\n", niter);
 8580|      1|  printf(" Time in seconds =             %12.2lf\n", t);
 8581|      1|  printf(" Mop/s total     =          %15.2lf\n", mops);
 8582|      1|  printf(" Operation type  = %24s\n", optype);
 8583|      1|  if (verified)
 8584|      1|    printf(" Verification    =             %12s\n", "SUCCESSFUL");
 8585|      0|  else
 8586|      0|    printf(" Verification    =             %12s\n", "UNSUCCESSFUL");
 8587|      1|  printf(" Version         =             %12s\n", npbversion);
 8588|      1|  printf(" Compile date    =             %12s\n", compiletime);
 8589|       |
 8590|      1|  printf("\n Compile options:\n"
 8591|      1|         "    CC           = %s\n",
 8592|      1|         cs1);
 8593|      1|  printf("    CLINK        = %s\n", cs2);
 8594|      1|  printf("    C_LIB        = %s\n", cs3);
 8595|      1|  printf("    C_INC        = %s\n", cs4);
 8596|      1|  printf("    CFLAGS       = %s\n", cs5);
 8597|      1|  printf("    CLINKFLAGS   = %s\n", cs6);
 8598|      1|  printf("    RAND         = %s\n", cs7);
 8599|       |
 8600|      1|  printf("\n--------------------------------------\n"
 8601|      1|         " Please send all errors/feedbacks to:\n"
 8602|      1|         " Center for Manycore Programming\n"
 8603|      1|         " cmp@aces.snu.ac.kr\n"
 8604|      1|         " http://aces.snu.ac.kr\n"
 8605|      1|         "--------------------------------------\n\n");
 8606|      1|}
 8607|       |
 8608|       |/*  Prototype  */
 8609|       |void wtime(double *);
 8610|       |
 8611|       |/*****************************************************************/
 8612|       |/******         E  L  A  P  S  E  D  _  T  I  M  E          ******/
 8613|       |/*****************************************************************/
 8614|      2|static double elapsed_time(void) {
 8615|      2|  double t;
 8616|       |
 8617|      2|  wtime(&t);
 8618|      2|  return (t);
 8619|      2|}
 8620|       |
 8621|       |static double start[64], elapsed[64];
 8622|       |
 8623|       |/*****************************************************************/
 8624|       |/******            T  I  M  E  R  _  C  L  E  A  R          ******/
 8625|       |/*****************************************************************/
 8626|     22|void timer_clear(int n) { elapsed[n] = 0.0; }
 8627|       |
 8628|       |/*****************************************************************/
 8629|       |/******            T  I  M  E  R  _  S  T  A  R  T          ******/
 8630|       |/*****************************************************************/
 8631|      1|void timer_start(int n) { start[n] = elapsed_time(); }
 8632|       |
 8633|       |/*****************************************************************/
 8634|       |/******            T  I  M  E  R  _  S  T  O  P             ******/
 8635|       |/*****************************************************************/
 8636|      1|void timer_stop(int n) {
 8637|      1|  double t, now;
 8638|       |
 8639|      1|  now = elapsed_time();
 8640|      1|  t = now - start[n];
 8641|      1|  elapsed[n] += t;
 8642|      1|}
 8643|       |
 8644|       |/*****************************************************************/
 8645|       |/******            T  I  M  E  R  _  R  E  A  D             ******/
 8646|       |/*****************************************************************/
 8647|      1|double timer_read(int n) { return (elapsed[n]); }
 8648|       |
 8649|      2|void wtime(double *t) {
 8650|      2|  static int sec = -1;
 8651|      2|#ifndef _WIN32
 8652|      2|  struct timeval tv;
 8653|      2|  gettimeofday(&tv, (void *)0);
 8654|      2|  if (sec < 0)
 8655|      1|    sec = tv.tv_sec;
 8656|      2|  *t = (tv.tv_sec - sec) + 1.0e-6 * tv.tv_usec;
 8657|       |#else
 8658|       |  struct _timeb tv;
 8659|       |  _ftime(&tv);
 8660|       |  if (sec < 0)
 8661|       |    sec = tv.time;
 8662|       |  *t = (tv.time - sec) + 1.0e-3 * tv.millitm;
 8663|       |#endif
 8664|      2|}

/home/dvmuser3/andrey/npb-3.3-c/BT/header.h:
    1|       |//-------------------------------------------------------------------------//
    2|       |//                                                                         //
    3|       |//  This benchmark is a serial C version of the NPB BT code. This C        //
    4|       |//  version is developed by the Center for Manycore Programming at Seoul   //
    5|       |//  National University and derived from the serial Fortran versions in    //
    6|       |//  "NPB3.3-SER" developed by NAS.                                         //
    7|       |//                                                                         //
    8|       |//  Permission to use, copy, distribute and modify this software for any   //
    9|       |//  purpose with or without fee is hereby granted. This software is        //
   10|       |//  provided "as is" without express or implied warranty.                  //
   11|       |//                                                                         //
   12|       |//  Information on NPB 3.3, including the technical report, the original   //
   13|       |//  specifications, source code, results and information on how to submit  //
   14|       |//  new results, is available at:                                          //
   15|       |//                                                                         //
   16|       |//           http://www.nas.nasa.gov/Software/NPB/                         //
   17|       |//                                                                         //
   18|       |//  Send comments or suggestions for this C version to cmp@aces.snu.ac.kr  //
   19|       |//                                                                         //
   20|       |//          Center for Manycore Programming                                //
   21|       |//          School of Computer Science and Engineering                     //
   22|       |//          Seoul National University                                      //
   23|       |//          Seoul 151-744, Korea                                           //
   24|       |//                                                                         //
   25|       |//          E-mail:  cmp@aces.snu.ac.kr                                    //
   26|       |//                                                                         //
   27|       |//-------------------------------------------------------------------------//
   28|       |
   29|       |//-------------------------------------------------------------------------//
   30|       |// Authors: Sangmin Seo, Jungwon Kim, Jun Lee, Jeongho Nah, Gangwon Jo,    //
   31|       |//          and Jaejin Lee                                                 //
   32|       |//-------------------------------------------------------------------------//
   33|       |
   34|       |//---------------------------------------------------------------------
   35|       |//---------------------------------------------------------------------
   36|       |//
   37|       |//  header.h
   38|       |//
   39|       |//---------------------------------------------------------------------
   40|       |//---------------------------------------------------------------------
   41|       |
   42|       |//---------------------------------------------------------------------
   43|       |// The following include file is generated automatically by the
   44|       |// "setparams" utility. It defines
   45|       |//      maxcells:      the square root of the maximum number of processors
   46|       |//      problem_size:  12, 64, 102, 162 (for class T, A, B, C)
   47|       |//      dt_default:    default time step for this problem size if no
   48|       |//                     config file
   49|       |//      niter_default: default number of iterations for this problem size
   50|       |//---------------------------------------------------------------------
   51|       |
   52|       |#include "npbparams.h"
   53|       |
   54|       |#undef max
   55|       |#undef min
   56|       |#include "type.h"
   57|       |
   58|       |#if 0
   59|       |// For TSAR
   60|       |enum { AA = 0, BB = 1, CC = 2, BLOCK_SIZE = 5 };
   61|       |#else
   62|       |// For CDVMH
   63|  25.4G|#define AA 0
   64|  60.2G|#define BB 1
   65|  75.7G|#define CC 2
   66|  5.25G|#define BLOCK_SIZE 5
   67|       |#endif
   68|       |
   69|       |/* common /global/ */
   70|       |extern int grid_points[3];
   71|       |extern logical timeron;
   72|       |
   73|       |/* common /constants/ */
   74|       |extern double tx1, tx2, tx3, ty1, ty2, ty3, tz1, tz2, tz3, dx1, dx2, dx3, dx4,
   75|       |    dx5, dy1, dy2, dy3, dy4, dy5, dz1, dz2, dz3, dz4, dz5, dssp, dt, ce[5][13],
   76|       |    dxmax, dymax, dzmax, xxcon1, xxcon2, xxcon3, xxcon4, xxcon5, dx1tx1, dx2tx1,
   77|       |    dx3tx1, dx4tx1, dx5tx1, yycon1, yycon2, yycon3, yycon4, yycon5, dy1ty1,
   78|       |    dy2ty1, dy3ty1, dy4ty1, dy5ty1, zzcon1, zzcon2, zzcon3, zzcon4, zzcon5,
   79|       |    dz1tz1, dz2tz1, dz3tz1, dz4tz1, dz5tz1, dnxm1, dnym1, dnzm1, c1c2, c1c5,
   80|       |    c3c4, c1345, conz1, c1, c2, c3, c4, c5, c4dssp, c5dssp, dtdssp, dttx1,
   81|       |    dttx2, dtty1, dtty2, dttz1, dttz2, c2dttx1, c2dtty1, c2dttz1, comz1, comz4,
   82|       |    comz5, comz6, c3c4tx3, c3c4ty3, c3c4tz3, c2iv, con43, con16;
   83|       |
   84|       |enum {
   85|       |  IMAX = PROBLEM_SIZE,
   86|       |  JMAX = PROBLEM_SIZE,
   87|       |  KMAX = PROBLEM_SIZE,
   88|       |  IMAXP = IMAX / 2 * 2,
   89|       |  JMAXP = JMAX / 2 * 2,
   90|       |  IMAXP1 = IMAXP + 1,
   91|       |  JMAXP1 = JMAXP + 1
   92|       |};
   93|       |
   94|       |// to improve cache performance, grid dimensions padded by 1
   95|       |// for even number sizes only.
   96|       |/* common /fields/ */
   97|       |#pragma dvm array
   98|       |extern double us[KMAX][JMAXP + 1][IMAXP + 1];
   99|       |#pragma dvm array
  100|       |extern double vs[KMAX][JMAXP + 1][IMAXP + 1];
  101|       |#pragma dvm array
  102|       |extern double ws[KMAX][JMAXP + 1][IMAXP + 1];
  103|       |#pragma dvm array
  104|       |extern double qs[KMAX][JMAXP + 1][IMAXP + 1];
  105|       |#pragma dvm array
  106|       |extern double rho_i[KMAX][JMAXP + 1][IMAXP + 1];
  107|       |#pragma dvm array
  108|       |extern double square[KMAX][JMAXP + 1][IMAXP + 1];
  109|       |#pragma dvm array
  110|       |extern double forcing[KMAX][JMAXP + 1][IMAXP + 1][5];
  111|       |#pragma dvm array
  112|       |extern double u[KMAX][JMAXP + 1][IMAXP + 1][5];
  113|       |#pragma dvm array
  114|       |extern double rhs[KMAX][JMAXP + 1][IMAXP + 1][5];
  115|       |
  116|       |/* common /work_1d/ */
  117|       |extern double cuf[PROBLEM_SIZE + 1];
  118|       |extern double q[PROBLEM_SIZE + 1];
  119|       |extern double ue[PROBLEM_SIZE + 1][5];
  120|       |extern double buf[PROBLEM_SIZE + 1][5];
  121|       |
  122|       |//-----------------------------------------------------------------------
  123|       |// Timer constants
  124|       |//-----------------------------------------------------------------------
  125|       |enum {
  126|       |  t_total = 1,
  127|       |  t_rhsx = 2,
  128|       |  t_rhsy = 3,
  129|       |  t_rhsz = 4,
  130|       |  t_rhs = 5,
  131|       |  t_xsolve = 6,
  132|       |  t_ysolve = 7,
  133|       |  t_zsolve = 8,
  134|       |  t_rdis1 = 9,
  135|       |  t_rdis2 = 10,
  136|       |  t_add = 11,
  137|       |  t_last = 11,
  138|       |};
  139|       |
  140|       |void initialize();
  141|       |void lhsinit(double lhs[][3][5][5], int size);
  142|       |void exact_solution(double xi, double eta, double zeta, double dtemp[5]);
  143|       |void exact_rhs();
  144|       |void set_constants();
  145|       |void adi();
  146|       |void compute_rhs();
  147|       |void x_solve();
  148|       |void y_solve();
  149|       |void matvec_sub(double ablock[5][5], double avec[5], double bvec[5]);
  150|       |void matmul_sub(double ablock[5][5], double bblock[5][5], double cblock[5][5]);
  151|       |void binvcrhs(double lhs[5][5], double c[5][5], double r[5]);
  152|       |void binvrhs(double lhs[5][5], double r[5]);
  153|       |void z_solve();
  154|       |void add();
  155|       |void error_norm(double rms[5]);
  156|       |void rhs_norm(double rms[5]);
  157|       |void verify(int no_time_steps, char *class, logical *verified);

/home/dvmuser3/andrey/npb-3.3-c/BT/npbparams.h:
    1|       |/* CLASS = A */
    2|       |/*
    3|       |   This file is generated automatically by the setparams utility.
    4|       |   It sets the number of processors and the class of the NPB
    5|       |   in this directory. Do not modify it by hand.   
    6|       |*/
    7|      3|#define PROBLEM_SIZE   64
    8|      1|#define NITER_DEFAULT  200
    9|      1|#define DT_DEFAULT     0.0008
   10|       |
   11|       |#define CONVERTDOUBLE  false
   12|      1|#define COMPILETIME "06 Apr 2024"
   13|      1|#define NPBVERSION "3.3.1"
   14|      1|#define CS1 "clang"
   15|      1|#define CS2 "clang"
   16|      1|#define CS3 "-lm"
   17|      1|#define CS4 "-I ../common"
   18|      1|#define CS5 "-c -g -O3 -fprofile-instr-generate -fcovera..."
   19|      1|#define CS6 "-O3 -fprofile-instr-generate -fcoverage-map..."
   20|       |#define CS7 "randdp"

/home/dvmuser3/andrey/npb-3.3-c/common/type.h:
    1|       |#ifndef __TYPE_H__
    2|       |#define __TYPE_H__
    3|       |
    4|       |typedef enum { false, true } logical;
    5|       |typedef struct { 
    6|       |  double real;
    7|       |  double imag;
    8|       |} dcomplex;
    9|       |
   10|       |
   11|       |#define min(x,y)    ((x) < (y) ? (x) : (y))
   12|      4|#define max(x,y)    ((x) > (y) ? (x) : (y))
   13|       |
   14|       |#endif //__TYPE_H__

/home/dvmuser3/andrey/npb-3.3-c/common/wtime.h:
    1|       |/* C/Fortran interface is different on different machines. 
    2|       | * You may need to tweak this.
    3|       | */
    4|       |
    5|       |
    6|       |#if defined(IBM)
    7|       |#define wtime wtime
    8|       |#elif defined(CRAY)
    9|       |#define wtime WTIME
   10|       |#else
   11|      2|#define wtime wtime_
   12|       |#endif

